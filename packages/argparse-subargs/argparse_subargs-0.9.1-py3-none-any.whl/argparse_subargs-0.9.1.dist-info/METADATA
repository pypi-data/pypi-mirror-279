Metadata-Version: 2.3
Name: argparse_subargs
Version: 0.9.1
Summary: Parse parameter lists in argparse arguments, e.g. --arg sub1 sub2=val ...
Project-URL: Homepage, https://github.com/v-r-b/argparse_subargs
Project-URL: Issues, https://github.com/v-r-b/argparse_subargs/issues
Author-email: volker <volker@vrbdev.eu>
Maintainer-email: volker <volker@vrbdev.eu>
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.9
Requires-Dist: designpatterns-vrb
Description-Content-Type: text/markdown

# argparse_subargs

Parse parameter lists in argparse arguments, e.g. --arg sub1 sub2=val ...

  - On PyPI: https://pypi.org/project/argparse-subargs/
  - On GitHub: https://github.com/v-r-b/argparse_subargs

This module defines:

```class SubargParser```
  
Parser for structured sub-arguments of argparse arguments. The subarguments
can be positional arguments or keyword-arguments, e.g.:
myprog.py --print Welcome Message name=Michael role=brother

```class SubargAction```
  
Action class to be used with a SubargParser instance. To do so, use arguments
action=SubargAction and subarg_parser=<SubargParser instance> when calling
add_parameter() method of ArgumentParser.

```class SubargHelpFormatter```
  
Formatter for help when using action=SubargAction in add_parameter()
of ArgumentParser. Uses SubargHelpFormatterMixin and HelpFormatter
to do the actual work.

```class SubargHelpFormatterMixin```
  
Mixin for creating formatter classes for use with ArgumentParser
when SubargHelpFormatter is not suitable. This could, e.g., be
```
class MyDefaultsFormatter(
         SubargHelpFormatterMixin, 
         argparse.ArgumentDefaultsHelpFormatter)
    pass
```
```class PSubarg```
  
Positional subarg description with \_\_eq__ operator.

```class KWSubarg```
  
Keyword subarg description with \_\_eq__ operator.