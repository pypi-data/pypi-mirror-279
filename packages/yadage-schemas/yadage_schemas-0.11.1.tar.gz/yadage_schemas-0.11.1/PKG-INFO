Metadata-Version: 2.1
Name: yadage-schemas
Version: 0.11.1
Summary: schemas for yadage and packtivity
Author: Lukas Heinrich, Matthew Feickert
Author-email: lukas.heinrich@gmail.com, matthew.feickert@cern.ch
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: jsonref
Requires-Dist: pyyaml
Requires-Dist: requests[security]>=2.9
Requires-Dist: jsonschema<=4.9.1
Requires-Dist: click
Requires-Dist: six>=1.4.0
Requires-Dist: importlib-resources>=5.10; python_version < "3.9"
Provides-Extra: develop
Requires-Dist: pyflakes; extra == "develop"
Requires-Dist: pytest>=3.2.0; extra == "develop"
Requires-Dist: pytest-cov>=2.5.1; extra == "develop"
Requires-Dist: python-coveralls; extra == "develop"

# yadage-schemas

[![DOI](https://zenodo.org/badge/54061494.svg)](https://zenodo.org/badge/latestdoi/54061494)
[![PyPI version](https://badge.fury.io/py/yadage-schemas.svg)](https://badge.fury.io/py/yadage-schemas)

[![CI](https://github.com/yadage/yadage-schemas/actions/workflows/ci.yml/badge.svg)](https://github.com/yadage/yadage-schemas/actions/workflows/ci.yml?query=branch%3Amain)

This package holds JSON schema definitions for preserving individual processing tasks of scientific workflows (referred to "packtivities" since they including information where to find their respective prepackage sofware environments) as well as schemas to define declaratively workflows that orchestrate multiple of these steps using directed acyclic graphs (DAGs)

Workflows defined this way can be read and executed by these packages:

* Packtivity: https://github.com/yadage/packtivity
* Yadage: https://github.com/yadage/yadage

