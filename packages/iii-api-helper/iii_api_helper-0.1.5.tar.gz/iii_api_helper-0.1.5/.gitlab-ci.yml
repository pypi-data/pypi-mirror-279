include:
  - template: Jobs/Code-Quality.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/License-Scanning.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml

workflow:
  rules:
    - changes:
        - /*.py
      when: always

stages:
  - build
  - test
  - publish

Coverage and pytest:
  stage: test
  parallel:
    matrix:
      - PY_VERSION: [ "3.10", "3.11", "3.12" ]
  image: python:${PY_VERSION}
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    UV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/uv"
  cache:
    paths:
      - .cache/pip
      - .cache/uv
      - .venv
  before_script:
    - pip install uv
    - uv venv
    - uv pip install -e . -U
    - uv pip install pytest pytest-cov pytest-mock coverage
    - source .venv/bin/activate
  script:
    - coverage run -m pytest -v --junitxml=report.xml
    - coverage report
    - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    expire_in: 1 week
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

Build:
  stage: build
  image: python:3.10
  variables:
    UV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/uv"
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    HATCH_CACHE_DIR: "$CI_PROJECT_DIR/.cache/hatch"
  cache:
    paths:
      - .cache
      - .venv
  before_script:
    - pip install uv
    - uv venv
    - uv pip install hatch
    - source .venv/bin/activate
  script:
    - hatch build --clean
  artifacts:
    paths:
      - dist/*
  rules:
    - if: "$CI_COMMIT_TAG"

Publish:
  stage: publish
  image: python:3.10
  needs:
    - job: Build
      artifacts: true
  variables:
    UV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/uv"
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    HATCH_CACHE_DIR: "$CI_PROJECT_DIR/.cache/hatch"
    HATCH_INDEX_USER: "__token__"
    HATCH_INDEX_AUTH: "$PYPI_TOKEN"
  cache:
    paths:
      - .cache
      - .venv
  before_script:
    - pip install uv
    - uv venv
    - uv pip install hatch
    - source .venv/bin/activate
  script:
    - hatch publish --no-prompt
  rules:
    - if: "$CI_COMMIT_TAG"
