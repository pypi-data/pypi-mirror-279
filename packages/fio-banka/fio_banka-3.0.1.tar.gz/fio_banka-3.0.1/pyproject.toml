[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fio_banka"
dynamic = ["version"]
authors = [{ name = "Petr Beranek", email = "petrberanek.mail@gmail.com" }]
description = "Fio Banka API"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
keywords = ["finance", "fio", "bank", "api", "czech"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Financial and Insurance Industry",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: MIT License",
  "Topic :: Communications",
  "Topic :: Office/Business :: Financial",
]
# Make sure deps (e.g. for Mypy) in Pipfile and .pre-commit-config.yaml are
# in sync.
dependencies = ["requests~=2.31"]

[project.urls]
Homepage = "https://github.com/peberanek/fio-banka"

[tool.setuptools_scm]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
# Configuration: https://docs.astral.sh/ruff/configuration/
# Rules: https://docs.astral.sh/ruff/rules/

line-length = 100

select = [
  "F",      # Pyflakes
  "E",      # pycodestyle
  "C90",    # mccabe
  "I",      # isort
  "N",      # pep8-naming
  "D",      # pydocstyle
  "UP",     # pyupgrade
  "YTT",    # flake8-2020
  "S",      # flake8-bandit
  "BLE",    # flake8-blind-except
  "FBT",    # flake8-boolean-trap
  "B",      # flake8-bugbear
  "A",      # flake8-builtins
  "COM",    # flake8-commas
  "C4",     # flake8-comprehensions
  "T10",    # flake8-debugger
  "EXE",    # flake8-executable
  "FA",     # flake8-future-annotations
  "ISC",    # flake8-implicit-str-concat
  "G",      # flake8-logging-format
  "INP",    # flake8-no-pep420
  "PIE",    # flake8-pie
  "T20",    # flake8-print
  "PT",     # flake8-pytest-style
  "Q",      # flake8-quotes
  "RSE",    # flake8-raise
  "RET",    # flake8-return
  "SLF",    # flake8-self
  "SIM",    # flake8-simplify
  "TCH",    # flake8-type-checking
  "INT",    # flake8-gettext
  "ARG",    # flake8-unused-arguments
  "PTH",    # flake8-use-pathlib
  "FIX001", # flake8-fixme
  "FIX003", # flake8-fixme
  "PGH",    # pygrep-hooks
  "PL",     # pylint
  "TRY",    # tryceptors
  "FLY",    # flynt
  "PERF",   # Perflint
  "RUF",    # Ruff-specific rules
]

ignore = [
  # Conflicting formatter rules (https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules)
  "W191",
  "E111",
  "E114",
  "E117",
  "D206",
  "D300",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "COM812",
  "COM819",
  "ISC001",
  "ISC002",
  # Other
  "TRY003",
]

unfixable = [
  # These may break temporarily commented-out code
  "F401",
  "F841",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["D", "S"]

[tool.ruff.pydocstyle]
convention = "google"
