"""
Implementation of the Persona class.
"""

import logging
from typing import Any

from fluxus.lineage import LineageOrigin

from pytools.repr import HasDictRepr

log = logging.getLogger(__name__)

__all__ = [
    "Persona",
]


class Persona(LineageOrigin, HasDictRepr):
    """
    A fictitious persona interacting with an LLM system, generated by
    a :class:`.PersonaProducer`.
    """

    #: The archetype upon which this persona is based
    archetype: str

    #: The description of the persona
    description: str

    def __init__(self, *, archetype: str, description: str) -> None:
        """
        :param archetype: the archetype of the persona
        :param description: the description of the persona
        """
        super().__init__()
        self.archetype = archetype
        self.description = description

    @property
    def product_name(self) -> str:
        """[see superclass]"""
        return Persona.__name__

    def __eq__(self, other: Any) -> bool:
        return (
            type(self) is type(other)
            and self.archetype == other.archetype
            and self.description == other.description
        )

    def __hash__(self) -> int:
        return hash((self.archetype, self.description))
