# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import pydantic_v1
from .top_logprobs import TopLogprobs


class LogprobsContent(pydantic_v1.BaseModel):
    """
    An OpenAI API compatible schema for logprobs output.
    """

    bytes: typing.Optional[typing.List[typing.Any]] = None
    logprob: float = pydantic_v1.Field()
    """
    Logprob corresponding to the token
    """

    token: str = pydantic_v1.Field()
    """
    New generated token or token from prompt for loglikelihood case
    """

    top_logprobs: typing.Optional[typing.List[TopLogprobs]] = pydantic_v1.Field(default=None)
    """
    List of top tokens info
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
