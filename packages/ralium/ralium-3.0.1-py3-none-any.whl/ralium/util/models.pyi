from pathlib import Path
from typing import Tuple, Dict, Any

class StrPath(str):
    def __new__(cls, *args: Tuple[Path | str]) -> str: ...

class NamedDict(dict):
    def __init__(self, iterable: Dict[str, Any] | None = ...) -> None: ...
    def __getattr__(self, name: str) -> Any: ...

class NestedNamedDict(NamedDict):
    def __getattr__(self, name: str, value: Any) -> Any: ...