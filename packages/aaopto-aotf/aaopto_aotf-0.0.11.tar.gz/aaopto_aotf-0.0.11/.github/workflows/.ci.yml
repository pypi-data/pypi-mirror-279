name: CI

on:
  pull_request:
    branches: [ main ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  commitlint:
    name: Lint Commit Message
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Commitlint
      uses: wagoid/commitlint-github-action@v5

  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Lint Code Base
      uses: github/super-linter/slim@v4
      # Slim image does not include linters: rust, dotenv, armtk, pwsh, c#
      env:
        VALIDATE_ALL_CODEBASE: false
        DEFAULT_BRANCH: main
        LINTER_RULES_PATH: /
        # non-default config files
        PYTHON_BLACK_CONFIG_FILE: pyproject.toml
        PYTHON_ISORT_CONFIG_FILE: pyproject.toml
        # disable linters
        VALIDATE_PYTHON_PYLINT: false

  ci:
    name: Run CI Tasks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9', '3.10' ]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        python -m pip install -e .[dev]

    - name: Generate coverage report
      run: coverage run -m unittest discover && coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        env_vars: OS,PYTHON
        # fail_ci_if_error: true # optional (default = false)
        files: ./coverage.xml # optional
        flags: unittests # optional
        name: codecov-umbrella # optional
        verbose: true # optional (default = false)

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run interrogate
      run: interrogate .

    - name: Auto generate rst source files for documentation
      run: sphinx-apidoc -o doc_template/source src
    
    - name: Auto generate documentation
      run: sphinx-build -b html doc_template/source/ doc_template/build/html
