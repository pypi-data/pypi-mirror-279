# THIS FILE HAS BEEN GENERATED AUTOMATICALLY BY capnpy
# do not edit by hand
# generated on 2024-06-16 06:08
# cython: language_level=2

from capnpy cimport ptr as _ptr
from capnpy.struct_ cimport Struct as _Struct
from capnpy.struct_ cimport check_tag as _check_tag
from capnpy.struct_ import undefined as _undefined
from capnpy.enum import enum as _enum, fill_enum as _fill_enum
from capnpy.enum cimport BaseEnum as _BaseEnum
from capnpy.type import Types as _Types
from capnpy.segment.segment cimport Segment as _Segment
from capnpy.segment.segment cimport MultiSegment as _MultiSegment
from capnpy.segment.builder cimport SegmentBuilder as _SegmentBuilder
from capnpy.list cimport List as _List
from capnpy.list cimport PrimitiveItemType as _PrimitiveItemType
from capnpy.list cimport BoolItemType as _BoolItemType
from capnpy.list cimport TextItemType as _TextItemType
from capnpy.list cimport TextUnicodeItemType as _TextUnicodeItemType
from capnpy.list cimport StructItemType as _StructItemType
from capnpy.list cimport EnumItemType as _EnumItemType
from capnpy.list cimport VoidItemType as _VoidItemType
from capnpy.list cimport ListItemType as _ListItemType
from capnpy.anypointer import AnyPointer as _AnyPointer
from capnpy.util import text_bytes_repr as _text_bytes_repr
from capnpy.util import text_unicode_repr as _text_unicode_repr
from capnpy.util import data_repr as _data_repr
from capnpy.util import float32_repr as _float32_repr
from capnpy.util import float64_repr as _float64_repr
from capnpy.util import extend_module_maybe as _extend_module_maybe
from capnpy.util import check_version as _check_version
from capnpy.util import encode_maybe as _encode_maybe
from capnpy cimport _hash
from capnpy.list cimport void_list_item_type as _void_list_item_type
from capnpy.list cimport bool_list_item_type as _bool_list_item_type
from capnpy.list cimport int8_list_item_type as _int8_list_item_type
from capnpy.list cimport uint8_list_item_type as _uint8_list_item_type
from capnpy.list cimport int16_list_item_type as _int16_list_item_type
from capnpy.list cimport uint16_list_item_type as _uint16_list_item_type
from capnpy.list cimport int32_list_item_type as _int32_list_item_type
from capnpy.list cimport uint32_list_item_type as _uint32_list_item_type
from capnpy.list cimport int64_list_item_type as _int64_list_item_type
from capnpy.list cimport uint64_list_item_type as _uint64_list_item_type
from capnpy.list cimport float32_list_item_type as _float32_list_item_type
from capnpy.list cimport float64_list_item_type as _float64_list_item_type
from capnpy.list cimport data_list_item_type as _data_list_item_type
from capnpy.list cimport text_bytes_list_item_type as _text_bytes_list_item_type
from capnpy.list cimport text_unicode_list_item_type as _text_unicode_list_item_type
__capnpy_id__ = 0xdfd31317d35f60d9
__capnpy_version__ = '0.10.1'
__capnproto_version__ = '0.5.3.1'
# schema compiled with --no-version-check, skipping the call to _check_version
import podping_schemas.org.podcastindex.podping.podping_write as _podping_write_capnp
import podping_schemas.rust as _rust_capnp
from capnpy.schema import CodeGeneratorRequest as _CodeGeneratorRequest
from capnpy.annotate import Options as _Options
from capnpy.reflection import ReflectionData as _ReflectionData
class _podping_write_error_ReflectionData(_ReflectionData):
    request = _CodeGeneratorRequest.from_buffer(_Segment(b'\x00\x00\x00\x00\x00\x00\x02\x00\x05\x00\x00\x00\xcf\x03\x00\x00\xd1\x07\x00\x00\x1f\x00\x00\x00,\x00\x00\x00\x05\x00\x06\x00\xd9`_\xd3\x17\x13\xd3\xdfO\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xcd\x01\x00\x00\xaa\x02\x00\x00\xf5\x01\x00\x00\'\x00\x00\x00\x1d\x02\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x03E\xd1l8\xee\xab\x1b\x00\x00\x00\x05\x00\x01\x00\x83\xd0\x8d<L\xc1\xb3\x83\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00)\x02\x00\x00B\x01\x00\x009\x02\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x004\x02\x00\x00\x03\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00HR\x83\xde3\xf5\x8f\xc2U\x00\x00\x00\x01\x00\x01\x00\xd9`_\xd3\x17\x13\xd3\xdf\x01\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00%\x02\x00\x00:\x03\x00\x00U\x02\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Q\x02\x00\x00w\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x83\xd0\x8d<L\xc1\xb3\x83\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb5\x02\x00\x00\xda\x00\x00\x00\xc1\x02\x00\x007\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x89\xbc\xec\xac\xdf\x1f\x9a\xd9>\x00\x00\x00\x02\x00\x00\x00\xebdQ\xa4\xe4\xdf\xcc\x9a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc5\x02\x00\x00b\x02\x00\x00\xe9\x02\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe5\x02\x00\x00O\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb5\x8fJ\x80\x8e\xf6\x88\xf4=\x00\x00\x00\x01\x00\x01\x00\xc2\\_\xf8\x91{\x91\x9b\x01\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf9\x02\x00\x00R\x02\x00\x00\x1d\x03\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19\x03\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc2\\_\xf8\x91{\x91\x9b7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb1\x03\x00\x00\xea\x01\x00\x00\xcd\x03\x00\x00\x17\x00\x00\x00\xdd\x03\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe&\xb6\xc8\x1f\x8f\xda\xed8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe9\x03\x00\x00\xf2\x01\x00\x00\x05\x04\x00\x00\x17\x00\x00\x00\x15\x04\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xecy\x8ag1\x91\xa6\xa4U\x00\x00\x00\x02\x00\x00\x00\xd9`_\xd3\x17\x13\xd3\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00!\x04\x00\x00Z\x03\x00\x00U\x04\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Q\x04\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xa2v\xa5u\x16\xe8\xaa>\x00\x00\x00\x02\x00\x00\x00\xfe&\xb6\xc8\x1f\x8f\xda\xed\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00I\x04\x00\x00b\x02\x00\x00m\x04\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00i\x04\x00\x00\xcf\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xebdQ\xa4\xe4\xdf\xcc\x9a8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x99\x05\x00\x00\xf2\x01\x00\x00\xb5\x05\x00\x00\x17\x00\x00\x00\xc5\x05\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00/github/workspace/podping_schemas/org/podcastindex/podping/podping_write_error.capnp\x00\x00\x00\x00\x08\x00\x00\x00\x01\x00\x01\x00\xecy\x8ag1\x91\xa6\xa4\t\x00\x00\x00\xb2\x00\x00\x00HR\x83\xde3\xf5\x8f\xc2\r\x00\x00\x00\x92\x00\x00\x00PodpingWriteErrorType\x00\x00\x00PodpingWriteError\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x01\x00\x02\x00d\x03E\xd1l8\xee\xab\x04\x00\x00\x00\x02\x00\x01\x00\x1c\x00\x00\x00\x00\x00\x01\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xda\x00\x00\x00org::podcastindex::podping\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00podping_schemas/rust.capnp:parentModule\x00\x00\x00\x00\x00\x01\x00\x01\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00/github/workspace/podping_schemas/org/podcastindex/podping/podping_write_error.capnp:PodpingWriteError\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x08\x00\x00\x00\x03\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x03\x00\x01\x004\x00\x00\x00\x02\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x03\x00\x01\x00<\x00\x00\x00\x02\x00\x01\x00podpingWrite\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\xb5\x8fJ\x80\x8e\xf6\x88\xf4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00errorType\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\xecy\x8ag1\x91\xa6\xa4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00podping_schemas/rust.capnp\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x01\x00\x01\x00\xd0f\x01\x10mL\xfe\xc2\x11\x00\x00\x00*\x00\x00\x00d\x03E\xd1l8\xee\xab\r\x00\x00\x00j\x00\x00\x00N\x96\xe1N,\xf2\xfe\xab\r\x00\x00\x00:\x00\x00\x00name\x00\x00\x00\x00parentModule\x00\x00\x00\x00option\x00\x00podping_schemas/org/podcastindex/podping/podping_reason.capnp:PodpingReason\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x0c\x00\x00\x00\x01\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00update\x00\x00live\x00\x00\x00\x00liveEnd\x00podping_schemas/org/podcastindex/podping/podping_write.capnp:PodpingWrite\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x0c\x00\x00\x00\x03\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x03\x00\x01\x00L\x00\x00\x00\x02\x00\x01\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x03\x00\x01\x00P\x00\x00\x00\x02\x00\x01\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x03\x00\x01\x00T\x00\x00\x00\x02\x00\x01\x00medium\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x80\xa2v\xa5u\x16\xe8\xaa\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00reason\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x89\xbc\xec\xac\xdf\x1f\x9a\xd9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00iri\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00podping_schemas/org/podcastindex/podping/podping_write.capnp\x00\x00\x00\x00\x04\x00\x00\x00\x01\x00\x01\x00\xb5\x8fJ\x80\x8e\xf6\x88\xf4\x01\x00\x00\x00j\x00\x00\x00PodpingWrite\x00\x00\x00\x00\x04\x00\x00\x00\x01\x00\x02\x00d\x03E\xd1l8\xee\xab\x04\x00\x00\x00\x02\x00\x01\x00\x1c\x00\x00\x00\x00\x00\x01\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xda\x00\x00\x00org::podcastindex::podping\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00podping_schemas/org/podcastindex/podping/podping_medium.capnp\x00\x00\x00\x04\x00\x00\x00\x01\x00\x01\x00\x80\xa2v\xa5u\x16\xe8\xaa\x01\x00\x00\x00r\x00\x00\x00PodpingMedium\x00\x00\x00\x04\x00\x00\x00\x01\x00\x02\x00d\x03E\xd1l8\xee\xab\x04\x00\x00\x00\x02\x00\x01\x00\x1c\x00\x00\x00\x00\x00\x01\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xda\x00\x00\x00org::podcastindex::podping\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00/github/workspace/podping_schemas/org/podcastindex/podping/podping_write_error.capnp:PodpingWriteErrorType\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x04\x00\x00\x00\x01\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00invalidIri\x00\x00\x00\x00\x00\x00podping_schemas/org/podcastindex/podping/podping_medium.capnp:PodpingMedium\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00L\x00\x00\x00\x01\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\xdd\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00mixed\x00\x00\x00podcast\x00podcastL\x00\x00\x00\x00\x00\x00\x00\x00music\x00\x00\x00musicL\x00\x00video\x00\x00\x00videoL\x00\x00film\x00\x00\x00\x00filmL\x00\x00\x00audiobook\x00\x00\x00\x00\x00\x00\x00audiobookL\x00\x00\x00\x00\x00\x00newsletter\x00\x00\x00\x00\x00\x00newsletterL\x00\x00\x00\x00\x00blog\x00\x00\x00\x00blogL\x00\x00\x00publisher\x00\x00\x00\x00\x00\x00\x00publisherL\x00\x00\x00\x00\x00\x00course\x00\x00courseL\x00podping_schemas/org/podcastindex/podping/podping_reason.capnp\x00\x00\x00\x04\x00\x00\x00\x01\x00\x01\x00\x89\xbc\xec\xac\xdf\x1f\x9a\xd9\x01\x00\x00\x00r\x00\x00\x00PodpingReason\x00\x00\x00\x04\x00\x00\x00\x01\x00\x02\x00d\x03E\xd1l8\xee\xab\x04\x00\x00\x00\x02\x00\x01\x00\x1c\x00\x00\x00\x00\x00\x01\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xda\x00\x00\x00org::podcastindex::podping\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x01\x00\x02\x00\xd9`_\xd3\x17\x13\xd3\xdf\x05\x00\x00\x00\xaa\x02\x00\x00-\x00\x00\x00\'\x00\x00\x00/github/workspace/podping_schemas/org/podcastindex/podping/podping_write_error.capnp\x00\x00\x00\x00\x08\x00\x00\x00\x01\x00\x01\x00\xc2\\_\xf8\x91{\x91\x9b\t\x00\x00\x00\xf2\x01\x00\x00\x83\xd0\x8d<L\xc1\xb3\x83!\x00\x00\x00\xe2\x00\x00\x00/podping_schemas/org/podcastindex/podping/podping_write.capnp\x00\x00\x00/podping_schemas/rust.capnp\x00\x00\x00\x00\x00'), 8, 0, 2)
    default_options = _Options.from_buffer(_Segment(b'\x02\x00\x02\x00\x02\x00\x03\x00'), 0, 1, 0)
    pyx = True
_reflection_data = _podping_write_error_ReflectionData()

#### FORWARD DECLARATIONS ####

cdef class PodpingWriteError(_Struct)

cdef class PodpingWriteErrorType(_BaseEnum):
    __capnpy_id__ = 11864329909730703852
    __members__ = ('invalidIri',)
    @staticmethod
    cdef _new(long x, __prebuilt=(PodpingWriteErrorType(0),)):
        try:
            return __prebuilt[x]
        except IndexError:
            return PodpingWriteErrorType(x)
    @staticmethod
    def _new_hack(long x, __prebuilt=(PodpingWriteErrorType(0),)):
        try:
            return __prebuilt[x]
        except IndexError:
            return PodpingWriteErrorType(x)
_fill_enum(PodpingWriteErrorType)
_PodpingWriteErrorType_list_item_type = _EnumItemType(PodpingWriteErrorType)


#### DEFINITIONS ####

cdef class PodpingWriteError(_Struct):
    __capnpy_id__ = 0xc28ff533de835248
    __static_data_size__ = 1
    __static_ptrs_size__ = 1
    
    
    property podpingWrite:
        def __get__(self):
            # no union check
            cdef long offset = 0
            cdef long p = self._read_fast_ptr(offset)
            if _ptr.kind(p) == _ptr.FAR:
                offset, p = self._read_far_ptr(offset)
            else:
                offset += self._ptrs_offset
            if p == 0:
                return None
            cdef _Struct obj = _podping_write_capnp.PodpingWrite.__new__(_podping_write_capnp.PodpingWrite)
            obj._init_from_pointer(self._seg, offset, p)
            return obj
    
    cpdef get_podpingWrite(self):
        res = self.podpingWrite
        if res is None:
            return _podping_write_capnp.PodpingWrite.from_buffer(b'', 0, data_size=0, ptrs_size=0)
        return res
    
    cpdef has_podpingWrite(self):
        ptr = self._read_fast_ptr(0)
        return ptr != 0
    
    property errorType:
        def __get__(self):
            # no union check
            value = self._read_int16(0)
            if 0 != 0:
                value = (value ^ 0)
            return PodpingWriteErrorType._new(value)
    
    @staticmethod
    cdef __new(object podpingWrite=None, object errorType=0):
        cdef _SegmentBuilder builder
        cdef long pos
        builder = _SegmentBuilder()
        pos = builder.allocate(16)
        builder.copy_from_struct(pos + 8, _podping_write_capnp.PodpingWrite, podpingWrite)
        builder.write_int16(pos + 0, errorType)
        return builder.as_string()
    
    def __init__(object self, object podpingWrite=None, object errorType=0):
        _buf = PodpingWriteError.__new(podpingWrite, errorType)
        self._init_from_buffer(_buf, 0, 1, 1)
    
    cpdef shortrepr(self):
        parts = []
        if self.has_podpingWrite(): parts.append("podpingWrite = %s" % self.get_podpingWrite().shortrepr())
        parts.append("errorType = %s" % self.errorType)
        return "(%s)" % ", ".join(parts)

cdef _StructItemType _PodpingWriteError_list_item_type = _StructItemType(PodpingWriteError)


_extend_module_maybe(globals(), modname=__name__)