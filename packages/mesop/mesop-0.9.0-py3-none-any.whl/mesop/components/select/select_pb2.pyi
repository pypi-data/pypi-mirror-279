"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SelectType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DISABLED_FIELD_NUMBER: builtins.int
    DISABLE_RIPPLE_FIELD_NUMBER: builtins.int
    TAB_INDEX_FIELD_NUMBER: builtins.int
    PLACEHOLDER_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    ON_SELECT_OPENED_CHANGE_EVENT_HANDLER_ID_FIELD_NUMBER: builtins.int
    ON_SELECT_SELECTION_CHANGE_EVENT_HANDLER_ID_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    disabled: builtins.bool
    disable_ripple: builtins.bool
    tab_index: builtins.float
    placeholder: builtins.str
    value: builtins.str
    on_select_opened_change_event_handler_id: builtins.str
    on_select_selection_change_event_handler_id: builtins.str
    @property
    def options(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SelectOption]: ...
    label: builtins.str
    def __init__(
        self,
        *,
        disabled: builtins.bool | None = ...,
        disable_ripple: builtins.bool | None = ...,
        tab_index: builtins.float | None = ...,
        placeholder: builtins.str | None = ...,
        value: builtins.str | None = ...,
        on_select_opened_change_event_handler_id: builtins.str | None = ...,
        on_select_selection_change_event_handler_id: builtins.str | None = ...,
        options: collections.abc.Iterable[global___SelectOption] | None = ...,
        label: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["disable_ripple", b"disable_ripple", "disabled", b"disabled", "label", b"label", "on_select_opened_change_event_handler_id", b"on_select_opened_change_event_handler_id", "on_select_selection_change_event_handler_id", b"on_select_selection_change_event_handler_id", "placeholder", b"placeholder", "tab_index", b"tab_index", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["disable_ripple", b"disable_ripple", "disabled", b"disabled", "label", b"label", "on_select_opened_change_event_handler_id", b"on_select_opened_change_event_handler_id", "on_select_selection_change_event_handler_id", b"on_select_selection_change_event_handler_id", "options", b"options", "placeholder", b"placeholder", "tab_index", b"tab_index", "value", b"value"]) -> None: ...

global___SelectType = SelectType

@typing_extensions.final
class SelectOption(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LABEL_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    label: builtins.str
    value: builtins.str
    def __init__(
        self,
        *,
        label: builtins.str | None = ...,
        value: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["label", b"label", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["label", b"label", "value", b"value"]) -> None: ...

global___SelectOption = SelectOption
