import{d as h,V as x,W as y,G as b,f as g,c as v,g as o,h as w,u as V,o as k,j as u,k as a,A as B,B as r,v as C,U,H as d,I}from"./index-Cjd-zuQH.js";import{_ as E}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-BH1mXf4F.js";import{u as N}from"./usePageTitle-BFRz6fNu.js";import{u as P}from"./usePrefectApi-eMMnrjGh.js";const G=h({__name:"AutomationEdit",async setup(T){let t,m;const i=P(),c=x(),l=V(),p=y("automationId"),e=([t,m]=b(()=>i.automations.getAutomation(p.value)),t=await t,m(),t);N(`Edit Automation: ${e.name}`);const f=g(()=>[{text:"Automations",to:c.automations()},{text:e.name}]);async function A(_){try{await i.automations.updateAutomation(p.value,_),d(r.success.automationUpdate),l.push(c.automations())}catch(s){console.error(s);const n=I(s,r.error.automationUpdate);d(n,"error",{timeout:!1})}}return(_,s)=>{const n=w("p-layout-default");return k(),v(n,{class:"workspace-automation-create"},{header:o(()=>[u(a(U),{crumbs:f.value},{actions:o(()=>[u(a(B),{to:a(r).docs.automations},{default:o(()=>[C(" Documentation ")]),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:o(()=>[u(E,{automation:a(e),editing:"",onSubmit:A},null,8,["automation"])]),_:1})}}});export{G as default};
//# sourceMappingURL=AutomationEdit-U-ydo1Kk.js.map
