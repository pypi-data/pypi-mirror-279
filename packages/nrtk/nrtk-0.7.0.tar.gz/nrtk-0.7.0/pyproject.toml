[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

###############################################################################
[tool.poetry]
name = "nrtk"
# REMEMBER: `distutils.version.*Version` types can be used to compare versions
# from strings like this.
# This package prefers to use the strict numbering standard when possible.
version = "0.7.0"
description = "An open source toolkit for evaluating the natural robustness of computer vision algorithms."
license = "Apache-2.0"
authors = ["Kitware, Inc. <nrtk@kitware.com>"]
readme = "README.md"
packages = [{include = "nrtk"}]
documentation = "https://nrtk.readthedocs.io/"
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Unix',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]

[tool.poetry.dependencies]
python = "^3.8.1"
# Python capped to <3.13 because of:
# https://stackoverflow.com/questions/77431252/why-doesnt-poetry-select-the-good-version-of-my-dependency
numpy = [
    {version = ">=1.22,<1.25", python = "~3.8"}, # CVE-2021-34141
    {version = ">=1.22,^1.25", python = ">=3.9,<3.12" }, # CVE-2021-34141
    {version = "^1.26", python = ">=3.12,<3.13" } # numpy==1.26 is the first release supporting python 3.12
]
opencv-python = ">=4.6"
Pillow = ">=10.3.0" # CVE-2024-28219
scikit-image = [
    {version = ">=0.21,<0.22", python = ">=3.8,<3.12"},
    {version = ">=0.22", python = ">=3.12"}
]
smqtk-classifier = ">=0.19.0"
smqtk-core = ">=0.19"
smqtk-detection = ">=0.19.0"
smqtk-image-io = ">=0.17.1"
tqdm = ">=4.64"
pybsm = ">=0.4.3"
pycocotools = ">=2.0.6"
setuptools = ">=65.6.1"

[tool.poetry.extras]

[tool.poetry.group.dev.dependencies]
# Linting
flake8 = ">=6"
flake8-mutable = ">=1.2.0"
# Type checking
mypy = ">=0.991"
types-Pillow = ">=9.0"
types-setuptools = ">=65.6.0.1"
types-tqdm = ">=4.64"
# Testing
coverage = ">=6.5.0"
pytest = ">=7.2.0"
pytest-cov = ">=4.0.0"
# Jupyter notebook testing
notebook = ">=7.0.7"
papermill = ">=2.4.0"
# Docs
Sphinx = ">=5.3.0"
sphinx-rtd-theme = ">=1.1.1"
sphinx-prompt = ">=1.5.0"
livereload = ">=2.6.3"


[tool.poetry.scripts]

[tool.poetry.plugins."smqtk_plugins"]
# Add implementation sub-module exposure here.
"impls.gen_object_detector_blackbox_response.simple_generic_generator" = "nrtk.impls.gen_object_detector_blackbox_response.simple_generic_generator"
"impls.gen_object_detector_blackbox_response.simple_pybsm_generator" = "nrtk.impls.gen_object_detector_blackbox_response.simple_pybsm_generator"
"impls.perturb_image.generic.nop_perturber" = "nrtk.impls.perturb_image.generic.nop_perturber"
"impls.perturb_image.generic.PIL.enhance" = "nrtk.impls.perturb_image.generic.PIL.enhance"
"impls.perturb_image.generic.cv2.blur" = "nrtk.impls.perturb_image.generic.cv2.blur"
"impls.perturb_image.generic.skimage.random_noise" = "nrtk.impls.perturb_image.generic.skimage.random_noise"
"impls.perturb_image.pybsm.perturber" = "nrtk.impls.perturb_image.pybsm.perturber"
"impls.perturb_image.pybsm.jitter_otf_perturber" = "nrtk.impls.perturb_image.pybsm.jitter_otf_perturber"
"impls.perturb_image_factory.generic.step" = "nrtk.impls.perturb_image_factory.generic.step"
"impls.perturb_image_factory.pybsm" = "nrtk.impls.perturb_image_factory.pybsm"
"impls.score_detections.class_agnostic_pixelwise_iou_scorer" = "nrtk.impls.score_detections.class_agnostic_pixelwise_iou_scorer"
"impls.score_detections.coco_scorer" = "nrtk.impls.score_detections.coco_scorer"
"impls.score_detections.nop_scorer" = "nrtk.impls.score_detections.nop_scorer"
"impls.score_detections.random_scorer" = "nrtk.impls.score_detections.random_scorer"

###############################################################################
[tool.pytest.ini_options]
addopts = [
    "-lv",                              # Show local in trace-backs.
    "--doctest-modules",                # Increased verbosity.
    "--tb=long",                        # Trace-back print mode.
    "--cov=./nrtk",                     # Cover our package specifically
    "--cov=./tests",                    # Also cover our tests for dead spots
    "--cov-report=term",                # Coverage report to terminal
    "--cov-report=xml:coverage.xml",    # for external tool reporting
]
testpaths = [
    "tests",
    "nrtk",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]
