# .github/workflows/pypi_publish.yml
name: Build

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      wheel-distribution: ${{ steps.wheel-distribution.outputs.path }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 } # deep clone for setuptools-scm
      - uses: actions/setup-python@v5
        with: { python-version: "3.10" }
      - name: Run static analysis and format checkers
        run: pipx run --python python3.10 tox -e lint,type
      - name: Clean working directory
        run: pipx run --python python3.10 tox -e clean
      - name: Build package distribution files
        run: pipx run --python python3.10 tox -e build
      - name: Record the path of wheel distribution
        id: wheel-distribution
        run: echo "path=$(ls dist/*.whl)" >> $GITHUB_OUTPUT
      - name: Store the distribution files for use in other stages
        # `tests` and `publish` will use the same pre-built distributions,
        # so we make sure to release the exact same package that was tested
        uses: actions/upload-artifact@v4
        with:
          name: python-distribution-files
          path: dist/
          retention-days: 1

  test:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Retrieve pre-built distribution files
        uses: actions/download-artifact@v4
        with: { name: python-distribution-files, path: dist/ }
      - name: Run tests
        run: >-
          pipx run tox
          --installpkg '${{ needs.prepare.outputs.wheel-distribution }}' -e py311
          -- -n 5 -rFEx --durations 10 --color yes

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Retrieve pre-built distribution files
        uses: actions/download-artifact@v4
        with: { name: python-distribution-files, path: dist/ }
      - name: Publish Package
        env:
          TWINE_REPOSITORY: pypi
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_KEY }}
        run: pipx run tox -e publish
