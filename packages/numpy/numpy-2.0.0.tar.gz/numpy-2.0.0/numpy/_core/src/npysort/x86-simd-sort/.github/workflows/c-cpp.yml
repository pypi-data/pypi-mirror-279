name: Build and run tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  SKL-gcc9:

    runs-on: intel-ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt -y install g++-9 libgtest-dev meson curl git

    - name: Install Intel SDE
      run: |
        curl -o /tmp/sde.tar.xz https://downloadmirror.intel.com/784319/sde-external-9.24.0-2023-07-13-lin.tar.xz
        mkdir /tmp/sde && tar -xvf /tmp/sde.tar.xz -C /tmp/sde/
        sudo mv /tmp/sde/* /opt/sde && sudo ln -s /opt/sde/sde64 /usr/bin/sde

    - name: Build
      env:
        CXX: g++-9
      run: |
        make clean
        meson setup -Dbuild_tests=true --warnlevel 2 --werror --buildtype release builddir
        cd builddir
        ninja

    - name: Run test suite on SKL
      run: sde -skl -- ./builddir/testexe

  SKX-gcc10:

    runs-on: intel-ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt -y install g++-10 libgtest-dev meson curl git

    - name: Install Intel SDE
      run: |
        curl -o /tmp/sde.tar.xz https://downloadmirror.intel.com/784319/sde-external-9.24.0-2023-07-13-lin.tar.xz
        mkdir /tmp/sde && tar -xvf /tmp/sde.tar.xz -C /tmp/sde/
        sudo mv /tmp/sde/* /opt/sde && sudo ln -s /opt/sde/sde64 /usr/bin/sde

    - name: Build
      env:
        CXX: g++-10
      run: |
        make clean
        meson setup -Dbuild_tests=true --warnlevel 2 --werror --buildtype release builddir
        cd builddir
        ninja

    - name: Run test suite on SKX
      run: sde -skx -- ./builddir/testexe

  TGL-gcc11:

    runs-on: intel-ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt -y install g++-11 libgtest-dev meson curl git

    - name: Install Intel SDE
      run: |
        curl -o /tmp/sde.tar.xz https://downloadmirror.intel.com/784319/sde-external-9.24.0-2023-07-13-lin.tar.xz
        mkdir /tmp/sde && tar -xvf /tmp/sde.tar.xz -C /tmp/sde/
        sudo mv /tmp/sde/* /opt/sde && sudo ln -s /opt/sde/sde64 /usr/bin/sde

    - name: Build
      env:
        CXX: g++-11
      run: |
        make clean
        meson setup -Dbuild_tests=true --warnlevel 2 --werror --buildtype release builddir
        cd builddir
        ninja
    - name: Run test suite on TGL
      run: sde -tgl -- ./builddir/testexe

  SPR-gcc13:

    runs-on: intel-ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt -y install g++-13 libgtest-dev meson curl git

    - name: Install Intel SDE
      run: |
        curl -o /tmp/sde.tar.xz https://downloadmirror.intel.com/784319/sde-external-9.24.0-2023-07-13-lin.tar.xz
        mkdir /tmp/sde && tar -xvf /tmp/sde.tar.xz -C /tmp/sde/
        sudo mv /tmp/sde/* /opt/sde && sudo ln -s /opt/sde/sde64 /usr/bin/sde

    - name: Build examples
      env:
        CXX: g++-13
      run: |
        cd examples
        make all

    - name: Build
      env:
        CXX: g++-13
      run: |
        make clean
        meson setup -Dbuild_tests=true --warnlevel 2 --werror --buildtype release builddir
        cd builddir
        ninja

    - name: Run test suite on SPR
      run: sde -spr -- ./builddir/testexe

  SPR-gcc13-min-networksort:

    runs-on: intel-ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt -y install g++-13 libgtest-dev meson curl git

    - name: Install Intel SDE
      run: |
        curl -o /tmp/sde.tar.xz https://downloadmirror.intel.com/784319/sde-external-9.24.0-2023-07-13-lin.tar.xz
        mkdir /tmp/sde && tar -xvf /tmp/sde.tar.xz -C /tmp/sde/
        sudo mv /tmp/sde/* /opt/sde && sudo ln -s /opt/sde/sde64 /usr/bin/sde

    - name: Build
      env:
        CXX: g++-13
        CXXFLAGS: -DXSS_MINIMAL_NETWORK_SORT
      run: |
        make clean
        meson setup -Dbuild_tests=true --warnlevel 2 --werror --buildtype release builddir
        cd builddir
        ninja

    - name: List exported symbols
      run: |
        nm --demangle --dynamic --defined-only --extern-only builddir/libx86simdsortcpp.so

    - name: Run test suite on SPR
      run: sde -spr -- ./builddir/testexe

  manylinux-32bit:

    runs-on: intel-ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Build and test on 32-bit manylinux2014
      run: |
        docker run -v $(pwd):/xss quay.io/pypa/manylinux2014_i686 \
        /bin/bash -xc "source /xss/.github/workflows/build-test-on-32bit.sh"
