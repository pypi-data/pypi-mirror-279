import{V as f,B as u,W as k,_ as y,Y as n,Z as p,aF as b,S as r,bo as g,aJ as v,bD as j,m as E,aO as i,$ as l,X as I,aj as m}from"./admin-drawer-panel-CFthvbMb.js";import{A as x,a as B,b as N,c as L,R as O}from"./relation-chips-CFQRvVd2.js";import{d as C}from"./main-BsvrAp4n.js";import{V as c}from"./VTextField-DuOs5usq.js";import{V as U}from"./VCheckbox-BK0IPHyB.js";import{D as z}from"./datetime-column-DwrIUx_h.js";import{C as J}from"./change-password-dialog-CdCjAlM3.js";import{V}from"./VCheckboxBtn-DbVzgq3g.js";import"./VDialog-xrkpB5lc.js";import"./VSelect-C768JtGg.js";import"./VSelectionControl-DocEa9g1.js";import"./VSlideGroup-w7zv3wT_.js";import"./VTable-Bm3ZZq7k.js";import"./filter-Tm2kUX1m.js";import"./confirm-dialog-C-TnajF6.js";const D=["username","isStaff","isActive","groups"];Object.freeze(D);const A={username:"",password:"",passwordConfirm:"",isStaff:!1,isActive:!0,groups:[]};Object.freeze(A);const Y={name:"AdminUserCreateUpdateInputs",components:{AdminRelationPicker:x},props:{oldRow:{type:[Object,Boolean],default:!1}},emits:["change"],data(){return{rules:{username:[e=>!!e||"Username is required",e=>!!e&&!this.usernames.has(e.trim())||"Username already used"],password:[e=>!!e||"Password is required"],passwordConfirm:[e=>e===this.row.password||"Passwords must match"]},row:C.cloneDeep(this.oldRow||A)}},computed:{...f(u,{groups:e=>e.groups,users:e=>e.users}),usernames(){return this.nameSet(this.users,"username",this.oldRow,!0)}},watch:{row:{handler(e){this.$emit("change",e)},deep:!0},oldRow:{handler(e){this.row=C.cloneDeep(e)},deep:!0}},methods:{...k(u,["nameSet"])},UPDATE_KEYS:D,EMPTY_ROW:A},K={key:0};function G(e,o,h,_,s,R){const d=n("AdminRelationPicker");return p(),b("div",null,[r(c,{modelValue:s.row.username,"onUpdate:modelValue":o[0]||(o[0]=a=>s.row.username=a),autocomplete:"username",label:"Username",rules:s.rules.username,clearable:"",autofocus:"",onKeydown:o[1]||(o[1]=g(a=>e.$refs.password.focus(),["enter"]))},null,8,["modelValue","rules"]),h.oldRow?v("",!0):(p(),b("div",K,[r(c,{ref:"password",modelValue:s.row.password,"onUpdate:modelValue":o[2]||(o[2]=a=>s.row.password=a),autocomplete:"new-password",label:"Password",rules:s.rules.password,clearable:"",type:"password",onKeydown:o[3]||(o[3]=g(a=>e.$refs.passwordConfirm.focus(),["enter"]))},null,8,["modelValue","rules"]),r(c,{ref:"passwordConfirm",modelValue:s.row.passwordConfirm,"onUpdate:modelValue":o[4]||(o[4]=a=>s.row.passwordConfirm=a),autocomplete:"new-password",label:"Confirm Password",rules:s.rules.passwordConfirm,clearable:"",type:"password"},null,8,["modelValue","rules"])])),r(U,{modelValue:s.row.isStaff,"onUpdate:modelValue":o[5]||(o[5]=a=>s.row.isStaff=a),label:"Is Staff"},null,8,["modelValue"]),r(U,{modelValue:s.row.isActive,"onUpdate:modelValue":o[6]||(o[6]=a=>s.row.isActive=a),label:"Is Active"},null,8,["modelValue"]),r(d,{modelValue:s.row.groups,"onUpdate:modelValue":o[7]||(o[7]=a=>s.row.groups=a),label:"Groups",objs:e.groups,"title-key":"name","group-type":""},null,8,["modelValue","objs"])])}const M=y(Y,[["render",G]]),q={name:"AdminUsersTab",components:{AdminTable:B,AdminDeleteRowDialog:N,ChangePasswordDialog:J,AdminCreateUpdateDialog:L,DateTimeColumn:z,RelationChips:O},data(){return{AdminUserCreateUpdateInputs:j(M),headers:[{title:"Username",key:"username",align:"start"},{title:"Staff",key:"isStaff"},{title:"Active",key:"isActive"},{title:"Groups",key:"groups"},{title:"Last Active",key:"lastActive"},{title:"Last Login",key:"lastLogin"},{title:"Joined",key:"dateJoined"},{title:"Actions",key:"actions",sortable:!1}]}},computed:{...f(u,{users:e=>e.users,groups:e=>e.groups}),...f(E,{me:e=>e.user})},mounted(){this.loadTables(["Group","User"])},methods:{...k(u,["loadTables"])}},F={class:"tabHeader"},W=i("td",{class:"adminNoData",colspan:"100%"},[m(" No Users. "),i("div",null,[m(" This is an error. There should always be at least one Staff user."),i("br"),m(" You should not be able to see this page"),i("br"),m(" You should restart Codex with the CODEX_RESET_ADMIN=1 variable set."),i("br"),m(" See the "),i("a",{href:"https://github.com/ajslater/codex#reset-the-admin-password",target:"_blank"}," README ")])],-1);function X(e,o,h,_,s,R){const d=n("AdminCreateUpdateDialog"),a=n("RelationChips"),w=n("DateTimeColumn"),S=n("ChangePasswordDialog"),T=n("AdminDeleteRowDialog"),P=n("AdminTable");return p(),b("div",null,[i("header",F,[r(d,{table:"User",inputs:s.AdminUserCreateUpdateInputs,"max-width":"20em"},null,8,["inputs"])]),r(P,{"item-title":"username",headers:s.headers,items:e.users},{"no-data":l(()=>[W]),"item.isStaff":l(({item:t})=>[r(V,{"model-value":t.isStaff,disabled:""},null,8,["model-value"])]),"item.isActive":l(({item:t})=>[r(V,{"model-value":t.isActive,disabled:""},null,8,["model-value"])]),"item.groups":l(({item:t})=>[r(a,{pks:t.groups,objs:e.groups,"title-key":"name","group-type":""},null,8,["pks","objs"])]),"item.lastActive":l(({item:t})=>[r(w,{dttm:t.lastActive},null,8,["dttm"])]),"item.lastLogin":l(({item:t})=>[r(w,{dttm:t.lastLogin},null,8,["dttm"])]),"item.dateJoined":l(({item:t})=>[r(w,{dttm:t.dateJoined},null,8,["dttm"])]),"item.actions":l(({item:t})=>[r(d,{table:"User",inputs:s.AdminUserCreateUpdateInputs,"old-row":t,"max-width":"20em",size:"small",density:"compact"},null,8,["inputs","old-row"]),r(S,{user:t,"is-admin-mode":!0,size:"small",density:"compact"},null,8,["user"]),e.me.id!==t.pk?(p(),I(T,{key:0,table:"User",pk:t.pk,name:t.username,size:"small",density:"compact"},null,8,["pk","name"])):v("",!0)]),_:2},1032,["headers","items"])])}const ue=y(q,[["render",X]]);export{ue as default};
