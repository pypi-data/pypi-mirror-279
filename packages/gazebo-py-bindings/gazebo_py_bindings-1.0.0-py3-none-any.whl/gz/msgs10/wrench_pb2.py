# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gz/msgs/wrench.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gz.msgs import vector3d_pb2 as gz_dot_msgs_dot_vector3d__pb2
from gz.msgs import header_pb2 as gz_dot_msgs_dot_header__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='gz/msgs/wrench.proto',
  package='gz.msgs',
  syntax='proto3',
  serialized_options=b'\n\013com.gz.msgsB\014WrenchProtos',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x14gz/msgs/wrench.proto\x12\x07gz.msgs\x1a\x16gz/msgs/vector3d.proto\x1a\x14gz/msgs/header.proto\"\x97\x01\n\x06Wrench\x12\x1f\n\x06header\x18\x01 \x01(\x0b\x32\x0f.gz.msgs.Header\x12 \n\x05\x66orce\x18\x02 \x01(\x0b\x32\x11.gz.msgs.Vector3d\x12!\n\x06torque\x18\x03 \x01(\x0b\x32\x11.gz.msgs.Vector3d\x12\'\n\x0c\x66orce_offset\x18\x04 \x01(\x0b\x32\x11.gz.msgs.Vector3dB\x1b\n\x0b\x63om.gz.msgsB\x0cWrenchProtosb\x06proto3'
  ,
  dependencies=[gz_dot_msgs_dot_vector3d__pb2.DESCRIPTOR,gz_dot_msgs_dot_header__pb2.DESCRIPTOR,])




_WRENCH = _descriptor.Descriptor(
  name='Wrench',
  full_name='gz.msgs.Wrench',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='gz.msgs.Wrench.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='force', full_name='gz.msgs.Wrench.force', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='torque', full_name='gz.msgs.Wrench.torque', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='force_offset', full_name='gz.msgs.Wrench.force_offset', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=231,
)

_WRENCH.fields_by_name['header'].message_type = gz_dot_msgs_dot_header__pb2._HEADER
_WRENCH.fields_by_name['force'].message_type = gz_dot_msgs_dot_vector3d__pb2._VECTOR3D
_WRENCH.fields_by_name['torque'].message_type = gz_dot_msgs_dot_vector3d__pb2._VECTOR3D
_WRENCH.fields_by_name['force_offset'].message_type = gz_dot_msgs_dot_vector3d__pb2._VECTOR3D
DESCRIPTOR.message_types_by_name['Wrench'] = _WRENCH
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Wrench = _reflection.GeneratedProtocolMessageType('Wrench', (_message.Message,), {
  'DESCRIPTOR' : _WRENCH,
  '__module__' : 'gz.msgs.wrench_pb2'
  # @@protoc_insertion_point(class_scope:gz.msgs.Wrench)
  })
_sym_db.RegisterMessage(Wrench)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
