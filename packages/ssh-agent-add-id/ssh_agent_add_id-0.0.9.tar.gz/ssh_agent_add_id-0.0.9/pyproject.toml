[project]
name = "ssh-agent-add-id"
description = "A wrapper for ssh-add that checks whether a key has already been added to the SSH agent rather than prompting for the passphrase every time."
dynamic = []
authors = [
    { name = "Alexis Bergue" },
]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "pexpect ~= 4.9",
    "pydantic ~= 2.7",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX",
    "Topic :: System :: Networking",
]
keywords = [
    "ssh",
    "ssh-add",
    "ssh-agent",
    "authentication",
    "key",
    "identity",
    "vscode",
    "vs code",
    "visual studio code",
    "wsl",
    "wsl2",
    "git",
    "github",
    "gitlab",
    "bitbucket",
]
version = "0.0.9"

[project.license]
file = "LICENSE.txt"

[project.optional-dependencies]
dev = [
    "coverage ~= 7.5",
    "pytest ~= 8.2",
    "pytest-mock ~= 3.14",
    "ruff ~= 0.4",
]

[project.scripts]
ssh-agent-add-id = "ssh_agent_add_id.cli:main"

[project.urls]
Homepage = "https://github.com/alexisbg/ssh-agent-add-id"
Issues = "https://github.com/alexisbg/ssh-agent-add-id/issues"
Repository = "https://github.com/alexisbg/ssh-agent-add-id"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.version]
source = "file"
path = "src/ssh_agent_add_id/__init__.py"

[tool.pdm.scripts]
ruff_check = "ruff check --diff --ignore FIX002"
ruff_format = "ruff format --diff"
test_functional = "pytest tests/functional"
test_unit = "coverage run -m pytest tests/unit"

[tool.pdm.scripts.pre_coverage]
composite = [
    "test_unit",
]

[tool.pdm.scripts.coverage]
shell = "coverage report && coverage lcov"

[tool.pdm.scripts.diff]
composite = [
    "ruff_check",
    "ruff_format",
]

[tool.pdm.scripts.lint]
shell = "pyright; ruff check --ignore FIX002 ; ruff format --check"

[tool.pdm.scripts.test]
composite = [
    "test_unit",
    "test_functional",
]

[tool.coverage.run]
data_file = ".coverage/.coverage"
omit = [
    "*/tests/*",
]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.coverage.lcov]
output = ".coverage/lcov.info"

[tool.pyright]
include = [
    "src",
    "tests",
]
pythonVersion = "3.8"
typeCheckingMode = "basic"

[tool.ruff]
extend-exclude = [
    "*.stop",
]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "ANN",
    "D",
    "E",
    "F",
    "FIX",
    "I",
    "W",
]
ignore = [
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "D100",
    "D104",
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "D205",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "google"
