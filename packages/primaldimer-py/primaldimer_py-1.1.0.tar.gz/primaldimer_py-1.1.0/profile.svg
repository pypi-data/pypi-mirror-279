<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="650" onload="init(evt)" viewBox="0 0 1200 650" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="650" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --native -o profile.svg -- python measure.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="639.00"> </text><svg id="frames" x="10" width="1180" total_samples="11"><g><title>primaldimer_rs::calc_at_offset::h054f3634dcc5bdde (lib.rs:186) (1 samples, 9.09%)</title><rect x="0.0000%" y="356" width="9.0909%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="366.50">primaldimer_r..</text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::push::h9e9056892262d819 (mod.rs:1832) (1 samples, 9.09%)</title><rect x="0.0000%" y="372" width="9.0909%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="382.50">alloc::vec::V..</text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::as_mut_ptr::h87392cbe466a06df (mod.rs:1273) (1 samples, 9.09%)</title><rect x="0.0000%" y="388" width="9.0909%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="398.50">alloc::vec::V..</text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::ptr::heba08001c0236d91 (raw_vec.rs:223) (1 samples, 9.09%)</title><rect x="0.0000%" y="404" width="9.0909%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="414.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h8b0a27905ee0e54b (raw_vec.rs:302) (1 samples, 9.09%)</title><rect x="0.0000%" y="420" width="9.0909%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="430.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::grow_amortized::h9fc0a54549054100 (raw_vec.rs:404) (1 samples, 9.09%)</title><rect x="0.0000%" y="436" width="9.0909%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="446.50">alloc::raw_ve..</text></g><g><title>_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$::branch::h0a25b520d0b6ad2f (result.rs:1948) (1 samples, 9.09%)</title><rect x="0.0000%" y="452" width="9.0909%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="462.50">_$LT$core..re..</text></g><g><title>alloc::raw_vec::finish_grow::h566bb97f81195c15 (raw_vec.rs) (1 samples, 9.09%)</title><rect x="0.0000%" y="468" width="9.0909%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="478.50">alloc::raw_ve..</text></g><g><title>realloc (libc-2.31.so) (1 samples, 9.09%)</title><rect x="0.0000%" y="484" width="9.0909%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="494.50">realloc (libc..</text></g><g><title>0x7fc21824ce5f (libc-2.31.so) (1 samples, 9.09%)</title><rect x="0.0000%" y="500" width="9.0909%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="510.50">0x7fc21824ce5..</text></g><g><title>0x7fc21824bebc (libc-2.31.so) (1 samples, 9.09%)</title><rect x="0.0000%" y="516" width="9.0909%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="526.50">0x7fc21824beb..</text></g><g><title>primaldimer_rs::calc_at_offset::h054f3634dcc5bdde (lib.rs:194) (1 samples, 9.09%)</title><rect x="9.0909%" y="356" width="9.0909%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="9.3409%" y="366.50">primaldimer_r..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::h698f0f845ee70099 (iterator.rs:1895) (1 samples, 9.09%)</title><rect x="9.0909%" y="372" width="9.0909%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="9.3409%" y="382.50">core::iter::t..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$::from_iter::h2a17b326827af737 (mod.rs:2696) (1 samples, 9.09%)</title><rect x="9.0909%" y="388" width="9.0909%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="9.3409%" y="398.50">_$LT$alloc..v..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$::from_iter::h90076031a2cd64f5 (spec_from_iter.rs:33) (1 samples, 9.09%)</title><rect x="9.0909%" y="404" width="9.0909%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="9.3409%" y="414.50">_$LT$alloc..v..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$::from_iter::ha7ddb3062b3943b3 (spec_from_iter_nested.rs:62) (1 samples, 9.09%)</title><rect x="9.0909%" y="420" width="9.0909%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="9.3409%" y="430.50">_$LT$alloc..v..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$::spec_extend::he391bb083643da5f (spec_extend.rs:26) (1 samples, 9.09%)</title><rect x="9.0909%" y="436" width="9.0909%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="9.3409%" y="446.50">_$LT$alloc..v..</text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::extend_trusted::h33b3ffe4ab85c63d (mod.rs:2828) (1 samples, 9.09%)</title><rect x="9.0909%" y="452" width="9.0909%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="1"/><text x="9.3409%" y="462.50">alloc::vec::V..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h70000526040ad53b (iterator.rs:856) (1 samples, 9.09%)</title><rect x="9.0909%" y="468" width="9.0909%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="1"/><text x="9.3409%" y="478.50">core::iter::t..</text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::h16e2b0646a426c9b (map.rs:124) (1 samples, 9.09%)</title><rect x="9.0909%" y="484" width="9.0909%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="1"/><text x="9.3409%" y="494.50">_$LT$core..it..</text></g><g><title>_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::h03c8cae9846be21f (macros.rs:215) (1 samples, 9.09%)</title><rect x="9.0909%" y="500" width="9.0909%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="1"/><text x="9.3409%" y="510.50">_$LT$core..sl..</text></g><g><title>primaldimer_rs::apply_bonus::h3ac7e321b5e45669 (lib.rs:156) (1 samples, 9.09%)</title><rect x="18.1818%" y="372" width="9.0909%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="1"/><text x="18.4318%" y="382.50">primaldimer_r..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::h57fec55778c27c70 (iterator.rs:1895) (1 samples, 9.09%)</title><rect x="18.1818%" y="388" width="9.0909%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="1"/><text x="18.4318%" y="398.50">core::iter::t..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$::from_iter::hd597cd8944a32451 (mod.rs:2696) (1 samples, 9.09%)</title><rect x="18.1818%" y="404" width="9.0909%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="1"/><text x="18.4318%" y="414.50">_$LT$alloc..v..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$::from_iter::h7a9ac58a95c49df3 (spec_from_iter.rs:33) (1 samples, 9.09%)</title><rect x="18.1818%" y="420" width="9.0909%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="1"/><text x="18.4318%" y="430.50">_$LT$alloc..v..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$::from_iter::h303c3066c7d8f570 (spec_from_iter_nested.rs) (1 samples, 9.09%)</title><rect x="18.1818%" y="436" width="9.0909%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="1"/><text x="18.4318%" y="446.50">_$LT$alloc..v..</text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h682233827dbec531 (map.rs:103) (1 samples, 9.09%)</title><rect x="18.1818%" y="452" width="9.0909%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="1"/><text x="18.4318%" y="462.50">_$LT$core..it..</text></g><g><title>core::option::Option$LT$T$GT$::map::h3bae3f198d64d2df (option.rs:1075) (1 samples, 9.09%)</title><rect x="18.1818%" y="468" width="9.0909%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="1"/><text x="18.4318%" y="478.50">core::option:..</text></g><g><title>core::ops::function::impls::_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$::call_once::h5f1c8ac35b563c7e (function.rs:305) (1 samples, 9.09%)</title><rect x="18.1818%" y="484" width="9.0909%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="1"/><text x="18.4318%" y="494.50">core::ops::fu..</text></g><g><title>primaldimer_rs::apply_bonus::_$u7b$$u7b$closure$u7d$$u7d$::h4097014f1251073d (lib.rs:155) (1 samples, 9.09%)</title><rect x="18.1818%" y="500" width="9.0909%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="1"/><text x="18.4318%" y="510.50">primaldimer_r..</text></g><g><title>core::iter::traits::iterator::Iterator::count::he20f22d4fb56ef4f (iterator.rs:266) (1 samples, 9.09%)</title><rect x="18.1818%" y="516" width="9.0909%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="1"/><text x="18.4318%" y="526.50">core::iter::t..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::h1fb775b6e903b568 (iterator.rs:2480) (1 samples, 9.09%)</title><rect x="18.1818%" y="532" width="9.0909%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="1"/><text x="18.4318%" y="542.50">core::iter::t..</text></g><g><title>_$LT$itertools..groupbylazy..Group$LT$K$C$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h7696a45a1505d9d1 (groupbylazy.rs:423) (1 samples, 9.09%)</title><rect x="18.1818%" y="548" width="9.0909%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="1"/><text x="18.4318%" y="558.50">_$LT$itertool..</text></g><g><title>itertools::groupbylazy::GroupBy$LT$K$C$I$C$F$GT$::step::hbc90a72bda2d4b14 (groupbylazy.rs:328) (1 samples, 9.09%)</title><rect x="18.1818%" y="564" width="9.0909%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="1"/><text x="18.4318%" y="574.50">itertools::gr..</text></g><g><title>core::cell::RefCell$LT$T$GT$::borrow_mut::hbd70fcfce553acd7 (cell.rs:1017) (1 samples, 9.09%)</title><rect x="18.1818%" y="580" width="9.0909%" height="15" fill="rgb(241,83,37)" fg:x="2" fg:w="1"/><text x="18.4318%" y="590.50">core::cell::R..</text></g><g><title>core::cell::RefCell$LT$T$GT$::try_borrow_mut::h8495a1c573a1565a (cell.rs:1046) (1 samples, 9.09%)</title><rect x="18.1818%" y="596" width="9.0909%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="1"/><text x="18.4318%" y="606.50">core::cell::R..</text></g><g><title>core::cell::BorrowRefMut::new::h2033a449ff43ae0e (cell.rs:1740) (1 samples, 9.09%)</title><rect x="18.1818%" y="612" width="9.0909%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="1"/><text x="18.4318%" y="622.50">core::cell::B..</text></g><g><title>primaldimer_rs::do_seqs_interact::hc312ce5525aa6028 (lib.rs) (4 samples, 36.36%)</title><rect x="0.0000%" y="260" width="36.3636%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="4"/><text x="0.2500%" y="270.50">primaldimer_rs::do_seqs_interact::hc312ce5525aa6028 (lib.rs)</text></g><g><title>primaldimer_rs::does_seq1_extend::ha1a682843d4e33e0 (lib.rs:217) (4 samples, 36.36%)</title><rect x="0.0000%" y="276" width="36.3636%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="4"/><text x="0.2500%" y="286.50">primaldimer_rs::does_seq1_extend::ha1a682843d4e33e0 (lib.rs..</text></g><g><title>core::iter::range::_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$::next::he1281f8d30d84951 (range.rs:712) (4 samples, 36.36%)</title><rect x="0.0000%" y="292" width="36.3636%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="4"/><text x="0.2500%" y="302.50">core::iter::range::_$LT$impl$u20$core..iter..traits..iterat..</text></g><g><title>_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$::spec_next::h771064573b1a31bd (range.rs:624) (4 samples, 36.36%)</title><rect x="0.0000%" y="308" width="36.3636%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="4"/><text x="0.2500%" y="318.50">_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..</text></g><g><title>_$LT$i32$u20$as$u20$core..iter..range..Step$GT$::forward_unchecked::h9ecca5b6cca9ef2a (range.rs:191) (4 samples, 36.36%)</title><rect x="0.0000%" y="324" width="36.3636%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="4"/><text x="0.2500%" y="334.50">_$LT$i32$u20$as$u20$core..iter..range..Step$GT$::forward_un..</text></g><g><title>core::num::_$LT$impl$u20$i32$GT$::unchecked_add::h7c3cc30cb09f4c80 (mod.rs:336) (4 samples, 36.36%)</title><rect x="0.0000%" y="340" width="36.3636%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="4"/><text x="0.2500%" y="350.50">core::num::_$LT$impl$u20$i32$GT$::unchecked_add::h7c3cc30cb..</text></g><g><title>primaldimer_rs::calc_at_offset::h054f3634dcc5bdde (lib.rs:204) (2 samples, 18.18%)</title><rect x="18.1818%" y="356" width="18.1818%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="2"/><text x="18.4318%" y="366.50">primaldimer_rs::calc_at_offs..</text></g><g><title>primaldimer_rs::apply_bonus::h3ac7e321b5e45669 (lib.rs:163) (1 samples, 9.09%)</title><rect x="27.2727%" y="372" width="9.0909%" height="15" fill="rgb(222,207,29)" fg:x="3" fg:w="1"/><text x="27.5227%" y="382.50">primaldimer_r..</text></g><g><title>core::iter::traits::iterator::Iterator::max::h8ae0988ca909d6b3 (iterator.rs:3047) (1 samples, 9.09%)</title><rect x="27.2727%" y="388" width="9.0909%" height="15" fill="rgb(206,96,30)" fg:x="3" fg:w="1"/><text x="27.5227%" y="398.50">core::iter::t..</text></g><g><title>core::iter::traits::iterator::Iterator::max_by::h2b87f4ee9180c47f (iterator.rs:3148) (1 samples, 9.09%)</title><rect x="27.2727%" y="404" width="9.0909%" height="15" fill="rgb(218,138,4)" fg:x="3" fg:w="1"/><text x="27.5227%" y="414.50">core::iter::t..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce::h651d1621a29163ec (iterator.rs:2518) (1 samples, 9.09%)</title><rect x="27.2727%" y="420" width="9.0909%" height="15" fill="rgb(250,191,14)" fg:x="3" fg:w="1"/><text x="27.5227%" y="430.50">core::iter::t..</text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::h30512a8d904d6c74 (map.rs:124) (1 samples, 9.09%)</title><rect x="27.2727%" y="436" width="9.0909%" height="15" fill="rgb(239,60,40)" fg:x="3" fg:w="1"/><text x="27.5227%" y="446.50">_$LT$core..it..</text></g><g><title>_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::hc62bfaa9a46d2c9b (filter.rs:156) (1 samples, 9.09%)</title><rect x="27.2727%" y="452" width="9.0909%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="1"/><text x="27.5227%" y="462.50">_$LT$core..it..</text></g><g><title>_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::hbfd40d126b22989e (macros.rs:220) (1 samples, 9.09%)</title><rect x="27.2727%" y="468" width="9.0909%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="1"/><text x="27.5227%" y="478.50">_$LT$core..sl..</text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::push::h9e9056892262d819 (mod.rs:1832) (1 samples, 9.09%)</title><rect x="36.3636%" y="372" width="9.0909%" height="15" fill="rgb(250,213,24)" fg:x="4" fg:w="1"/><text x="36.6136%" y="382.50">alloc::vec::V..</text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::as_mut_ptr::h87392cbe466a06df (mod.rs:1273) (1 samples, 9.09%)</title><rect x="36.3636%" y="388" width="9.0909%" height="15" fill="rgb(247,123,22)" fg:x="4" fg:w="1"/><text x="36.6136%" y="398.50">alloc::vec::V..</text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::ptr::heba08001c0236d91 (raw_vec.rs:223) (1 samples, 9.09%)</title><rect x="36.3636%" y="404" width="9.0909%" height="15" fill="rgb(231,138,38)" fg:x="4" fg:w="1"/><text x="36.6136%" y="414.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h8b0a27905ee0e54b (raw_vec.rs:302) (1 samples, 9.09%)</title><rect x="36.3636%" y="420" width="9.0909%" height="15" fill="rgb(231,145,46)" fg:x="4" fg:w="1"/><text x="36.6136%" y="430.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::grow_amortized::h9fc0a54549054100 (raw_vec.rs:404) (1 samples, 9.09%)</title><rect x="36.3636%" y="436" width="9.0909%" height="15" fill="rgb(251,118,11)" fg:x="4" fg:w="1"/><text x="36.6136%" y="446.50">alloc::raw_ve..</text></g><g><title>_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$::branch::h0a25b520d0b6ad2f (result.rs:1948) (1 samples, 9.09%)</title><rect x="36.3636%" y="452" width="9.0909%" height="15" fill="rgb(217,147,25)" fg:x="4" fg:w="1"/><text x="36.6136%" y="462.50">_$LT$core..re..</text></g><g><title>alloc::raw_vec::finish_grow::h566bb97f81195c15 (raw_vec.rs) (1 samples, 9.09%)</title><rect x="36.3636%" y="468" width="9.0909%" height="15" fill="rgb(247,81,37)" fg:x="4" fg:w="1"/><text x="36.6136%" y="478.50">alloc::raw_ve..</text></g><g><title>realloc (libc-2.31.so) (1 samples, 9.09%)</title><rect x="36.3636%" y="484" width="9.0909%" height="15" fill="rgb(209,12,38)" fg:x="4" fg:w="1"/><text x="36.6136%" y="494.50">realloc (libc..</text></g><g><title>0x7fc21824ce5f (libc-2.31.so) (1 samples, 9.09%)</title><rect x="36.3636%" y="500" width="9.0909%" height="15" fill="rgb(227,1,9)" fg:x="4" fg:w="1"/><text x="36.6136%" y="510.50">0x7fc21824ce5..</text></g><g><title>0x7fc21824c2b4 (libc-2.31.so) (1 samples, 9.09%)</title><rect x="36.3636%" y="516" width="9.0909%" height="15" fill="rgb(248,47,43)" fg:x="4" fg:w="1"/><text x="36.6136%" y="526.50">0x7fc21824c2b..</text></g><g><title>primaldimer_rs::calc_at_offset::h054f3634dcc5bdde (lib.rs:186) (2 samples, 18.18%)</title><rect x="36.3636%" y="356" width="18.1818%" height="15" fill="rgb(221,10,30)" fg:x="4" fg:w="2"/><text x="36.6136%" y="366.50">primaldimer_rs::calc_at_offs..</text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::push::h9e9056892262d819 (mod.rs:1834) (1 samples, 9.09%)</title><rect x="45.4545%" y="372" width="9.0909%" height="15" fill="rgb(210,229,1)" fg:x="5" fg:w="1"/><text x="45.7045%" y="382.50">alloc::vec::V..</text></g><g><title>primaldimer_rs::apply_bonus::h3ac7e321b5e45669 (lib.rs:156) (1 samples, 9.09%)</title><rect x="54.5455%" y="372" width="9.0909%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="1"/><text x="54.7955%" y="382.50">primaldimer_r..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::h57fec55778c27c70 (iterator.rs:1895) (1 samples, 9.09%)</title><rect x="54.5455%" y="388" width="9.0909%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="1"/><text x="54.7955%" y="398.50">core::iter::t..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$::from_iter::hd597cd8944a32451 (mod.rs:2696) (1 samples, 9.09%)</title><rect x="54.5455%" y="404" width="9.0909%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="1"/><text x="54.7955%" y="414.50">_$LT$alloc..v..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$::from_iter::h7a9ac58a95c49df3 (spec_from_iter.rs:33) (1 samples, 9.09%)</title><rect x="54.5455%" y="420" width="9.0909%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="1"/><text x="54.7955%" y="430.50">_$LT$alloc..v..</text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$::from_iter::h303c3066c7d8f570 (spec_from_iter_nested.rs) (1 samples, 9.09%)</title><rect x="54.5455%" y="436" width="9.0909%" height="15" fill="rgb(213,79,30)" fg:x="6" fg:w="1"/><text x="54.7955%" y="446.50">_$LT$alloc..v..</text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h682233827dbec531 (map.rs:103) (1 samples, 9.09%)</title><rect x="54.5455%" y="452" width="9.0909%" height="15" fill="rgb(246,177,23)" fg:x="6" fg:w="1"/><text x="54.7955%" y="462.50">_$LT$core..it..</text></g><g><title>core::option::Option$LT$T$GT$::map::h3bae3f198d64d2df (option.rs:1075) (1 samples, 9.09%)</title><rect x="54.5455%" y="468" width="9.0909%" height="15" fill="rgb(230,62,27)" fg:x="6" fg:w="1"/><text x="54.7955%" y="478.50">core::option:..</text></g><g><title>core::ops::function::impls::_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$::call_once::h5f1c8ac35b563c7e (function.rs:305) (1 samples, 9.09%)</title><rect x="54.5455%" y="484" width="9.0909%" height="15" fill="rgb(216,154,8)" fg:x="6" fg:w="1"/><text x="54.7955%" y="494.50">core::ops::fu..</text></g><g><title>primaldimer_rs::apply_bonus::_$u7b$$u7b$closure$u7d$$u7d$::h4097014f1251073d (lib.rs:155) (1 samples, 9.09%)</title><rect x="54.5455%" y="500" width="9.0909%" height="15" fill="rgb(244,35,45)" fg:x="6" fg:w="1"/><text x="54.7955%" y="510.50">primaldimer_r..</text></g><g><title>core::iter::traits::iterator::Iterator::count::he20f22d4fb56ef4f (iterator.rs:266) (1 samples, 9.09%)</title><rect x="54.5455%" y="516" width="9.0909%" height="15" fill="rgb(251,115,12)" fg:x="6" fg:w="1"/><text x="54.7955%" y="526.50">core::iter::t..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::h1fb775b6e903b568 (iterator.rs:2480) (1 samples, 9.09%)</title><rect x="54.5455%" y="532" width="9.0909%" height="15" fill="rgb(240,54,50)" fg:x="6" fg:w="1"/><text x="54.7955%" y="542.50">core::iter::t..</text></g><g><title>_$LT$itertools..groupbylazy..Group$LT$K$C$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h7696a45a1505d9d1 (groupbylazy.rs:423) (1 samples, 9.09%)</title><rect x="54.5455%" y="548" width="9.0909%" height="15" fill="rgb(233,84,52)" fg:x="6" fg:w="1"/><text x="54.7955%" y="558.50">_$LT$itertool..</text></g><g><title>itertools::groupbylazy::GroupBy$LT$K$C$I$C$F$GT$::step::hbc90a72bda2d4b14 (groupbylazy.rs:328) (1 samples, 9.09%)</title><rect x="54.5455%" y="564" width="9.0909%" height="15" fill="rgb(207,117,47)" fg:x="6" fg:w="1"/><text x="54.7955%" y="574.50">itertools::gr..</text></g><g><title>itertools::groupbylazy::GroupInner$LT$K$C$I$C$F$GT$::step::hf773f8f9f69ab28e (groupbylazy.rs:94) (1 samples, 9.09%)</title><rect x="54.5455%" y="580" width="9.0909%" height="15" fill="rgb(249,43,39)" fg:x="6" fg:w="1"/><text x="54.7955%" y="590.50">itertools::gr..</text></g><g><title>primaldimer_rs::calc_at_offset::h054f3634dcc5bdde (lib.rs:204) (2 samples, 18.18%)</title><rect x="54.5455%" y="356" width="18.1818%" height="15" fill="rgb(209,38,44)" fg:x="6" fg:w="2"/><text x="54.7955%" y="366.50">primaldimer_rs::calc_at_offs..</text></g><g><title>primaldimer_rs::apply_bonus::h3ac7e321b5e45669 (lib.rs:163) (1 samples, 9.09%)</title><rect x="63.6364%" y="372" width="9.0909%" height="15" fill="rgb(236,212,23)" fg:x="7" fg:w="1"/><text x="63.8864%" y="382.50">primaldimer_r..</text></g><g><title>core::iter::traits::iterator::Iterator::max::h8ae0988ca909d6b3 (iterator.rs:3047) (1 samples, 9.09%)</title><rect x="63.6364%" y="388" width="9.0909%" height="15" fill="rgb(242,79,21)" fg:x="7" fg:w="1"/><text x="63.8864%" y="398.50">core::iter::t..</text></g><g><title>core::iter::traits::iterator::Iterator::max_by::h2b87f4ee9180c47f (iterator.rs:3148) (1 samples, 9.09%)</title><rect x="63.6364%" y="404" width="9.0909%" height="15" fill="rgb(211,96,35)" fg:x="7" fg:w="1"/><text x="63.8864%" y="414.50">core::iter::t..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce::h651d1621a29163ec (iterator.rs:2518) (1 samples, 9.09%)</title><rect x="63.6364%" y="420" width="9.0909%" height="15" fill="rgb(253,215,40)" fg:x="7" fg:w="1"/><text x="63.8864%" y="430.50">core::iter::t..</text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::h30512a8d904d6c74 (map.rs:124) (1 samples, 9.09%)</title><rect x="63.6364%" y="436" width="9.0909%" height="15" fill="rgb(211,81,21)" fg:x="7" fg:w="1"/><text x="63.8864%" y="446.50">_$LT$core..it..</text></g><g><title>_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::hc62bfaa9a46d2c9b (filter.rs:156) (1 samples, 9.09%)</title><rect x="63.6364%" y="452" width="9.0909%" height="15" fill="rgb(208,190,38)" fg:x="7" fg:w="1"/><text x="63.8864%" y="462.50">_$LT$core..it..</text></g><g><title>_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::hbfd40d126b22989e (macros.rs:215) (1 samples, 9.09%)</title><rect x="63.6364%" y="468" width="9.0909%" height="15" fill="rgb(235,213,38)" fg:x="7" fg:w="1"/><text x="63.8864%" y="478.50">_$LT$core..sl..</text></g><g><title>core::iter::adapters::filter::filter_fold::_$u7b$$u7b$closure$u7d$$u7d$::h3336175a87482053 (filter.rs:40) (1 samples, 9.09%)</title><rect x="63.6364%" y="484" width="9.0909%" height="15" fill="rgb(237,122,38)" fg:x="7" fg:w="1"/><text x="63.8864%" y="494.50">core::iter::a..</text></g><g><title>primaldimer_rs::calc_at_offset::h054f3634dcc5bdde (lib.rs:208) (1 samples, 9.09%)</title><rect x="72.7273%" y="356" width="9.0909%" height="15" fill="rgb(244,218,35)" fg:x="8" fg:w="1"/><text x="72.9773%" y="366.50">primaldimer_r..</text></g><g><title>primaldimer_rs::calc_nn_thermo::hb0baff64b3c107b9 (lib.rs:84) (1 samples, 9.09%)</title><rect x="72.7273%" y="372" width="9.0909%" height="15" fill="rgb(240,68,47)" fg:x="8" fg:w="1"/><text x="72.9773%" y="382.50">primaldimer_r..</text></g><g><title>0x7fc21824aaaf (libc-2.31.so) (1 samples, 9.09%)</title><rect x="81.8182%" y="372" width="9.0909%" height="15" fill="rgb(210,16,53)" fg:x="9" fg:w="1"/><text x="82.0682%" y="382.50">0x7fc21824aaa..</text></g><g><title>all (11 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="11"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (measure.py:21) (11 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="11"/><text x="0.2500%" y="78.50">&lt;module&gt; (measure.py:21)</text></g><g><title>primaldimer_py::_::__pyfunction_do_pools_interact_py::h1b6a7955e3fc4401 (lib.rs:21) (11 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(250,166,2)" fg:x="0" fg:w="11"/><text x="0.2500%" y="94.50">primaldimer_py::_::__pyfunction_do_pools_interact_py::h1b6a7955e3fc4401 (lib.rs:21)</text></g><g><title>std::panic::catch_unwind::hb6c43ed5cc68b2ee (panic.rs:142) (11 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(242,216,29)" fg:x="0" fg:w="11"/><text x="0.2500%" y="110.50">std::panic::catch_unwind::hb6c43ed5cc68b2ee (panic.rs:142)</text></g><g><title>std::panicking::try::h1c5bfdf0a5c34c24 (panicking.rs:464) (11 samples, 100.00%)</title><rect x="0.0000%" y="116" width="100.0000%" height="15" fill="rgb(230,116,27)" fg:x="0" fg:w="11"/><text x="0.2500%" y="126.50">std::panicking::try::h1c5bfdf0a5c34c24 (panicking.rs:464)</text></g><g><title>std::panicking::try::do_call::h43a11e120606e5ab (panicking.rs:500) (11 samples, 100.00%)</title><rect x="0.0000%" y="132" width="100.0000%" height="15" fill="rgb(228,99,48)" fg:x="0" fg:w="11"/><text x="0.2500%" y="142.50">std::panicking::try::do_call::h43a11e120606e5ab (panicking.rs:500)</text></g><g><title>primaldimer_py::_::__pyfunction_do_pools_interact_py::_$u7b$$u7b$closure$u7d$$u7d$::h8158ec156271a3e3 (lib.rs:21) (11 samples, 100.00%)</title><rect x="0.0000%" y="148" width="100.0000%" height="15" fill="rgb(253,11,6)" fg:x="0" fg:w="11"/><text x="0.2500%" y="158.50">primaldimer_py::_::__pyfunction_do_pools_interact_py::_$u7b$$u7b$closure$u7d$$u7d$::h8158ec156271a3e3 (lib.rs:21)</text></g><g><title>pyo3::callback::convert::hc0a1a4c928af3809 (callback.rs:188) (11 samples, 100.00%)</title><rect x="0.0000%" y="164" width="100.0000%" height="15" fill="rgb(247,143,39)" fg:x="0" fg:w="11"/><text x="0.2500%" y="174.50">pyo3::callback::convert::hc0a1a4c928af3809 (callback.rs:188)</text></g><g><title>_$LT$T$u20$as$u20$pyo3..callback..IntoPyCallbackOutput$LT$$BP$mut$u20$pyo3_ffi..object..PyObject$GT$$GT$::convert::hd3b9d12e0f76c662 (callback.rs:64) (11 samples, 100.00%)</title><rect x="0.0000%" y="180" width="100.0000%" height="15" fill="rgb(236,97,10)" fg:x="0" fg:w="11"/><text x="0.2500%" y="190.50">_$LT$T$u20$as$u20$pyo3..callback..IntoPyCallbackOutput$LT$$BP$mut$u20$pyo3_ffi..object..PyObject$GT$$GT$::convert::hd3b9d12e0f76c662 (callback.rs:64)</text></g><g><title>pyo3::types::boolobject::_$LT$impl$u20$pyo3..conversion..IntoPy$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$$u20$for$u20$bool$GT$::into_py::hfa5269bcfc45b0ad (boolobject.rs:47) (11 samples, 100.00%)</title><rect x="0.0000%" y="196" width="100.0000%" height="15" fill="rgb(233,208,19)" fg:x="0" fg:w="11"/><text x="0.2500%" y="206.50">pyo3::types::boolobject::_$LT$impl$u20$pyo3..conversion..IntoPy$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$$u20$for$u20$bool$GT$::into_py::hfa5269bcfc45b0..</text></g><g><title>pyo3::types::boolobject::PyBool::new::h7ae26932552e225e (boolobject.rs:17) (11 samples, 100.00%)</title><rect x="0.0000%" y="212" width="100.0000%" height="15" fill="rgb(216,164,2)" fg:x="0" fg:w="11"/><text x="0.2500%" y="222.50">pyo3::types::boolobject::PyBool::new::h7ae26932552e225e (boolobject.rs:17)</text></g><g><title>primaldimer_rs::do_pools_interact::hda469171c2a83c05 (lib.rs:240) (11 samples, 100.00%)</title><rect x="0.0000%" y="228" width="100.0000%" height="15" fill="rgb(220,129,5)" fg:x="0" fg:w="11"/><text x="0.2500%" y="238.50">primaldimer_rs::do_pools_interact::hda469171c2a83c05 (lib.rs:240)</text></g><g><title>_$LT$itertools..adaptors..Product$LT$I$C$J$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::hf1206d5a792021b6 (mod.rs) (11 samples, 100.00%)</title><rect x="0.0000%" y="244" width="100.0000%" height="15" fill="rgb(242,17,10)" fg:x="0" fg:w="11"/><text x="0.2500%" y="254.50">_$LT$itertools..adaptors..Product$LT$I$C$J$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::hf1206d5a792021b6 (mod.rs)</text></g><g><title>primaldimer_rs::do_seqs_interact::hc312ce5525aa6028 (lib.rs:235) (7 samples, 63.64%)</title><rect x="36.3636%" y="260" width="63.6364%" height="15" fill="rgb(242,107,0)" fg:x="4" fg:w="7"/><text x="36.6136%" y="270.50">primaldimer_rs::do_seqs_interact::hc312ce5525aa6028 (lib.rs:235)</text></g><g><title>primaldimer_rs::does_seq1_extend::ha1a682843d4e33e0 (lib.rs:217) (7 samples, 63.64%)</title><rect x="36.3636%" y="276" width="63.6364%" height="15" fill="rgb(251,28,31)" fg:x="4" fg:w="7"/><text x="36.6136%" y="286.50">primaldimer_rs::does_seq1_extend::ha1a682843d4e33e0 (lib.rs:217)</text></g><g><title>core::iter::range::_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$::next::he1281f8d30d84951 (range.rs:712) (7 samples, 63.64%)</title><rect x="36.3636%" y="292" width="63.6364%" height="15" fill="rgb(233,223,10)" fg:x="4" fg:w="7"/><text x="36.6136%" y="302.50">core::iter::range::_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Ran..</text></g><g><title>_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$::spec_next::h771064573b1a31bd (range.rs:624) (7 samples, 63.64%)</title><rect x="36.3636%" y="308" width="63.6364%" height="15" fill="rgb(215,21,27)" fg:x="4" fg:w="7"/><text x="36.6136%" y="318.50">_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$::spec_next::h77..</text></g><g><title>_$LT$i32$u20$as$u20$core..iter..range..Step$GT$::forward_unchecked::h9ecca5b6cca9ef2a (range.rs:191) (7 samples, 63.64%)</title><rect x="36.3636%" y="324" width="63.6364%" height="15" fill="rgb(232,23,21)" fg:x="4" fg:w="7"/><text x="36.6136%" y="334.50">_$LT$i32$u20$as$u20$core..iter..range..Step$GT$::forward_unchecked::h9ecca5b6cca9ef2a (range.rs:191)</text></g><g><title>core::num::_$LT$impl$u20$i32$GT$::unchecked_add::h7c3cc30cb09f4c80 (mod.rs:336) (7 samples, 63.64%)</title><rect x="36.3636%" y="340" width="63.6364%" height="15" fill="rgb(244,5,23)" fg:x="4" fg:w="7"/><text x="36.6136%" y="350.50">core::num::_$LT$impl$u20$i32$GT$::unchecked_add::h7c3cc30cb09f4c80 (mod.rs:336)</text></g><g><title>primaldimer_rs::calc_at_offset::h054f3634dcc5bdde (lib.rs:211) (2 samples, 18.18%)</title><rect x="81.8182%" y="356" width="18.1818%" height="15" fill="rgb(226,81,46)" fg:x="9" fg:w="2"/><text x="82.0682%" y="366.50">primaldimer_rs::calc_at_offs..</text></g><g><title>0x7fc21824aaf8 (libc-2.31.so) (1 samples, 9.09%)</title><rect x="90.9091%" y="372" width="9.0909%" height="15" fill="rgb(247,70,30)" fg:x="10" fg:w="1"/><text x="91.1591%" y="382.50">0x7fc21824aaf..</text></g></svg></svg>