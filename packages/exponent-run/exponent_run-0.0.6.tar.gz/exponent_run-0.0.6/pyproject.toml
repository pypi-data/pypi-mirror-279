[tool.poetry]
authors = ["Sashank Thupukari <sashank@exponent.run>"]
description = "Exponent is an AI Pair Programmer"
name = "exponent-run"
version = "0.0.6"
packages = [{ include = "exponent" }]

[tool.poetry.scripts]
exponent = "exponent.cli:cli"

[tool.poetry.dependencies]
python = "^3.10"


pydantic = { extras = ["dotenv", "email"], version = "^2.6.4" }
pydantic-settings = "^2.2.1"
pytest-env = "^1.1.3"
click = "^8.1.7"
httpx = "^0.27.0"
rapidfuzz = "^3.9.0"
gitignore-parser = "^0.1.11"
jupyter-client = "^8.6.1"
ipykernel = "^6.29.4"
pygit2 = "^1.15.0"

[tool.poetry.group.dev.dependencies]
coverage = "^7.4.4"
freezegun = "^1.4.0"
gevent = "^24.2.1"
mypy = "^1.9.0"
pre-commit = "^3.7.0"
pytest = "8.1.1"
# do not bump pytest-asyncio until https://github.com/pytest-dev/pytest-asyncio/issues/706 resolved
pytest-asyncio = "0.21.1"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.5.0"
ruff = "^0.3.5"
types-passlib = "^1.7.7.20240327"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
# pycodestyle, pyflakes, isort, pylint, pyupgrade, ruff, blind-exceptions
ignore = ["E501"]
select = ["E", "F", "I", "PL", "UP", "W", "RUF", "BLE"]

[tool.ruff.lint.isort]
# Combine multiple `from foo import bar as baz` statements with the same source
# (`foo`) into a single statement.
combine-as-imports = true
# Imports of the form `from foo import bar as baz` show one `import bar as baz`
# per line. Useful for __init__.py files that just re-export symbols.
force-wrap-aliases = true
