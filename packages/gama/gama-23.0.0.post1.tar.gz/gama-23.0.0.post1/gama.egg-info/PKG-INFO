Metadata-Version: 2.1
Name: gama
Version: 23.0.0.post1
Summary: A package for automated machine learning based on scikit-learn.
Author-email: Pieter Gijsbers <p.gijsbers@tue.nl>
License: MIT
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.20.0
Requires-Dist: scipy>=1.0.0
Requires-Dist: scikit-learn<1.3,>=1.1.0
Requires-Dist: pandas>=1.0
Requires-Dist: stopit>=1.1.1
Requires-Dist: liac-arff>=2.2.2
Requires-Dist: category-encoders>=1.2.8
Requires-Dist: black==24.3.0
Requires-Dist: psutil
Provides-Extra: doc
Requires-Dist: sphinx; extra == "doc"
Requires-Dist: sphinx_rtd_theme; extra == "doc"
Provides-Extra: test
Requires-Dist: pre-commit==3.2.2; extra == "test"
Requires-Dist: pytest>=4.4.0; extra == "test"
Requires-Dist: pytest-mock; extra == "test"
Requires-Dist: pytest-xdist; extra == "test"
Requires-Dist: codecov; extra == "test"
Requires-Dist: pytest-cov; extra == "test"

![GAMA logo](https://github.com/openml-labs/gama/blob/master/images/logos/Logo-With-Grey-Name-Transparent.png)

**G**eneral **A**utomated **M**achine learning **A**ssistant  
An automated machine learning tool based on genetic programming.  
Make sure to check out the [documentation](https://openml-labs.github.io/gama/).

[![Build Status](https://travis-ci.org/openml-labs/gama.svg?branch=master)](https://travis-ci.org/openml-labs/gama)
[![codecov](https://codecov.io/gh/openml-labs/gama/branch/master/graph/badge.svg)](https://codecov.io/gh/openml-labs/gama)
[![DOI](http://joss.theoj.org/papers/10.21105/joss.01132/status.svg)](https://doi.org/10.21105/joss.01132)

---

GAMA is an AutoML package for end-users and AutoML researchers.
It generates optimized machine learning pipelines given specific input data and resource constraints.
A machine learning pipeline contains data preprocessing (e.g. PCA, normalization) as well as a machine learning algorithm (e.g. Logistic Regression, Random Forests), with fine-tuned hyperparameter settings (e.g. number of trees in a Random Forest).

To find these pipelines, multiple search procedures have been implemented.
GAMA can also combine multiple tuned machine learning pipelines together into an ensemble, which on average should help model performance.
At the moment, GAMA is restricted to classification and regression problems on tabular data.

In addition to its general use AutoML functionality, GAMA aims to serve AutoML researchers as well.
During the optimization process, GAMA keeps an extensive log of progress made.
Using this log, insight can be obtained on the behaviour of the search procedure.
For example, it can produce a graph that shows pipeline fitness over time:
![graph of fitness over time](https://github.com/openml-lab/gama/blob/master/docs/source/technical_guide/images/viz.gif)

*Note: we temporarily disabled support for the GAMA Dashboard, we will add out-of-the-box visualization again later this year.* 

## Installing GAMA

You can install GAMA with pip: `pip install gama`

## Minimal Example

The following example uses AutoML to find a machine learning pipeline that classifies breast cancer as malign or benign.
See the documentation for examples in
[classification](https://openml-labs.github.io/gama/master/user_guide/index.html#classification),
[regression](https://openml-labs.github.io/gama/master/user_guide/index.html#regression),
using [ARFF as input](https://openml-labs.github.io/gama/master/user_guide/index.html#using-arff-files).

```python
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.metrics import log_loss, accuracy_score
from gama import GamaClassifier

if __name__ == '__main__':
    X, y = load_breast_cancer(return_X_y=True)
    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=0)

    automl = GamaClassifier(max_total_time=180, store="nothing")
    print("Starting `fit` which will take roughly 3 minutes.")
    automl.fit(X_train, y_train)

    label_predictions = automl.predict(X_test)
    probability_predictions = automl.predict_proba(X_test)

    print('accuracy:', accuracy_score(y_test, label_predictions))
    print('log loss:', log_loss(y_test, probability_predictions))
    # the `score` function outputs the score on the metric optimized towards (by default, `log_loss`)
    print('log_loss', automl.score(X_test, y_test))
```

_note_: By default, GamaClassifier optimizes towards `log_loss`.

## Citing

If you want to cite GAMA, please use [our ECML-PKDD 2020 Demo Track publication](https://link.springer.com/chapter/10.1007/978-3-030-67670-4_39).

```latex
@InProceedings{10.1007/978-3-030-67670-4_39,
author="Gijsbers, Pieter and Vanschoren, Joaquin",
editor="Dong, Yuxiao
and Ifrim, Georgiana
and Mladeni{\'{c}}, Dunja
and Saunders, Craig
and Van Hoecke, Sofie",
title="GAMA: A General Automated Machine Learning Assistant",
booktitle="Machine Learning and Knowledge Discovery in Databases. Applied Data Science and Demo Track",
year="2021",
publisher="Springer International Publishing",
address="Cham",
pages="560--564",
abstract="The General Automated Machine learning Assistant (GAMA) is a modular AutoML system developed to empower users to track and control how AutoML algorithms search for optimal machine learning pipelines, and facilitate AutoML research itself. In contrast to current, often black-box systems, GAMA allows users to plug in different AutoML and post-processing techniques, logs and visualizes the search process, and supports easy benchmarking. It currently features three AutoML search algorithms, two model post-processing steps, and is designed to allow for more components to be added.",
isbn="978-3-030-67670-4"
}
```

## License
The contents of this repository is under an [Apache-2.0 License](https://github.com/openml-labs/gama/blob/master/LICENSE).
