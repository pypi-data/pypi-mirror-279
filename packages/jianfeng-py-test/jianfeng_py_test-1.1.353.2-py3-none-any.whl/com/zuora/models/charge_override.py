# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, Dict, Optional, Union
from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr, constr
from com.zuora.models.charge_function import ChargeFunction
from com.zuora.models.charge_model import ChargeModel
from com.zuora.models.charge_override_billing import ChargeOverrideBilling
from com.zuora.models.charge_override_pricing import ChargeOverridePricing
from com.zuora.models.charge_type import ChargeType
from com.zuora.models.commitment_level import CommitmentLevel
from com.zuora.models.commitment_type import CommitmentType
from com.zuora.models.end_conditions import EndConditions
from com.zuora.models.prepaid_drawdown_credit_option import PrepaidDrawdownCreditOption
from com.zuora.models.prepaid_operation_type import PrepaidOperationType
from com.zuora.models.tax_mode import TaxMode
from com.zuora.models.trigger_params import TriggerParams

class ChargeOverride(BaseModel):
    """
    Charge associated with a rate plan.   # noqa: E501
    """
    name: Optional[StrictStr] = Field(None, description="The name of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled. ")
    account_receivable_accounting_code: Optional[StrictStr] = Field(None, alias="accountReceivableAccountingCode", description="The accountReceivableAccountingCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a>, <a href=\"https://knowledgecenter.zuora.com/Zuora_Payments/Zuora_Finance\" target=\"_blank\">Zuora Finance</a>, and <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Adjust_invoice_amounts/Invoice_Settlement/Get_started_with_Invoice_Settlement/AA_Overview_of_Invoice_Settlement\" target=\"_blank\">Invoice Settlement</a> features are enabled. ")
    adjustment_liability_accounting_code: Optional[StrictStr] = Field(None, alias="adjustmentLiabilityAccountingCode", description="The adjustmentLiabilityAccountingCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature and the <a href=\"https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration\" target=\"_blank\">Billing - Revenue Integration</a> or <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Enable_Order_to_Revenue/Order_to_Revenue_introduction/AA_Overview_of_Order_to_Revenue\" target=\"_blank\">Order to Revenue</a> feature are enabled. ")
    adjustment_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="adjustmentRevenueAccountingCode", description="The adjustmentRevenueAccountingCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature and the <a href=\"https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration\" target=\"_blank\">Billing - Revenue Integration</a> or <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Enable_Order_to_Revenue/Order_to_Revenue_introduction/AA_Overview_of_Order_to_Revenue\" target=\"_blank\">Order to Revenue</a> feature are enabled. ")
    contract_asset_accounting_code: Optional[StrictStr] = Field(None, alias="contractAssetAccountingCode", description="The contractAssetAccountingCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature and the <a href=\"https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration\" target=\"_blank\">Billing - Revenue Integration</a> or <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Enable_Order_to_Revenue/Order_to_Revenue_introduction/AA_Overview_of_Order_to_Revenue\" target=\"_blank\">Order to Revenue</a> feature are enabled. ")
    contract_liability_accounting_code: Optional[StrictStr] = Field(None, alias="contractLiabilityAccountingCode", description="The contractLiabilityAccountingCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature and the <a href=\"https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration\" target=\"_blank\">Billing - Revenue Integration</a> or <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Enable_Order_to_Revenue/Order_to_Revenue_introduction/AA_Overview_of_Order_to_Revenue\" target=\"_blank\">Order to Revenue</a> feature are enabled. ")
    contract_recognized_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="contractRecognizedRevenueAccountingCode", description="The contractRecognizedRevenueAccountingCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature and the <a href=\"https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration\" target=\"_blank\">Billing - Revenue Integration</a> or <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Enable_Order_to_Revenue/Order_to_Revenue_introduction/AA_Overview_of_Order_to_Revenue\" target=\"_blank\">Order to Revenue</a> feature are enabled. ")
    deferred_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="deferredRevenueAccountingCode", description="The deferredRevenueAccountingCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> and <a href=\"https://knowledgecenter.zuora.com/Zuora_Payments/Zuora_Finance\" target=\"_blank\">Zuora Finance</a> features are enabled. ")
    recognized_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="recognizedRevenueAccountingCode", description="The recognizedRevenueAccountingCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> and <a href=\"https://knowledgecenter.zuora.com/Zuora_Payments/Zuora_Finance\" target=\"_blank\">Zuora Finance</a> features are enabled. ")
    un_billed_receivables_accounting_code: Optional[StrictStr] = Field(None, alias="unBilledReceivablesAccountingCode", description="The unBilledReceivablesAccountingCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature and the <a href=\"https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration\" target=\"_blank\">Billing - Revenue Integration</a> or <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Enable_Order_to_Revenue/Order_to_Revenue_introduction/AA_Overview_of_Order_to_Revenue\" target=\"_blank\">Order to Revenue</a> feature are enabled. ")
    product_category: Optional[StrictStr] = Field(None, alias="productCategory", description="The productCategory of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled. ")
    product_class: Optional[StrictStr] = Field(None, alias="productClass", description="The productClass of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled. ")
    product_family: Optional[StrictStr] = Field(None, alias="productFamily", description="The productFamily of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled. ")
    product_line: Optional[StrictStr] = Field(None, alias="productLine", description="The productLine of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled. ")
    charge_model: Optional[ChargeModel] = Field(None, alias="chargeModel")
    charge_type: Optional[ChargeType] = Field(None, alias="chargeType")
    tax_code: Optional[StrictStr] = Field(None, alias="taxCode", description="The taxCode of a standalone charge.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled. ")
    tax_mode: Optional[TaxMode] = Field(None, alias="taxMode")
    is_charge_level_min_commit: Optional[StrictBool] = Field(None, alias="isChargeLevelMinCommit", description="The flag to indicate whether the charge is charge level min commit.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled. ")
    commitment_type: Optional[CommitmentType] = Field(None, alias="commitmentType")
    prepaid_operation_type: Optional[PrepaidOperationType] = Field(None, alias="prepaidOperationType")
    is_committed: Optional[StrictBool] = Field(None, alias="isCommitted", description="The flag to indicate whether the charge is committed.  ")
    charge_function: Optional[ChargeFunction] = Field(None, alias="chargeFunction")
    prepaid_uom: Optional[StrictStr] = Field(None, alias="prepaidUom", description="The prepaid unit of measure of the charge.  ")
    drawdown_uom: Optional[StrictStr] = Field(None, alias="drawdownUom", description="The drawdown unit of measure of the charge.  ")
    prepaid_total_quantity: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="prepaidTotalQuantity", description="The prepaid total quantity of the charge.  ")
    is_prepaid: Optional[StrictBool] = Field(None, alias="isPrepaid", description="The flag to indicate whether the charge is prepaid.  ")
    credit_option: Optional[PrepaidDrawdownCreditOption] = Field(None, alias="creditOption")
    billing: Optional[ChargeOverrideBilling] = None
    charge_number: Optional[constr(strict=True, max_length=50)] = Field(None, alias="chargeNumber", description="Charge number of the charge. For example, C-00000307.  If you do not set this field, Zuora will generate the charge number. ")
    custom_fields: Optional[Dict[str, Dict[str, Any]]] = Field(None, alias="customFields", description="Container for custom fields of a Rate Plan Charge object. ")
    description: Optional[constr(strict=True, max_length=500)] = Field(None, description="Description of the charge. ")
    drawdown_rate: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="drawdownRate", description="**Note**: This field is only available if you have the [Prepaid with Drawdown](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Prepaid_with_Drawdown) feature enabled.  The [conversion rate](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Prepaid_with_Drawdown/Create_drawdown_charge#UOM_Conversion) between Usage UOM and Drawdown UOM for a [drawdown charge](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Prepaid_with_Drawdown/Create_drawdown_charge). Must be a positive number (>0). ")
    end_date: Optional[EndConditions] = Field(None, alias="endDate")
    exclude_item_billing_from_revenue_accounting: Optional[StrictBool] = Field(None, alias="excludeItemBillingFromRevenueAccounting", description="The flag to exclude rate plan charge related invoice items, invoice item adjustments, credit memo items, and debit memo items from revenue accounting.  **Note**: This field is only available if you have the [Zuora Billing - Revenue Integration](https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration) feature enabled.  ")
    exclude_item_booking_from_revenue_accounting: Optional[StrictBool] = Field(None, alias="excludeItemBookingFromRevenueAccounting", description="The flag to exclude rate plan charges from revenue accounting.  **Note**: This field is only available if you have the [Zuora Billing - Revenue Integration](https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration) feature enabled.  ")
    is_allocation_eligible: Optional[StrictBool] = Field(None, alias="isAllocationEligible", description="This field is used to identify if the charge segment is allocation eligible in revenue recognition.  **Note**: This feature is in the **Early Adopter** phase. If you want to use the feature, submit a request at <a href=\"https://support.zuora.com/\" target=\"_blank\">Zuora Global Support</a>, and we will evaluate whether the feature is suitable for your use cases. ")
    is_rollover: Optional[StrictBool] = Field(None, alias="isRollover", description="**Note**: This field is only available if you have the [Prepaid with Drawdown](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Prepaid_with_Drawdown) feature enabled.  To use this field, you must set the `X-Zuora-WSDL-Version` request header to 114 or higher. Otherwise, an error occurs.  The value is either \"True\" or \"False\". It determines whether the rollover fields are needed. ")
    is_unbilled: Optional[StrictBool] = Field(None, alias="isUnbilled", description="This field is used to dictate how to perform the accounting during revenue recognition.  **Note**: This feature is in the **Early Adopter** phase. If you want to use the feature, submit a request at <a href=\"https://support.zuora.com/\" target=\"_blank\">Zuora Global Support</a>, and we will evaluate whether the feature is suitable for your use cases. ")
    prepaid_quantity: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="prepaidQuantity", description="**Note**: This field is only available if you have the [Prepaid with Drawdown](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Prepaid_with_Drawdown) feature enabled.  The number of units included in a [prepayment charge](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Prepaid_with_Drawdown/Create_prepayment_charge). Must be a positive number (>0). ")
    pricing: Optional[ChargeOverridePricing] = None
    product_rate_plan_charge_number: Optional[StrictStr] = Field(None, alias="productRatePlanChargeNumber", description="Number of a product rate-plan charge for this subscription. ")
    product_rate_plan_charge_id: StrictStr = Field(..., alias="productRatePlanChargeId", description="Internal identifier of the product rate plan charge that the charge is based on. ")
    rev_rec_code: Optional[constr(strict=True, max_length=70)] = Field(None, alias="revRecCode", description="Revenue Recognition Code ")
    rev_rec_trigger_condition: Optional[StrictStr] = Field(None, alias="revRecTriggerCondition")
    revenue_recognition_rule_name: Optional[StrictStr] = Field(None, alias="revenueRecognitionRuleName", description="Specifies the revenue recognition rule, such as `Recognize upon invoicing` or `Recognize daily over time`. ")
    rollover_apply: Optional[StrictStr] = Field(None, alias="rolloverApply")
    rollover_periods: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="rolloverPeriods", description="**Note**: This field is only available if you have the [Prepaid with Drawdown](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Prepaid_with_Drawdown) feature enabled.  To use this field, you must set the `X-Zuora-WSDL-Version` request header to 114 or higher. Otherwise, an error occurs.  This field defines the number of rollover periods, it is restricted to 3. ")
    start_date: Optional[TriggerParams] = Field(None, alias="startDate")
    unique_token: Optional[constr(strict=True, max_length=50)] = Field(None, alias="uniqueToken", description="Unique identifier for the charge. This identifier enables you to refer to the charge before the charge has an internal identifier in Zuora.  For instance, suppose that you want to use a single order to add a product to a subscription and later update the same product. When you add the product, you can set a unique identifier for the charge. Then when you update the product, you can use the same unique identifier to specify which charge to modify. ")
    upsell_origin_charge_number: Optional[StrictStr] = Field(None, alias="upsellOriginChargeNumber", description="**Note**: The Quantity Upsell feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com).  The identifier of the original upselling charge associated with the current charge. ")
    validity_period_type: Optional[StrictStr] = Field(None, alias="validityPeriodType")
    commitment_level: Optional[CommitmentLevel] = Field(None, alias="commitmentLevel")
    __properties = ["name", "accountReceivableAccountingCode", "adjustmentLiabilityAccountingCode", "adjustmentRevenueAccountingCode", "contractAssetAccountingCode", "contractLiabilityAccountingCode", "contractRecognizedRevenueAccountingCode", "deferredRevenueAccountingCode", "recognizedRevenueAccountingCode", "unBilledReceivablesAccountingCode", "productCategory", "productClass", "productFamily", "productLine", "chargeModel", "chargeType", "taxCode", "taxMode", "isChargeLevelMinCommit", "commitmentType", "prepaidOperationType", "isCommitted", "chargeFunction", "prepaidUom", "drawdownUom", "prepaidTotalQuantity", "isPrepaid", "creditOption", "billing", "chargeNumber", "customFields", "description", "drawdownRate", "endDate", "excludeItemBillingFromRevenueAccounting", "excludeItemBookingFromRevenueAccounting", "isAllocationEligible", "isRollover", "isUnbilled", "prepaidQuantity", "pricing", "productRatePlanChargeNumber", "productRatePlanChargeId", "revRecCode", "revRecTriggerCondition", "revenueRecognitionRuleName", "rolloverApply", "rolloverPeriods", "startDate", "uniqueToken", "upsellOriginChargeNumber", "validityPeriodType", "commitmentLevel"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ChargeOverride:
        """Create an instance of ChargeOverride from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of billing
        if self.billing:
            _dict['billing'] = self.billing.to_dict()
        # override the default output from pydantic by calling `to_dict()` of end_date
        if self.end_date:
            _dict['endDate'] = self.end_date.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pricing
        if self.pricing:
            _dict['pricing'] = self.pricing.to_dict()
        # override the default output from pydantic by calling `to_dict()` of start_date
        if self.start_date:
            _dict['startDate'] = self.start_date.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ChargeOverride:
        """Create an instance of ChargeOverride from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ChargeOverride.parse_obj(obj)

        _obj = ChargeOverride.parse_obj({
            "name": obj.get("name"),
            "account_receivable_accounting_code": obj.get("accountReceivableAccountingCode"),
            "adjustment_liability_accounting_code": obj.get("adjustmentLiabilityAccountingCode"),
            "adjustment_revenue_accounting_code": obj.get("adjustmentRevenueAccountingCode"),
            "contract_asset_accounting_code": obj.get("contractAssetAccountingCode"),
            "contract_liability_accounting_code": obj.get("contractLiabilityAccountingCode"),
            "contract_recognized_revenue_accounting_code": obj.get("contractRecognizedRevenueAccountingCode"),
            "deferred_revenue_accounting_code": obj.get("deferredRevenueAccountingCode"),
            "recognized_revenue_accounting_code": obj.get("recognizedRevenueAccountingCode"),
            "un_billed_receivables_accounting_code": obj.get("unBilledReceivablesAccountingCode"),
            "product_category": obj.get("productCategory"),
            "product_class": obj.get("productClass"),
            "product_family": obj.get("productFamily"),
            "product_line": obj.get("productLine"),
            "charge_model": obj.get("chargeModel"),
            "charge_type": obj.get("chargeType"),
            "tax_code": obj.get("taxCode"),
            "tax_mode": obj.get("taxMode"),
            "is_charge_level_min_commit": obj.get("isChargeLevelMinCommit"),
            "commitment_type": obj.get("commitmentType"),
            "prepaid_operation_type": obj.get("prepaidOperationType"),
            "is_committed": obj.get("isCommitted"),
            "charge_function": obj.get("chargeFunction"),
            "prepaid_uom": obj.get("prepaidUom"),
            "drawdown_uom": obj.get("drawdownUom"),
            "prepaid_total_quantity": obj.get("prepaidTotalQuantity"),
            "is_prepaid": obj.get("isPrepaid"),
            "credit_option": obj.get("creditOption"),
            "billing": ChargeOverrideBilling.from_dict(obj.get("billing")) if obj.get("billing") is not None else None,
            "charge_number": obj.get("chargeNumber"),
            "custom_fields": obj.get("customFields"),
            "description": obj.get("description"),
            "drawdown_rate": obj.get("drawdownRate"),
            "end_date": EndConditions.from_dict(obj.get("endDate")) if obj.get("endDate") is not None else None,
            "exclude_item_billing_from_revenue_accounting": obj.get("excludeItemBillingFromRevenueAccounting"),
            "exclude_item_booking_from_revenue_accounting": obj.get("excludeItemBookingFromRevenueAccounting"),
            "is_allocation_eligible": obj.get("isAllocationEligible"),
            "is_rollover": obj.get("isRollover"),
            "is_unbilled": obj.get("isUnbilled"),
            "prepaid_quantity": obj.get("prepaidQuantity"),
            "pricing": ChargeOverridePricing.from_dict(obj.get("pricing")) if obj.get("pricing") is not None else None,
            "product_rate_plan_charge_number": obj.get("productRatePlanChargeNumber"),
            "product_rate_plan_charge_id": obj.get("productRatePlanChargeId"),
            "rev_rec_code": obj.get("revRecCode"),
            "rev_rec_trigger_condition": obj.get("revRecTriggerCondition"),
            "revenue_recognition_rule_name": obj.get("revenueRecognitionRuleName"),
            "rollover_apply": obj.get("rolloverApply"),
            "rollover_periods": obj.get("rolloverPeriods"),
            "start_date": TriggerParams.from_dict(obj.get("startDate")) if obj.get("startDate") is not None else None,
            "unique_token": obj.get("uniqueToken"),
            "upsell_origin_charge_number": obj.get("upsellOriginChargeNumber"),
            "validity_period_type": obj.get("validityPeriodType"),
            "commitment_level": obj.get("commitmentLevel")
        })
        return _obj


