# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional, Union
from pydantic import BaseModel, Field, StrictFloat, StrictInt

class PreviewChargeMetricsCmrr(BaseModel):
    """
    PreviewChargeMetricsCmrr
    """
    discount: Optional[Union[StrictFloat, StrictInt]] = Field(None, description="Total discountCmrr of all discount charges which are applied to one specific recurring charge. This value is calculated from the rating results for the latest subscription version in the order. Only selects the applied discount charge when its endDateCondition is \"Subscription_End\".")
    discount_delta: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="discountDelta", description="Delta discountCmrr value between the order base and the latest subscription version.")
    regular: Optional[Union[StrictFloat, StrictInt]] = None
    regular_delta: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="regularDelta")
    __properties = ["discount", "discountDelta", "regular", "regularDelta"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PreviewChargeMetricsCmrr:
        """Create an instance of PreviewChargeMetricsCmrr from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PreviewChargeMetricsCmrr:
        """Create an instance of PreviewChargeMetricsCmrr from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PreviewChargeMetricsCmrr.parse_obj(obj)

        _obj = PreviewChargeMetricsCmrr.parse_obj({
            "discount": obj.get("discount"),
            "discount_delta": obj.get("discountDelta"),
            "regular": obj.get("regular"),
            "regular_delta": obj.get("regularDelta")
        })
        return _obj


