# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr

class RSASignatureResponse(BaseModel):
    """
    RSASignatureResponse
    """
    key: Optional[StrictStr] = Field(None, description="Public key generated for this Payment Page. ")
    signature: Optional[StrictStr] = Field(None, description="Digital signature generated for this Payment Page.  If `signature` returns `null` but `token` is successfully returned, please limit the number of the fields in your request to make sure that the maximum length supported by the RSA signature algorithm is not exceeded. ")
    success: Optional[StrictBool] = Field(None, description="Returns `true` if the request was processed successfully. ")
    tenant_id: Optional[StrictStr] = Field(None, alias="tenantId", description="ID of the Zuora tenant. ")
    token: Optional[StrictStr] = Field(None, description="Token generated for this Payment Page. ")
    __properties = ["key", "signature", "success", "tenantId", "token"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> RSASignatureResponse:
        """Create an instance of RSASignatureResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> RSASignatureResponse:
        """Create an instance of RSASignatureResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return RSASignatureResponse.parse_obj(obj)

        _obj = RSASignatureResponse.parse_obj({
            "key": obj.get("key"),
            "signature": obj.get("signature"),
            "success": obj.get("success"),
            "tenant_id": obj.get("tenantId"),
            "token": obj.get("token")
        })
        return _obj


