# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import Optional, Union
from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr, constr
from zuora_sdk.models.billing_document_status import BillingDocumentStatus
from zuora_sdk.models.e_invoice_status import EInvoiceStatus
from zuora_sdk.models.memo_source_type import MemoSourceType
from zuora_sdk.models.tax_status import TaxStatus
from zuora_sdk.models.transferred_to_accounting_status import TransferredToAccountingStatus

class CreditMemo(BaseModel):
    """
    CreditMemo
    """
    integration_id__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationId__NS", description="ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    integration_status__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationStatus__NS", description="Status of the credit memo's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    origin__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Origin__NS", description="Origin of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    sync_date__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="SyncDate__NS", description="Date when the credit memo was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    transaction__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Transaction__NS", description="Related transaction in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    account_id: Optional[StrictStr] = Field(None, alias="accountId", description="The ID of the customer account associated with the credit memo.")
    account_number: Optional[StrictStr] = Field(None, alias="accountNumber", description="The number of the account associated with the credit memo.")
    amount: Optional[Union[StrictFloat, StrictInt]] = Field(None, description="The total amount of the credit memo.")
    applied_amount: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="appliedAmount", description="The applied amount of the credit memo.")
    auto_apply_upon_posting: Optional[StrictBool] = Field(None, alias="autoApplyUponPosting", description="Whether the credit memo automatically applies to the invoice upon posting.")
    bill_to_contact_id: Optional[StrictStr] = Field(None, alias="billToContactId", description="The ID of the bill-to contact associated with the credit memo. The value of this field is `null` if you have the [Flexible Billing Attributes](https://knowledgecenter.zuora.com/Billing/Subscriptions/Flexible_Billing_Attributes) feature disabled.")
    cancelled_by_id: Optional[StrictStr] = Field(None, alias="cancelledById", description="The ID of the Zuora user who cancelled the credit memo.")
    cancelled_on: Optional[StrictStr] = Field(None, alias="cancelledOn", description="The date and time when the credit memo was cancelled, in `yyyy-mm-dd hh:mm:ss` format.")
    comment: Optional[StrictStr] = Field(None, description="Comments about the credit memo.")
    created_by_id: Optional[StrictStr] = Field(None, alias="createdById", description="The ID of the Zuora user who created the credit memo.")
    created_date: Optional[StrictStr] = Field(None, alias="createdDate", description="The date and time when the credit memo was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.")
    credit_memo_date: Optional[date] = Field(None, alias="creditMemoDate", description="The date when the credit memo takes effect, in `yyyy-mm-dd` format. For example, 2017-05-20.")
    currency: Optional[StrictStr] = Field(None, description="A currency defined in the web-based UI administrative settings.")
    exclude_from_auto_apply_rules: Optional[StrictBool] = Field(None, alias="excludeFromAutoApplyRules", description="Whether the credit memo is excluded from the rule of automatically applying unapplied credit memos to invoices and debit memos during payment runs.")
    id: Optional[StrictStr] = Field(None, description="The unique ID of the credit memo.")
    invoice_group_number: Optional[constr(strict=True, max_length=255)] = Field(None, alias="invoiceGroupNumber", description="The number of invoice group associated with the credit memo.  **Note**: This field is available only if you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature enabled. ")
    latest_pdf_file_id: Optional[StrictStr] = Field(None, alias="latestPDFFileId", description="The ID of the latest PDF file generated for the credit memo. ")
    number: Optional[StrictStr] = Field(None, description="The unique identification number of the credit memo. ")
    posted_by_id: Optional[StrictStr] = Field(None, alias="postedById", description="The ID of the Zuora user who posted the credit memo. ")
    posted_on: Optional[StrictStr] = Field(None, alias="postedOn", description="The date and time when the credit memo was posted, in `yyyy-mm-dd hh:mm:ss` format.")
    reason_code: Optional[StrictStr] = Field(None, alias="reasonCode", description="A code identifying the reason for the transaction. The value must be an existing reason code or empty.")
    referred_invoice_id: Optional[StrictStr] = Field(None, alias="referredInvoiceId", description="The ID of a referred invoice.")
    refund_amount: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="refundAmount", description="The amount of the refund on the credit memo.")
    reversed: Optional[StrictBool] = Field(None, description="Whether the credit memo is reversed.")
    sequence_set_id: Optional[StrictStr] = Field(None, alias="sequenceSetId", description="The ID of the sequence set associated with the credit memo. The value of this field is `null` if you have the [Flexible Billing Attributes](https://knowledgecenter.zuora.com/Billing/Subscriptions/Flexible_Billing_Attributes) feature disabled.")
    source: Optional[StrictStr] = Field(None, description="The source of the credit memo.  Possible values: - `BillRun`: The credit memo is generated by a bill run. - `API`: The credit memo is created by calling the [Invoice and collect](https://www.zuora.com/developer/api-references/api/operation/Post_TransactionInvoicePayment) operation, or by calling the Orders, Order Line Items, or Fulfillments API operations. - `ApiSubscribe`: The credit memo is created by calling the [Create subscription](https://www.zuora.com/developer/api-references/api/operation/Post_Subscription) and [Create account](https://www.zuora.com/developer/api-references/api/operation/Post_Account) operation. - `ApiAmend`: The credit memo is created by calling the [Update subscription](https://www.zuora.com/developer/api-references/api/operation/Put_Subscription) operation. - `AdhocFromPrpc`: The credit memo is created from a product rate plan charge through the Zuora UI or by calling the [Create a credit memo from a charge](https://www.zuora.com/developer/api-references/api/operation/Post_CreditMemoFromPrpc) operation. - `AdhocFromInvoice`: The credit memo is created from an invoice or created by reversing an invoice. You can create a credit memo from an invoice through the Zuora UI or by calling the [Create credit memo from invoice](https://www.zuora.com/developer/api-references/api/operation/Post_CreditMemoFromInvoice) operation. You can create a credit memo by reversing an invoice through the Zuora UI or by calling the [Reverse invoice](https://www.zuora.com/developer/api-references/api/operation/Put_ReverseInvoice) operation.")
    source_id: Optional[StrictStr] = Field(None, alias="sourceId", description="The ID of the credit memo source.   If a credit memo is generated from a bill run, the value is the number of the corresponding bill run. Otherwise, the value is `null`. ")
    source_type: Optional[StrictStr] = Field(None, alias="sourceType")
    status: Optional[StrictStr] = None
    target_date: Optional[date] = Field(None, alias="targetDate", description="The target date for the credit memo, in `yyyy-mm-dd` format. For example, 2017-07-20. ")
    tax_amount: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="taxAmount", description="The amount of taxation.")
    tax_message: Optional[StrictStr] = Field(None, alias="taxMessage", description="The message about the status of tax calculation related to the credit memo. If tax calculation fails in one credit memo, this field displays the reason for the failure.")
    tax_status: Optional[StrictStr] = Field(None, alias="taxStatus")
    total_tax_exempt_amount: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="totalTaxExemptAmount", description="The calculated tax amount excluded due to the exemption.")
    transferred_to_accounting: Optional[StrictStr] = Field(None, alias="transferredToAccounting")
    unapplied_amount: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="unappliedAmount", description="The unapplied amount of the credit memo.")
    updated_by_id: Optional[StrictStr] = Field(None, alias="updatedById", description="The ID of the Zuora user who last updated the credit memo.")
    updated_date: Optional[StrictStr] = Field(None, alias="updatedDate", description="The date and time when the credit memo was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.")
    e_invoice_status: Optional[StrictStr] = Field(None, alias="eInvoiceStatus")
    e_invoice_error_code: Optional[StrictStr] = Field(None, alias="eInvoiceErrorCode", description="eInvoiceErrorCode. ")
    e_invoice_error_message: Optional[StrictStr] = Field(None, alias="eInvoiceErrorMessage", description="eInvoiceErrorMessage. ")
    e_invoice_file_id: Optional[StrictStr] = Field(None, alias="eInvoiceFileId", description="eInvoiceFileId. ")
    bill_to_contact_snapshot_id: Optional[StrictStr] = Field(None, alias="billToContactSnapshotId", description="billToContactSnapshotId. ")
    organization_label: Optional[StrictStr] = Field(None, alias="organizationLabel", description="organization label. ")
    additional_properties: Dict[str, Any] = {}
    __properties = ["IntegrationId__NS", "IntegrationStatus__NS", "Origin__NS", "SyncDate__NS", "Transaction__NS", "accountId", "accountNumber", "amount", "appliedAmount", "autoApplyUponPosting", "billToContactId", "cancelledById", "cancelledOn", "comment", "createdById", "createdDate", "creditMemoDate", "currency", "excludeFromAutoApplyRules", "id", "invoiceGroupNumber", "latestPDFFileId", "number", "postedById", "postedOn", "reasonCode", "referredInvoiceId", "refundAmount", "reversed", "sequenceSetId", "source", "sourceId", "sourceType", "status", "targetDate", "taxAmount", "taxMessage", "taxStatus", "totalTaxExemptAmount", "transferredToAccounting", "unappliedAmount", "updatedById", "updatedDate", "eInvoiceStatus", "eInvoiceErrorCode", "eInvoiceErrorMessage", "eInvoiceFileId", "billToContactSnapshotId", "organizationLabel"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CreditMemo:
        """Create an instance of CreditMemo from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                            "additional_properties"
                          },
                          exclude_none=True)
        # puts key-value pairs in additional_properties in the top level
        if self.additional_properties is not None:
            for _key, _value in self.additional_properties.items():
                _dict[_key] = _value

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CreditMemo:
        """Create an instance of CreditMemo from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CreditMemo.parse_obj(obj)

        _obj = CreditMemo.parse_obj({
            "integration_id__ns": obj.get("IntegrationId__NS"),
            "integration_status__ns": obj.get("IntegrationStatus__NS"),
            "origin__ns": obj.get("Origin__NS"),
            "sync_date__ns": obj.get("SyncDate__NS"),
            "transaction__ns": obj.get("Transaction__NS"),
            "account_id": obj.get("accountId"),
            "account_number": obj.get("accountNumber"),
            "amount": obj.get("amount"),
            "applied_amount": obj.get("appliedAmount"),
            "auto_apply_upon_posting": obj.get("autoApplyUponPosting"),
            "bill_to_contact_id": obj.get("billToContactId"),
            "cancelled_by_id": obj.get("cancelledById"),
            "cancelled_on": obj.get("cancelledOn"),
            "comment": obj.get("comment"),
            "created_by_id": obj.get("createdById"),
            "created_date": obj.get("createdDate"),
            "credit_memo_date": obj.get("creditMemoDate"),
            "currency": obj.get("currency"),
            "exclude_from_auto_apply_rules": obj.get("excludeFromAutoApplyRules"),
            "id": obj.get("id"),
            "invoice_group_number": obj.get("invoiceGroupNumber"),
            "latest_pdf_file_id": obj.get("latestPDFFileId"),
            "number": obj.get("number"),
            "posted_by_id": obj.get("postedById"),
            "posted_on": obj.get("postedOn"),
            "reason_code": obj.get("reasonCode"),
            "referred_invoice_id": obj.get("referredInvoiceId"),
            "refund_amount": obj.get("refundAmount"),
            "reversed": obj.get("reversed"),
            "sequence_set_id": obj.get("sequenceSetId"),
            "source": obj.get("source"),
            "source_id": obj.get("sourceId"),
            "source_type": obj.get("sourceType"),
            "status": obj.get("status"),
            "target_date": obj.get("targetDate"),
            "tax_amount": obj.get("taxAmount"),
            "tax_message": obj.get("taxMessage"),
            "tax_status": obj.get("taxStatus"),
            "total_tax_exempt_amount": obj.get("totalTaxExemptAmount"),
            "transferred_to_accounting": obj.get("transferredToAccounting"),
            "unapplied_amount": obj.get("unappliedAmount"),
            "updated_by_id": obj.get("updatedById"),
            "updated_date": obj.get("updatedDate"),
            "e_invoice_status": obj.get("eInvoiceStatus"),
            "e_invoice_error_code": obj.get("eInvoiceErrorCode"),
            "e_invoice_error_message": obj.get("eInvoiceErrorMessage"),
            "e_invoice_file_id": obj.get("eInvoiceFileId"),
            "bill_to_contact_snapshot_id": obj.get("billToContactSnapshotId"),
            "organization_label": obj.get("organizationLabel")
        })
        # store additional fields in additional_properties
        for _key in obj.keys():
            if _key not in cls.__properties:
                _obj.additional_properties[_key] = obj.get(_key)

        return _obj


