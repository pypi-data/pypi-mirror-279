# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class CreatePaymentMethodApplePayAdyen(BaseModel):
    """
    CreatePaymentMethodApplePayAdyen
    """
    apple_payment_data: Optional[StrictStr] = Field(None, alias="applePaymentData", description="This field is specific for setting up Apple Pay for Adyen to include payload with Apple Pay token or Apple payment data. This information should be stringified. For more information, see [Set up Adyen Apple Pay](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/L_Payment_Methods/Payment_Method_Types/Apple_Pay_on_Web/Set_up_Adyen_Apple_Pay). ")
    __properties = ["applePaymentData"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CreatePaymentMethodApplePayAdyen:
        """Create an instance of CreatePaymentMethodApplePayAdyen from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CreatePaymentMethodApplePayAdyen:
        """Create an instance of CreatePaymentMethodApplePayAdyen from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CreatePaymentMethodApplePayAdyen.parse_obj(obj)

        _obj = CreatePaymentMethodApplePayAdyen.parse_obj({
            "apple_payment_data": obj.get("applePaymentData")
        })
        return _obj


