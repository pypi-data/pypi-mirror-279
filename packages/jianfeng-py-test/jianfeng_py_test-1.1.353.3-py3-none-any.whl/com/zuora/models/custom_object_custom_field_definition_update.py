# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictBool, StrictInt, StrictStr

class CustomObjectCustomFieldDefinitionUpdate(BaseModel):
    """
    The custom field definition in the custom object  # noqa: E501
    """
    default: Optional[StrictStr] = Field(None, description="Applicable if the `type` of the action is  `updateField`")
    description: Optional[StrictStr] = Field(None, description="Applicable if the `type` of the action is  `updateField`")
    display_name: Optional[StrictBool] = Field(None, alias="displayName", description="Indicates whether to use this field as the display name of the custom object when being linked to another custom object.  This field applies only to the Text custom field type:  - The `type` field is `string`. - The `enum` field is not specified. ")
    format: Optional[StrictStr] = Field(None, description="The data format of the custom field")
    label: Optional[StrictStr] = Field(None, description="The UI label of the custom field")
    max_length: Optional[StrictInt] = Field(None, alias="maxLength", description="The maximum length of string that can be stored in the custom field.  This field applies only to the following custom field types:  - Text:   - The `type` field is `string`.   - The `format` field is not specified or is `url`.   - The `enum` field is not specified. - Picklist:   - The `type` field is `string`.   - The `enum` field is specified.   - The `multiselect` field is not specified or is `false`. - Multiselect:   - The `type` field is `string`.   - The `enum` field is specified.   - The `multiselect` field is `true`.  If the custom field is filterable, the value of `maxLength` must be 512 or less. ")
    multiselect: Optional[StrictBool] = Field(None, description="Indicates whether this is a multiselect custom field.  This field applies only to the creation of Picklist or Multiselect custom fields:  - The action `type` field is `addField`. - The definition `type` field is `string`. - The `maxLength` field is specified. - The `enum` field is specified. ")
    origin: Optional[StrictStr] = None
    type: Optional[StrictStr] = Field(None, description="The data type of the custom field")
    __properties = ["default", "description", "displayName", "format", "label", "maxLength", "multiselect", "origin", "type"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CustomObjectCustomFieldDefinitionUpdate:
        """Create an instance of CustomObjectCustomFieldDefinitionUpdate from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CustomObjectCustomFieldDefinitionUpdate:
        """Create an instance of CustomObjectCustomFieldDefinitionUpdate from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CustomObjectCustomFieldDefinitionUpdate.parse_obj(obj)

        _obj = CustomObjectCustomFieldDefinitionUpdate.parse_obj({
            "default": obj.get("default"),
            "description": obj.get("description"),
            "display_name": obj.get("displayName"),
            "format": obj.get("format"),
            "label": obj.get("label"),
            "max_length": obj.get("maxLength"),
            "multiselect": obj.get("multiselect"),
            "origin": obj.get("origin"),
            "type": obj.get("type")
        })
        return _obj


