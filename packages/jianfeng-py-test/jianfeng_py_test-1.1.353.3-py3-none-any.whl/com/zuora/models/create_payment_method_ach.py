# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr, constr

class CreatePaymentMethodACH(BaseModel):
    """
    CreatePaymentMethodACH
    """
    address_line1: Optional[StrictStr] = Field(None, alias="addressLine1", description="First address line, 255 characters or less. ")
    address_line2: Optional[StrictStr] = Field(None, alias="addressLine2", description="Second address line, 255 characters or less. ")
    bank_aba_code: Optional[StrictStr] = Field(None, alias="bankABACode", description="The nine-digit routing number or ABA number used by banks. This field is only required if the `type` field is set to `ACH`. ")
    bank_account_name: Optional[constr(strict=True, max_length=70)] = Field(None, alias="bankAccountName", description="The name of the account holder, which can be either a person or a company. This field is only required if the `type` field is set to `ACH`.  For ACH payment methods on the BlueSnap integration, see [Overview of BlueSnap gateway integration](https://knowledgecenter.zuora.com/Zuora_Billing/Billing_and_Payments/M_Payment_Gateways/Supported_Payment_Gateways/BlueSnap_Gateway/Overview_of_BlueSnap_gateway_integration#Payer_Name_Extraction) for more information about how Zuora splits the string in this field into two parts and passes them to BlueSnap's `firstName` and `lastName` fields. ")
    bank_account_number: Optional[constr(strict=True, max_length=70)] = Field(None, alias="bankAccountNumber", description="The bank account number associated with the ACH payment. This field is only required if the `type` field is set to `ACH`. However, for creating tokenized ACH payment methods on  Stripe v2, this field is optional if the `tokens` and `bankAccountMaskNumber` fields are specified. ")
    bank_account_mask_number: Optional[constr(strict=True, max_length=30)] = Field(None, alias="bankAccountMaskNumber", description="The masked bank account number associated with the ACH payment. This field is only required if the ACH payment method is created using tokens. ")
    bank_account_type: Optional[StrictStr] = Field(None, alias="bankAccountType")
    bank_name: Optional[constr(strict=True, max_length=70)] = Field(None, alias="bankName", description="The name of the bank where the ACH payment account is held. This field is only required if the `type` field is set to `ACH`.  When creating an ACH payment method on Adyen, this field is required by Zuora but it is not required by Adyen. To create the ACH payment method successfully, specify a real value for this field if you can. If it is not possible to get the real value for it, specify a dummy value. ")
    city: Optional[StrictStr] = Field(None, description="City, 40 characters or less.  It is recommended to provide the city and country information when creating a payment method. The information will be used to process payments. If the information is not provided during payment method creation, the city and country data will be missing during payment processing.      ")
    country: Optional[StrictStr] = Field(None, description="Country, must be a valid country name or abbreviation.  See [Country Names and Their ISO Standard 2- and 3-Digit Codes](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/D_Country%2C_State%2C_and_Province_Codes/A_Country_Names_and_Their_ISO_Codes) for the list of supported country names and abbreviations.  It is recommended to provide the city and country information when creating a payment method. The information will be used to process payments. If the information is not provided during payment method creation, the city and country data will be missing during payment processing. ")
    phone: Optional[StrictStr] = Field(None, description="Phone number, 40 characters or less. ")
    state: Optional[StrictStr] = Field(None, description="State, must be a valid state name or 2-character abbreviation.  See [United States Standard State Codes](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/D_Country%2C_State%2C_and_Province_Codes/B_State_Names_and_2-Digit_Codes) and [Canadian Standard Province Codes](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/D_Country%2C_State%2C_and_Province_Codes/C_Canadian_Province_Names_and_2-Digit_Codes) for the list of supported names and abbreviations. ")
    zip_code: Optional[StrictStr] = Field(None, alias="zipCode", description="Zip code, 20 characters or less. ")
    __properties = ["addressLine1", "addressLine2", "bankABACode", "bankAccountName", "bankAccountNumber", "bankAccountMaskNumber", "bankAccountType", "bankName", "city", "country", "phone", "state", "zipCode"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CreatePaymentMethodACH:
        """Create an instance of CreatePaymentMethodACH from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CreatePaymentMethodACH:
        """Create an instance of CreatePaymentMethodACH from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CreatePaymentMethodACH.parse_obj(obj)

        _obj = CreatePaymentMethodACH.parse_obj({
            "address_line1": obj.get("addressLine1"),
            "address_line2": obj.get("addressLine2"),
            "bank_aba_code": obj.get("bankABACode"),
            "bank_account_name": obj.get("bankAccountName"),
            "bank_account_number": obj.get("bankAccountNumber"),
            "bank_account_mask_number": obj.get("bankAccountMaskNumber"),
            "bank_account_type": obj.get("bankAccountType"),
            "bank_name": obj.get("bankName"),
            "city": obj.get("city"),
            "country": obj.get("country"),
            "phone": obj.get("phone"),
            "state": obj.get("state"),
            "zip_code": obj.get("zipCode")
        })
        return _obj


