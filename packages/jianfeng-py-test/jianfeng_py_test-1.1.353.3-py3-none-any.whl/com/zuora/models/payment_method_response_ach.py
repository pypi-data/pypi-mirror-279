# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class PaymentMethodResponseACH(BaseModel):
    """
    PaymentMethodResponseACH
    """
    bank_aba_code: Optional[StrictStr] = Field(None, alias="bankABACode", description="The nine-digit routing number or ABA number used by banks. This field is only required if the `type` field is set to `ACH`. ")
    bank_account_name: Optional[StrictStr] = Field(None, alias="bankAccountName", description="The name of the account holder, which can be either a person or a company. This field is only required if the `type` field is set to `ACH`. ")
    bank_account_number: Optional[StrictStr] = Field(None, alias="bankAccountNumber", description="The bank account number associated with the ACH payment. This field is only required if the `type` field is set to `ACH`. However, for creating tokenized ACH payment methods on  Stripe v2, this field is optional if the `tokens` and `bankAccountMaskNumber` fields are specified. ")
    bank_account_mask_number: Optional[StrictStr] = Field(None, alias="bankAccountMaskNumber", description="The masked bank account number associated with the ACH payment. This field is only required if the ACH payment method is created using tokens. ")
    bank_account_type: Optional[StrictStr] = Field(None, alias="bankAccountType")
    bank_name: Optional[StrictStr] = Field(None, alias="bankName", description="The name of the bank where the ACH payment account is held. This field is only required if the `type` field is set to `ACH`.  When creating an ACH payment method on Adyen, this field is required by Zuora but it is not required by Adyen. To create the ACH payment method successfully, specify a real value for this field if you can. If it is not possible to get the real value for it, specify a dummy value. ")
    __properties = ["bankABACode", "bankAccountName", "bankAccountNumber", "bankAccountMaskNumber", "bankAccountType", "bankName"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PaymentMethodResponseACH:
        """Create an instance of PaymentMethodResponseACH from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PaymentMethodResponseACH:
        """Create an instance of PaymentMethodResponseACH from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PaymentMethodResponseACH.parse_obj(obj)

        _obj = PaymentMethodResponseACH.parse_obj({
            "bank_aba_code": obj.get("bankABACode"),
            "bank_account_name": obj.get("bankAccountName"),
            "bank_account_number": obj.get("bankAccountNumber"),
            "bank_account_mask_number": obj.get("bankAccountMaskNumber"),
            "bank_account_type": obj.get("bankAccountType"),
            "bank_name": obj.get("bankName")
        })
        return _obj


