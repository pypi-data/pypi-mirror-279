# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional
from pydantic import BaseModel, Field, StrictStr, conlist
from com.zuora.models.order_item import OrderItem
from com.zuora.models.order_metric import OrderMetric

class PreviewResultOrderMetricsInnerOrderActionsInner(BaseModel):
    """
    PreviewResultOrderMetricsInnerOrderActionsInner
    """
    order_items: Optional[conlist(OrderItem)] = Field(None, alias="orderItems", description="The `orderItems` nested field is only available to existing Orders customers who already have access to the field.  **Note:** The following Order Metrics have been deprecated. Any new customers who onboard on [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization/Orders_Harmonization) will not get these metrics. * The Order ELP and Order Item objects  * The \"Generated Reason\" and \"Order Item ID\" fields in the Order MRR, Order TCB, Order TCV, and Order Quantity objects  Existing Orders customers who have these metrics will continue to be supported. ")
    order_metrics: Optional[conlist(OrderMetric)] = Field(None, alias="orderMetrics", description="The container for order metrics.  **Note:** The following Order Metrics have been deprecated. Any new customers who onboard on [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization/Orders_Harmonization) will not get these metrics. * The Order ELP and Order Item objects  * The \"Generated Reason\" and \"Order Item ID\" fields in the Order MRR, Order TCB, Order TCV, and Order Quantity objects  Existing Orders customers who have these metrics will continue to be supported. ")
    sequence: Optional[StrictStr] = None
    type: Optional[StrictStr] = None
    __properties = ["orderItems", "orderMetrics", "sequence", "type"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PreviewResultOrderMetricsInnerOrderActionsInner:
        """Create an instance of PreviewResultOrderMetricsInnerOrderActionsInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in order_items (list)
        _items = []
        if self.order_items:
            for _item in self.order_items:
                if _item:
                    _items.append(_item.to_dict())
            _dict['orderItems'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in order_metrics (list)
        _items = []
        if self.order_metrics:
            for _item in self.order_metrics:
                if _item:
                    _items.append(_item.to_dict())
            _dict['orderMetrics'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PreviewResultOrderMetricsInnerOrderActionsInner:
        """Create an instance of PreviewResultOrderMetricsInnerOrderActionsInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PreviewResultOrderMetricsInnerOrderActionsInner.parse_obj(obj)

        _obj = PreviewResultOrderMetricsInnerOrderActionsInner.parse_obj({
            "order_items": [OrderItem.from_dict(_item) for _item in obj.get("orderItems")] if obj.get("orderItems") is not None else None,
            "order_metrics": [OrderMetric.from_dict(_item) for _item in obj.get("orderMetrics")] if obj.get("orderMetrics") is not None else None,
            "sequence": obj.get("sequence"),
            "type": obj.get("type")
        })
        return _obj


