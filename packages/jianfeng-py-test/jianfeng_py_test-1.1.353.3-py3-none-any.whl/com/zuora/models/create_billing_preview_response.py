# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr, conlist
from com.zuora.models.create_billing_preview_credit_memo_item import CreateBillingPreviewCreditMemoItem
from com.zuora.models.create_billing_preview_invoice_item import CreateBillingPreviewInvoiceItem

class CreateBillingPreviewResponse(BaseModel):
    """
    CreateBillingPreviewResponse
    """
    account_id: Optional[StrictStr] = Field(None, alias="accountId", description="ID of the customer account to which the billing preview applies. ")
    credit_memo_items: Optional[conlist(CreateBillingPreviewCreditMemoItem)] = Field(None, alias="creditMemoItems", description="An array of credit memo items returned as the result of the billing preivew request.  **Note:** The credit memo items are only available if you have Invoice Settlement feature enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information. ")
    invoice_items: Optional[conlist(CreateBillingPreviewInvoiceItem)] = Field(None, alias="invoiceItems", description="An array of invoice items returned as the result of the billing preview request. ")
    success: Optional[StrictBool] = Field(None, description="Returns `true` if the request was processed successfully. ")
    __properties = ["accountId", "creditMemoItems", "invoiceItems", "success"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CreateBillingPreviewResponse:
        """Create an instance of CreateBillingPreviewResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in credit_memo_items (list)
        _items = []
        if self.credit_memo_items:
            for _item in self.credit_memo_items:
                if _item:
                    _items.append(_item.to_dict())
            _dict['creditMemoItems'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in invoice_items (list)
        _items = []
        if self.invoice_items:
            for _item in self.invoice_items:
                if _item:
                    _items.append(_item.to_dict())
            _dict['invoiceItems'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CreateBillingPreviewResponse:
        """Create an instance of CreateBillingPreviewResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CreateBillingPreviewResponse.parse_obj(obj)

        _obj = CreateBillingPreviewResponse.parse_obj({
            "account_id": obj.get("accountId"),
            "credit_memo_items": [CreateBillingPreviewCreditMemoItem.from_dict(_item) for _item in obj.get("creditMemoItems")] if obj.get("creditMemoItems") is not None else None,
            "invoice_items": [CreateBillingPreviewInvoiceItem.from_dict(_item) for _item in obj.get("invoiceItems")] if obj.get("invoiceItems") is not None else None,
            "success": obj.get("success")
        })
        return _obj


