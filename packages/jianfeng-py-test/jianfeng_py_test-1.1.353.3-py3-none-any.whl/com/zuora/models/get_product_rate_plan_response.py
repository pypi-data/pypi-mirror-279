# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import List, Optional, Union
from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr, conlist
from com.zuora.models.product_rate_plan_status import ProductRatePlanStatus

class GetProductRatePlanResponse(BaseModel):
    """
    GetProductRatePlanResponse
    """
    external_id_source_system: Optional[StrictStr] = Field(None, alias="ExternalIdSourceSystem", description="The combination of `externallyManagedPlanId` and `externalIdSourceSystem` is the unique identifier for the rate plan purchased on a third-party store. This field is used to represent a subscription rate plan created through third-party stores. ")
    description: Optional[StrictStr] = Field(None, description="The short description of the product rate plan. ")
    effective_end_date: Optional[date] = Field(None, alias="effectiveEndDate", description="The end date of the product rate plan. ")
    effective_start_date: Optional[date] = Field(None, alias="effectiveStartDate", description="The start date of the product rate plan. ")
    externally_managed_plan_ids: Optional[conlist(StrictStr)] = Field(None, alias="externallyManagedPlanIds", description="The unique identifier for the product rate plan in a third-party store. This field is used to represent a rate plan created through third-party stores. ")
    grade: Optional[Union[StrictFloat, StrictInt]] = Field(None, description="The grade of the product rate plan.  **Note**: This field is in the **Early Adopter** phase. We are actively soliciting feedback from a small set of early adopters before releasing it as generally available. If you want to join this early adopter program, submit a request at [Zuora Global Support](http://support.zuora.com/). ")
    id: Optional[StrictStr] = Field(None, description="The unique product rate plan ID. ")
    name: Optional[StrictStr] = Field(None, description="The name of the product rate plan. ")
    status: Optional[StrictStr] = None
    success: Optional[StrictBool] = Field(None, description="Returns `true` if the request was processed successfully. ")
    __properties = ["ExternalIdSourceSystem", "description", "effectiveEndDate", "effectiveStartDate", "externallyManagedPlanIds", "grade", "id", "name", "status", "success"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> GetProductRatePlanResponse:
        """Create an instance of GetProductRatePlanResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> GetProductRatePlanResponse:
        """Create an instance of GetProductRatePlanResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return GetProductRatePlanResponse.parse_obj(obj)

        _obj = GetProductRatePlanResponse.parse_obj({
            "external_id_source_system": obj.get("ExternalIdSourceSystem"),
            "description": obj.get("description"),
            "effective_end_date": obj.get("effectiveEndDate"),
            "effective_start_date": obj.get("effectiveStartDate"),
            "externally_managed_plan_ids": obj.get("externallyManagedPlanIds"),
            "grade": obj.get("grade"),
            "id": obj.get("id"),
            "name": obj.get("name"),
            "status": obj.get("status"),
            "success": obj.get("success")
        })
        return _obj


