# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr

class RegenerateBookingRequest(BaseModel):
    """
    RegenerateBookingRequest
    """
    type: Optional[StrictStr] = None
    subscription_id: Optional[StrictStr] = Field(None, alias="subscriptionId")
    subscription_number: Optional[StrictStr] = Field(None, alias="subscriptionNumber")
    subscription_version: Optional[StrictInt] = Field(None, alias="subscriptionVersion")
    order_line_item_id: Optional[StrictStr] = Field(None, alias="orderLineItemId")
    order_number: Optional[StrictStr] = Field(None, alias="orderNumber")
    item_number: Optional[StrictStr] = Field(None, alias="itemNumber")
    __properties = ["type", "subscriptionId", "subscriptionNumber", "subscriptionVersion", "orderLineItemId", "orderNumber", "itemNumber"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> RegenerateBookingRequest:
        """Create an instance of RegenerateBookingRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> RegenerateBookingRequest:
        """Create an instance of RegenerateBookingRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return RegenerateBookingRequest.parse_obj(obj)

        _obj = RegenerateBookingRequest.parse_obj({
            "type": obj.get("type"),
            "subscription_id": obj.get("subscriptionId"),
            "subscription_number": obj.get("subscriptionNumber"),
            "subscription_version": obj.get("subscriptionVersion"),
            "order_line_item_id": obj.get("orderLineItemId"),
            "order_number": obj.get("orderNumber"),
            "item_number": obj.get("itemNumber")
        })
        return _obj


