# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import Optional, Union
from pydantic import BaseModel, Field, StrictFloat, StrictInt, StrictStr

class TimeSlicedTcbNetMetrics(BaseModel):
    """
    TimeSlicedTcbNetMetrics
    """
    amount: Optional[Union[StrictFloat, StrictInt]] = None
    discount_charge_number: Optional[StrictStr] = Field(None, alias="discountChargeNumber")
    end_date: Optional[date] = Field(None, alias="endDate")
    generated_reason: Optional[StrictStr] = Field(None, alias="generatedReason")
    invoice_owner: Optional[StrictStr] = Field(None, alias="invoiceOwner", description="The acount number of the billing account that is billed for the subscription.")
    order_item_id: Optional[StrictStr] = Field(None, alias="orderItemId", description="The ID of the order item referenced by the order metrics.  This field is only available to existing Orders customers who already have access to the field.  **Note:** The following Order Metrics have been deprecated. Any new customers who onboard on [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization/Orders_Harmonization) will not get these metrics. * The Order ELP and Order Item objects  * The \"Generated Reason\" and \"Order Item ID\" fields in the Order MRR, Order TCB, Order TCV, and Order Quantity objects  Existing Orders customers who have these metrics will continue to be supported. ")
    start_date: Optional[date] = Field(None, alias="startDate")
    subscription_owner: Optional[StrictStr] = Field(None, alias="subscriptionOwner", description="The acount number of the billing account that owns the subscription.")
    tax: Optional[Union[StrictFloat, StrictInt]] = None
    term_number: Optional[StrictInt] = Field(None, alias="termNumber")
    type: Optional[StrictStr] = None
    __properties = ["amount", "discountChargeNumber", "endDate", "generatedReason", "invoiceOwner", "orderItemId", "startDate", "subscriptionOwner", "tax", "termNumber", "type"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> TimeSlicedTcbNetMetrics:
        """Create an instance of TimeSlicedTcbNetMetrics from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> TimeSlicedTcbNetMetrics:
        """Create an instance of TimeSlicedTcbNetMetrics from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return TimeSlicedTcbNetMetrics.parse_obj(obj)

        _obj = TimeSlicedTcbNetMetrics.parse_obj({
            "amount": obj.get("amount"),
            "discount_charge_number": obj.get("discountChargeNumber"),
            "end_date": obj.get("endDate"),
            "generated_reason": obj.get("generatedReason"),
            "invoice_owner": obj.get("invoiceOwner"),
            "order_item_id": obj.get("orderItemId"),
            "start_date": obj.get("startDate"),
            "subscription_owner": obj.get("subscriptionOwner"),
            "tax": obj.get("tax"),
            "term_number": obj.get("termNumber"),
            "type": obj.get("type")
        })
        return _obj


