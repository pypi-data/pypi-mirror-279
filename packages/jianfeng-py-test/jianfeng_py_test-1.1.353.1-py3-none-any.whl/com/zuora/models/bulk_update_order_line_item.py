# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import Any, Dict, Optional, Union
from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr, constr
from com.zuora.models.order_line_item_billing_rule import OrderLineItemBillingRule
from com.zuora.models.order_line_item_inline_discount_type import OrderLineItemInlineDiscountType
from com.zuora.models.order_line_item_state import OrderLineItemState
from com.zuora.models.order_line_item_type import OrderLineItemType
from com.zuora.models.tax_mode import TaxMode

class BulkUpdateOrderLineItem(BaseModel):
    """
    BulkUpdateOrderLineItem
    """
    uom: Optional[StrictStr] = Field(None, alias="UOM", description="Specifies the units to measure usage.  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    accounting_code: Optional[StrictStr] = Field(None, alias="accountingCode", description="The accountingCode for the Order Line Item (OLI).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    adjustment_liability_accounting_code: Optional[StrictStr] = Field(None, alias="adjustmentLiabilityAccountingCode", description="The accounting code on the Order Line Item object for customers using [Zuora Billing - Revenue Integration](https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    adjustment_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="adjustmentRevenueAccountingCode", description="The accounting code on the Order Line Item object for customers using [Zuora Billing - Revenue Integration](https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    amount_per_unit: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="amountPerUnit", description="The actual charged amount per unit for the Order Line Item (OLI).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    bill_target_date: Optional[date] = Field(None, alias="billTargetDate", description="The target date for the Order Line Item (OLI) to be picked up by bill run for generating billing documents.  To generate billing documents for an OLI, you must set this field and set the `itemState` field to `SentToBilling`.  You can update this field for a sales or return OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    bill_to: Optional[StrictStr] = Field(None, alias="billTo", description="The ID of a contact that belongs to the billing account of the order line item. Use this field to assign an existing account as the bill-to contact of an order line item.  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    billing_rule: Optional[StrictStr] = Field(None, alias="billingRule")
    contract_asset_accounting_code: Optional[StrictStr] = Field(None, alias="contractAssetAccountingCode", description="The accounting code on the Order Line Item object for customers using [Zuora Billing - Revenue Integration](https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    contract_liability_accounting_code: Optional[StrictStr] = Field(None, alias="contractLiabilityAccountingCode", description="The accounting code on the Order Line Item object for customers using [Zuora Billing - Revenue Integration](https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    contract_recognized_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="contractRecognizedRevenueAccountingCode", description="The accounting code on the Order Line Item object for customers using [Zuora Billing - Revenue Integration](https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    custom_fields: Optional[Dict[str, Dict[str, Any]]] = Field(None, alias="customFields", description="Container for custom fields of an Order Line Item object. ")
    deferred_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="deferredRevenueAccountingCode", description="The deferred revenue accounting code for the Order Line Item (OLI).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    description: Optional[StrictStr] = Field(None, description="The description of the Order Line Item (OLI).  You can update this field for a sales or return OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    inline_discount_per_unit: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="inlineDiscountPerUnit", description="You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).  Use this field in accordance with the `inlineDiscountType` field, in the following manner: * If the `inlineDiscountType` field is set as `Percentage`, this field specifies the discount percentage for each unit of the order line item. For exmaple, if you specify `5` in this field, the discount percentage is 5%. * If the `inlineDiscountType` field is set as `FixedAmount`, this field specifies the discount amount on each unit of the order line item. For exmaple, if you specify `10` in this field, the discount amount on each unit of the order line item is 10.  Once you set the `inlineDiscountType`, `inlineDiscountPerUnit`, and `listPricePerUnit` fields, the system will automatically generate the `amountPerUnit` field. You shall not set the `amountPerUnit` field by yourself. ")
    inline_discount_type: Optional[StrictStr] = Field(None, alias="inlineDiscountType")
    invoice_group_number: Optional[constr(strict=True, max_length=255)] = Field(None, alias="invoiceGroupNumber", description="The invoice group number associated with the order line item. ")
    is_allocation_eligible: Optional[StrictBool] = Field(None, alias="isAllocationEligible", description="This field is used to identify if the charge segment is allocation eligible in revenue recognition.  **Note**: This feature is in the **Early Adopter** phase. If you want to use the feature, submit a request at <a href=\"https://support.zuora.com/\" target=\"_blank\">Zuora Global Support</a>, and we will evaluate whether the feature is suitable for your use cases. ")
    is_unbilled: Optional[StrictBool] = Field(None, alias="isUnbilled", description="This field is used to dictate how to perform the accounting during revenue recognition.  **Note**: This feature is in the **Early Adopter** phase. If you want to use the feature, submit a request at <a href=\"https://support.zuora.com/\" target=\"_blank\">Zuora Global Support</a>, and we will evaluate whether the feature is suitable for your use cases. ")
    exclude_item_billing_from_revenue_accounting: Optional[StrictBool] = Field(None, alias="excludeItemBillingFromRevenueAccounting", description="The flag to exclude Order Line Item related invoice items, invoice item adjustments, credit memo items, and debit memo items from revenue accounting.  **Note**: This field is only available if you have the Billing - Revenue Integration feature enabled.  ")
    exclude_item_booking_from_revenue_accounting: Optional[StrictBool] = Field(None, alias="excludeItemBookingFromRevenueAccounting", description="The flag to exclude Order Line Item from revenue accounting.  **Note**: This field is only available if you have the Billing - Revenue Integration feature enabled. ")
    revenue_recognition_timing: Optional[StrictStr] = Field(None, alias="revenueRecognitionTiming", description="This field is used to dictate the type of revenue recognition timing.")
    revenue_amortization_method: Optional[StrictStr] = Field(None, alias="revenueAmortizationMethod", description="This field is used to dictate the type of revenue amortization method.")
    item_name: Optional[StrictStr] = Field(None, alias="itemName", description="The name of the Order Line Item (OLI).  You can update this field for a sales or return OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    item_number: Optional[StrictStr] = Field(None, alias="itemNumber", description="The number for the Order Line Item (OLI).  You can update this field for a sales or return OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    item_state: Optional[StrictStr] = Field(None, alias="itemState")
    item_type: Optional[StrictStr] = Field(None, alias="itemType")
    list_price_per_unit: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="listPricePerUnit", description="The list price per unit for the Order Line Item (OLI).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    owner_account_number: Optional[StrictStr] = Field(None, alias="ownerAccountNumber", description="Use this field to assign an existing account as the owner of an order line item.  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    product_code: Optional[StrictStr] = Field(None, alias="productCode", description="The product code for the Order Line Item (OLI).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    purchase_order_number: Optional[StrictStr] = Field(None, alias="purchaseOrderNumber", description="Used by customers to specify the Purchase Order Number provided by the buyer.  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    quantity: Optional[Union[StrictFloat, StrictInt]] = Field(None, description="The quantity of units, such as the number of authors in a hosted wiki service.  You can update this field for a sales or return OLI only when the OLI in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    recognized_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="recognizedRevenueAccountingCode", description="The recognized revenue accounting code for the Order Line Item (OLI).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    related_subscription_number: Optional[StrictStr] = Field(None, alias="relatedSubscriptionNumber", description="Use this field to relate an order line item to an subscription. Specify this field to the subscription number of the subscription to relate.  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    revenue_recognition_rule: Optional[StrictStr] = Field(None, alias="revenueRecognitionRule", description="The Revenue Recognition rule for the Order Line Item (OLI).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    sequence_set_id: Optional[StrictStr] = Field(None, alias="sequenceSetId", description="The ID of the sequence set associated with the orderLineItem. ")
    sold_to: Optional[StrictStr] = Field(None, alias="soldTo", description="Use this field to assign an existing account as the sold-to contact of an order line item, by the following rules:  * If the `ownerAccountNumber` field is set, then this field must be the ID of a contact that belongs to the owner account of the order line item.  * If the `ownerAccountNumber` field is not set, then this field must be the ID of a contact that belongs to the billing account of the order line item.  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    tax_code: Optional[StrictStr] = Field(None, alias="taxCode", description="The tax code for the Order Line Item (OLI).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    tax_mode: Optional[StrictStr] = Field(None, alias="taxMode")
    transaction_end_date: Optional[date] = Field(None, alias="transactionEndDate", description="The date a transaction is completed. The default value of this field is the transaction start date. Also, the value of this field should always equal or be later than the value of the `transactionStartDate` field.  You can update this field for a sales or return OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    transaction_start_date: Optional[date] = Field(None, alias="transactionStartDate", description="The date a transaction starts. The default value of this field is the order date.  You can update this field for a sales or return OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    unbilled_receivables_accounting_code: Optional[StrictStr] = Field(None, alias="unbilledReceivablesAccountingCode", description="The accounting code on the Order Line Item object for customers using [Zuora Billing - Revenue Integration](https://knowledgecenter.zuora.com/Zuora_Revenue/Zuora_Billing_-_Revenue_Integration).  You can update this field only for a sales OLI and only when the sales OLI is in the `Executing` state (when the `itemState` field is set as `Executing`). ")
    id: StrictStr = Field(..., description="The sytem generated Id for the Order Line Item(OLI). Use this field to specify which OLI to update. ")
    __properties = ["UOM", "accountingCode", "adjustmentLiabilityAccountingCode", "adjustmentRevenueAccountingCode", "amountPerUnit", "billTargetDate", "billTo", "billingRule", "contractAssetAccountingCode", "contractLiabilityAccountingCode", "contractRecognizedRevenueAccountingCode", "customFields", "deferredRevenueAccountingCode", "description", "inlineDiscountPerUnit", "inlineDiscountType", "invoiceGroupNumber", "isAllocationEligible", "isUnbilled", "excludeItemBillingFromRevenueAccounting", "excludeItemBookingFromRevenueAccounting", "revenueRecognitionTiming", "revenueAmortizationMethod", "itemName", "itemNumber", "itemState", "itemType", "listPricePerUnit", "ownerAccountNumber", "productCode", "purchaseOrderNumber", "quantity", "recognizedRevenueAccountingCode", "relatedSubscriptionNumber", "revenueRecognitionRule", "sequenceSetId", "soldTo", "taxCode", "taxMode", "transactionEndDate", "transactionStartDate", "unbilledReceivablesAccountingCode", "id"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> BulkUpdateOrderLineItem:
        """Create an instance of BulkUpdateOrderLineItem from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> BulkUpdateOrderLineItem:
        """Create an instance of BulkUpdateOrderLineItem from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return BulkUpdateOrderLineItem.parse_obj(obj)

        _obj = BulkUpdateOrderLineItem.parse_obj({
            "uom": obj.get("UOM"),
            "accounting_code": obj.get("accountingCode"),
            "adjustment_liability_accounting_code": obj.get("adjustmentLiabilityAccountingCode"),
            "adjustment_revenue_accounting_code": obj.get("adjustmentRevenueAccountingCode"),
            "amount_per_unit": obj.get("amountPerUnit"),
            "bill_target_date": obj.get("billTargetDate"),
            "bill_to": obj.get("billTo"),
            "billing_rule": obj.get("billingRule"),
            "contract_asset_accounting_code": obj.get("contractAssetAccountingCode"),
            "contract_liability_accounting_code": obj.get("contractLiabilityAccountingCode"),
            "contract_recognized_revenue_accounting_code": obj.get("contractRecognizedRevenueAccountingCode"),
            "custom_fields": obj.get("customFields"),
            "deferred_revenue_accounting_code": obj.get("deferredRevenueAccountingCode"),
            "description": obj.get("description"),
            "inline_discount_per_unit": obj.get("inlineDiscountPerUnit"),
            "inline_discount_type": obj.get("inlineDiscountType"),
            "invoice_group_number": obj.get("invoiceGroupNumber"),
            "is_allocation_eligible": obj.get("isAllocationEligible"),
            "is_unbilled": obj.get("isUnbilled"),
            "exclude_item_billing_from_revenue_accounting": obj.get("excludeItemBillingFromRevenueAccounting"),
            "exclude_item_booking_from_revenue_accounting": obj.get("excludeItemBookingFromRevenueAccounting"),
            "revenue_recognition_timing": obj.get("revenueRecognitionTiming"),
            "revenue_amortization_method": obj.get("revenueAmortizationMethod"),
            "item_name": obj.get("itemName"),
            "item_number": obj.get("itemNumber"),
            "item_state": obj.get("itemState"),
            "item_type": obj.get("itemType"),
            "list_price_per_unit": obj.get("listPricePerUnit"),
            "owner_account_number": obj.get("ownerAccountNumber"),
            "product_code": obj.get("productCode"),
            "purchase_order_number": obj.get("purchaseOrderNumber"),
            "quantity": obj.get("quantity"),
            "recognized_revenue_accounting_code": obj.get("recognizedRevenueAccountingCode"),
            "related_subscription_number": obj.get("relatedSubscriptionNumber"),
            "revenue_recognition_rule": obj.get("revenueRecognitionRule"),
            "sequence_set_id": obj.get("sequenceSetId"),
            "sold_to": obj.get("soldTo"),
            "tax_code": obj.get("taxCode"),
            "tax_mode": obj.get("taxMode"),
            "transaction_end_date": obj.get("transactionEndDate"),
            "transaction_start_date": obj.get("transactionStartDate"),
            "unbilled_receivables_accounting_code": obj.get("unbilledReceivablesAccountingCode"),
            "id": obj.get("id")
        })
        return _obj


