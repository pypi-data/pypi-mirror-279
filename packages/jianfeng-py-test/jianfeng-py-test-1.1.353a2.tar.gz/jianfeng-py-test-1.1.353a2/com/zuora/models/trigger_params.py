# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr

class TriggerParams(BaseModel):
    """
    Specifies when a charge becomes active.   # noqa: E501
    """
    specific_trigger_date: Optional[date] = Field(None, alias="specificTriggerDate", description="Date in YYYY-MM-DD format. Only applicable if the value of the `triggerEvent` field is `SpecificDate`.   While this field is applicable, if this field is not set, your `CreateSubscription` order action creates a `Pending` order and a `Pending Acceptance` subscription. If at the same time the service activation date is required and not set, a `Pending Activation` subscription is created.  While this field is applicable, if this field is not set, the following order actions create a `Pending` order but do not impact the subscription status. **Note**: This feature is in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).  * AddProduct  * UpdateProduct  * RemoveProduct  * RenewSubscription  * TermsAndConditions ")
    trigger_event: Optional[StrictStr] = Field(None, alias="triggerEvent")
    start_date_policy: Optional[StrictStr] = Field(None, alias="startDatePolicy")
    periods_after_charge_start: Optional[StrictInt] = Field(None, alias="periodsAfterChargeStart", description="Duration of the discount charge in days, weeks, months, or years, depending on the value of the `startPeriodsType` field. Only applicable if the value of the `startDatePolicy` field is `FixedPeriodAfterApplyToChargeStartDate`. **Note**: You must enable the [Enhanced Discounts](https://knowledgecenter.zuora.com/Zuora_Billing/Build_products_and_prices/Basic_concepts_and_terms/B_Charge_Models/D_Manage_Enhanced_Discount) feature to access this field. ")
    start_periods_type: Optional[StrictStr] = Field(None, alias="startPeriodsType")
    __properties = ["specificTriggerDate", "triggerEvent", "startDatePolicy", "periodsAfterChargeStart", "startPeriodsType"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> TriggerParams:
        """Create an instance of TriggerParams from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> TriggerParams:
        """Create an instance of TriggerParams from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return TriggerParams.parse_obj(obj)

        _obj = TriggerParams.parse_obj({
            "specific_trigger_date": obj.get("specificTriggerDate"),
            "trigger_event": obj.get("triggerEvent"),
            "start_date_policy": obj.get("startDatePolicy"),
            "periods_after_charge_start": obj.get("periodsAfterChargeStart"),
            "start_periods_type": obj.get("startPeriodsType")
        })
        return _obj


