# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr

class GetWorkflowsResponsePagination(BaseModel):
    """
    An object containing pagination information for the list of workflows returned by the api   # noqa: E501
    """
    next_page: Optional[StrictStr] = Field(None, description="A string containing the URL where the next page of data can be retrieved. ")
    page: Optional[StrictInt] = Field(None, description="An integer denoting the current page number. ")
    page_length: Optional[StrictInt] = Field(None, description="An integer denoting the number of workflows in this response. The maximum value is 50. ")
    __properties = ["next_page", "page", "page_length"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> GetWorkflowsResponsePagination:
        """Create an instance of GetWorkflowsResponsePagination from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> GetWorkflowsResponsePagination:
        """Create an instance of GetWorkflowsResponsePagination from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return GetWorkflowsResponsePagination.parse_obj(obj)

        _obj = GetWorkflowsResponsePagination.parse_obj({
            "next_page": obj.get("next_page"),
            "page": obj.get("page"),
            "page_length": obj.get("page_length")
        })
        return _obj


