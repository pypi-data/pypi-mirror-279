# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from typing import Any, Dict, Optional
from pydantic import BaseModel, Field, StrictStr

class MigrationComponentContent(BaseModel):
    """
    When a comparison is made between a source and target tenant, it sends a response to the user interface.  # noqa: E501
    """
    attribute: Optional[StrictStr] = None
    component_type: Optional[StrictStr] = Field(None, alias="componentType", description="Type of selected components to be migrated.")
    current_target_response: Optional[Dict[str, Any]] = Field(None, alias="currentTargetResponse", description="Json node object contains metadata.")
    description: Optional[StrictStr] = None
    disabled: Optional[StrictStr] = None
    error_message: Optional[StrictStr] = Field(None, alias="errorMessage", description="Error information.")
    http_methods: Optional[StrictStr] = Field(None, alias="httpMethods")
    id: Optional[StrictStr] = None
    key: Optional[StrictStr] = None
    migrated_on: Optional[datetime] = Field(None, alias="migratedOn", description="It is the time when migration is triggered.")
    migration_id: Optional[StrictStr] = Field(None, alias="migrationId", description="Migration ID. It is generated at the time of triggering deployment.")
    path_pattern: Optional[StrictStr] = Field(None, alias="pathPattern", description="PathPattern of component.")
    previous_target_response: Optional[Dict[str, Any]] = Field(None, alias="previousTargetResponse", description="Json node object contains metadata.")
    result: Optional[StrictStr] = Field(None, description="Returns the result details of Components.")
    segregation_key: Optional[StrictStr] = Field(None, alias="segregationKey", description="Displays the differences between components.")
    source_response: Optional[Dict[str, Any]] = Field(None, alias="sourceResponse", description="Json node object contains metadata.")
    status: Optional[StrictStr] = Field(None, description="Returns the status of each component.")
    update_status: Optional[StrictStr] = Field(None, alias="updateStatus", description="Updated Status.")
    __properties = ["attribute", "componentType", "currentTargetResponse", "description", "disabled", "errorMessage", "httpMethods", "id", "key", "migratedOn", "migrationId", "pathPattern", "previousTargetResponse", "result", "segregationKey", "sourceResponse", "status", "updateStatus"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> MigrationComponentContent:
        """Create an instance of MigrationComponentContent from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> MigrationComponentContent:
        """Create an instance of MigrationComponentContent from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return MigrationComponentContent.parse_obj(obj)

        _obj = MigrationComponentContent.parse_obj({
            "attribute": obj.get("attribute"),
            "component_type": obj.get("componentType"),
            "current_target_response": obj.get("currentTargetResponse"),
            "description": obj.get("description"),
            "disabled": obj.get("disabled"),
            "error_message": obj.get("errorMessage"),
            "http_methods": obj.get("httpMethods"),
            "id": obj.get("id"),
            "key": obj.get("key"),
            "migrated_on": obj.get("migratedOn"),
            "migration_id": obj.get("migrationId"),
            "path_pattern": obj.get("pathPattern"),
            "previous_target_response": obj.get("previousTargetResponse"),
            "result": obj.get("result"),
            "segregation_key": obj.get("segregationKey"),
            "source_response": obj.get("sourceResponse"),
            "status": obj.get("status"),
            "update_status": obj.get("updateStatus")
        })
        return _obj


