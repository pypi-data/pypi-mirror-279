# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.get_payment_method_for_account_response import GetPaymentMethodForAccountResponse  # noqa: E501

class TestGetPaymentMethodForAccountResponse(unittest.TestCase):
    """GetPaymentMethodForAccountResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPaymentMethodForAccountResponse:
        """Test GetPaymentMethodForAccountResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPaymentMethodForAccountResponse`
        """
        model = GetPaymentMethodForAccountResponse()  # noqa: E501
        if include_optional:
            return GetPaymentMethodForAccountResponse(
                iban = '',
                account_number = '',
                bank_code = '',
                bank_transfer_type = '',
                branch_code = '',
                business_identification_code = '',
                identity_number = '',
                bank_aba_code = '',
                bank_account_name = '',
                card_number = '',
                expiration_month = 56,
                expiration_year = 56,
                security_code = '',
                baid = '',
                email = '',
                preapproval_key = '',
                google_bin = '',
                google_card_number = '',
                google_card_type = '',
                google_expiry_date = '',
                google_gateway_token = '',
                apple_bin = '',
                apple_card_number = '',
                apple_card_type = '',
                apple_expiry_date = '',
                apple_gateway_token = '',
                account_holder_info = com.zuora.models.account_holder_info.accountHolderInfo(
                    account_holder_name = '', 
                    address_line1 = '', 
                    address_line2 = '', 
                    city = '', 
                    country = '', 
                    email = '', 
                    phone = '', 
                    state = '', 
                    zip_code = '', ),
                bank_identification_number = '',
                created_by = '',
                created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                credit_card_mask_number = '',
                credit_card_type = '',
                device_session_id = '',
                existing_mandate = 'Yes',
                id = '',
                ip_address = '',
                is_default = True,
                last_failed_sale_transaction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_transaction = '',
                last_transaction_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                mandate_info = com.zuora.models.mandate_info.mandateInfo(
                    existing_mandate_status = 'Yes', 
                    mandate_creation_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    mandate_id = '', 
                    mandate_reason = '', 
                    mandate_received_status = 'Yes', 
                    mandate_status = '', 
                    mandate_update_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    mit_consent_agreement_ref = '', 
                    mit_consent_agreement_src = 'External', 
                    mit_profile_action = 'Activate', 
                    mit_profile_agreed_on = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    mit_profile_type = '', 
                    mit_transaction_id = '', ),
                max_consecutive_payment_failures = 56,
                num_consecutive_failures = 56,
                payment_retry_window = 56,
                second_token_id = '',
                status = 'Active',
                token_id = '',
                total_number_of_error_payments = 56,
                total_number_of_processed_payments = 56,
                type = '',
                updated_by = '',
                updated_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                use_default_retry_rule = True
            )
        else:
            return GetPaymentMethodForAccountResponse(
        )
        """

    def testGetPaymentMethodForAccountResponse(self):
        """Test GetPaymentMethodForAccountResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
