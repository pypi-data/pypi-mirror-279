# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.billing_adjustment import BillingAdjustment  # noqa: E501

class TestBillingAdjustment(unittest.TestCase):
    """BillingAdjustment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingAdjustment:
        """Test BillingAdjustment
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingAdjustment`
        """
        model = BillingAdjustment()  # noqa: E501
        if include_optional:
            return BillingAdjustment(
                adjustment_id = '',
                adjustment_number = '',
                amount = 1,
                billing_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                charge_number = '',
                credit_memo_number = '',
                deferred_revenue_accounting_code = '',
                delivery_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                delivery_day = '',
                eligible = True,
                reason = '',
                recognized_revenue_accounting_code = '',
                revenue_recognition_rule_name = '',
                status = '',
                subscription_number = ''
            )
        else:
            return BillingAdjustment(
        )
        """

    def testBillingAdjustment(self):
        """Test BillingAdjustment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
