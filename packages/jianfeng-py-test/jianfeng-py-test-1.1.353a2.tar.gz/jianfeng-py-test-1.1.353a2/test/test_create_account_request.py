# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.create_account_request import CreateAccountRequest  # noqa: E501

class TestCreateAccountRequest(unittest.TestCase):
    """CreateAccountRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAccountRequest:
        """Test CreateAccountRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAccountRequest`
        """
        model = CreateAccountRequest()  # noqa: E501
        if include_optional:
            return CreateAccountRequest(
                class__ns = '',
                customer_type__ns = 'Company',
                department__ns = '',
                integration_id__ns = '',
                integration_status__ns = '',
                location__ns = '',
                subsidiary__ns = '',
                sync_date__ns = '',
                syncto_net_suite__ns = 'Yes',
                account_number = '',
                additional_email_addresses = [
                    ''
                    ],
                application_order = [
                    ''
                    ],
                apply_credit = True,
                apply_credit_balance = True,
                auto_pay = True,
                batch = '',
                bill_cycle_day = 56,
                bill_to_contact = { },
                collect = True,
                communication_profile_id = '',
                credit_card = None,
                credit_memo_reason_code = '',
                credit_memo_template_id = '',
                crm_id = '',
                currency = '',
                debit_memo_template_id = '',
                document_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                hpm_credit_card_payment_method_id = '',
                invoice = True,
                invoice_collect = True,
                invoice_delivery_prefs_email = True,
                invoice_delivery_prefs_print = True,
                invoice_target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                invoice_template_id = '',
                name = '',
                notes = '',
                parent_id = '',
                partner_account = True,
                payment_gateway = '',
                payment_method = None,
                payment_term = '',
                profile_number = '',
                roll_up_usage = True,
                run_billing = True,
                sales_rep = '',
                sequence_set_id = '',
                sold_to_contact = { },
                sold_to_same_as_bill_to = True,
                subscription = None,
                tagging = '',
                target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                tax_info = com.zuora.models.tax_info.taxInfo(
                    company_code = '', 
                    exempt_entity_use_code = '', 
                    exempt_certificate_id = '', 
                    exempt_certificate_type = '', 
                    exempt_description = '', 
                    exempt_effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    exempt_expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    exempt_issuing_jurisdiction = '', 
                    exempt_status = 'No', 
                    vatid = '', ),
                communication_profile_name = '',
                payment_gateway_number = '',
                payment_gateway_name = '',
                organization_id = '',
                organization_name = '',
                gateway_id = '',
                payment_method_id = '',
                parent_account_number = '',
                summary_statement_template_id = '',
                sequence_set_name = '',
                einvoice_profile = None,
                organization_label = ''
            )
        else:
            return CreateAccountRequest(
                bill_to_contact = { },
                currency = '',
                name = '',
        )
        """

    def testCreateAccountRequest(self):
        """Test CreateAccountRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
