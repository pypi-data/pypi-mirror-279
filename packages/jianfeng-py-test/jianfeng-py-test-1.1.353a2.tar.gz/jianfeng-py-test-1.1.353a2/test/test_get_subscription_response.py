# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.get_subscription_response import GetSubscriptionResponse  # noqa: E501

class TestGetSubscriptionResponse(unittest.TestCase):
    """GetSubscriptionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSubscriptionResponse:
        """Test GetSubscriptionResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSubscriptionResponse`
        """
        model = GetSubscriptionResponse()  # noqa: E501
        if include_optional:
            return GetSubscriptionResponse(
                process_id = '',
                request_id = '',
                reasons = [
                    {"code":"code","message":"message"}
                    ],
                success = True,
                cpq_bundle_json_id__qt = '',
                opportunity_close_date__qt = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                opportunity_name__qt = '',
                quote_business_type__qt = '',
                quote_number__qt = '',
                quote_type__qt = '',
                integration_id__ns = '',
                integration_status__ns = '',
                project__ns = '',
                sales_order__ns = '',
                sync_date__ns = '',
                id = '',
                subscription_number = '',
                account_id = '',
                account_name = '',
                account_number = '',
                auto_renew = True,
                bill_to_contact = { },
                cancel_reason = '',
                contract_effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                contracted_mrr = 1.337,
                current_term = 56,
                current_term_period_type = 'Day',
                customer_acceptance_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                currency = '',
                create_time = '',
                update_time = '',
                externally_managed_by = 'Amazon',
                initial_term = 56,
                initial_term_period_type = 'Day',
                invoice_group_number = '',
                invoice_owner_account_id = '',
                invoice_owner_account_name = '',
                invoice_owner_account_number = '',
                invoice_schedule_id = '',
                invoice_separately = '',
                invoice_template_id = '',
                invoice_template_name = '',
                is_latest_version = True,
                last_booking_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                notes = '',
                order_number = '',
                payment_term = '',
                rate_plans = [
                    { }
                    ],
                renewal_setting = '',
                renewal_term = 56,
                renewal_term_period_type = 'Day',
                revision = '',
                sequence_set_id = '',
                sequence_set_name = '',
                service_activation_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                sold_to_contact = { },
                status = 'Draft',
                status_history = [
                    null
                    ],
                subscription_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                subscription_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                term_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                term_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                term_type = '',
                total_contracted_value = 1.337,
                version = 56,
                contracted_net_mrr = 1.337,
                as_of_day_gross_mrr = 1.337,
                as_of_day_net_mrr = 1.337,
                account_owner_details = { },
                invoice_owner_account_details = { }
            )
        else:
            return GetSubscriptionResponse(
        )
        """

    def testGetSubscriptionResponse(self):
        """Test GetSubscriptionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
