# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.preview_order_result import PreviewOrderResult  # noqa: E501

class TestPreviewOrderResult(unittest.TestCase):
    """PreviewOrderResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PreviewOrderResult:
        """Test PreviewOrderResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PreviewOrderResult`
        """
        model = PreviewOrderResult()  # noqa: E501
        if include_optional:
            return PreviewOrderResult(
                charge_metrics = [
                    com.zuora.models.preview_order_result_charge_metrics.PreviewOrderResultChargeMetrics(
                        charges = [
                            com.zuora.models.preview_charge_metrics.PreviewChargeMetrics(
                                charge_number = '', 
                                cmrr = com.zuora.models.preview_charge_metrics_cmrr.PreviewChargeMetricsCmrr(
                                    discount = 1.337, 
                                    discount_delta = 1.337, 
                                    regular = 1.337, 
                                    regular_delta = 1.337, ), 
                                origin_rate_plan_id = '', 
                                product_rate_plan_charge_id = '', 
                                product_rate_plan_id = '', 
                                subscription_rate_plan_number = '', 
                                tax = com.zuora.models.preview_charge_metrics_tax.PreviewChargeMetricsTax(
                                    discount = 1.337, 
                                    discount_delta = 1.337, 
                                    regular = 1.337, 
                                    regular_delta = 1.337, ), 
                                tcb = com.zuora.models.preview_charge_metrics_tcb.PreviewChargeMetricsTcb(
                                    discount = 1.337, 
                                    discount_delta = 1.337, 
                                    regular = 1.337, 
                                    regular_delta = 1.337, ), 
                                tcv = com.zuora.models.preview_charge_metrics_tcv.PreviewChargeMetricsTcv(
                                    discount = 1.337, 
                                    discount_delta = 1.337, 
                                    regular = 1.337, 
                                    regular_delta = 1.337, ), )
                            ], 
                        subscription_number = '', )
                    ],
                credit_memos = [
                    com.zuora.models.preview_order_result_credit_memos.PreviewOrderResultCreditMemos(
                        amount = 1.337, 
                        amount_without_tax = 1.337, 
                        credit_memo_items = [
                            com.zuora.models.invoice_item_preview_result.InvoiceItemPreviewResult(
                                additional_info = com.zuora.models.invoice_item_preview_result_additional_info.InvoiceItemPreviewResultAdditionalInfo(
                                    quantity = 1.337, 
                                    unit_of_measure = '', 
                                    number_of_deliveries = 1.337, ), 
                                amount_without_tax = 1.337, 
                                applied_to_charge_number = '', 
                                charge_description = '', 
                                charge_name = '', 
                                charge_number = '', 
                                order_line_item_number = '', 
                                processing_type = 'Charge', 
                                product_name = '', 
                                product_rate_plan_charge_id = '', 
                                service_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                service_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                subscription_number = '', 
                                tax_amount = 1.337, 
                                taxation_items = [
                                    com.zuora.models.invoice_item_preview_result_taxation_items.InvoiceItemPreviewResultTaxationItems(
                                        exempt_amount = 1.337, 
                                        id = '', 
                                        jurisdiction = '', 
                                        location_code = '', 
                                        name = '', 
                                        tax_amount = 1.337, 
                                        tax_code = '', 
                                        tax_code_description = '', 
                                        tax_date = '', 
                                        tax_rate = 1.337, 
                                        tax_rate_description = '', 
                                        tax_rate_type = 'Percentage', )
                                    ], 
                                unit_price = 1.337, )
                            ], 
                        target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        tax_amount = 1.337, )
                    ],
                invoices = [
                    com.zuora.models.preview_order_result_invoices.PreviewOrderResultInvoices(
                        amount = 1.337, 
                        amount_without_tax = 1.337, 
                        invoice_items = [
                            com.zuora.models.invoice_item_preview_result.InvoiceItemPreviewResult(
                                additional_info = com.zuora.models.invoice_item_preview_result_additional_info.InvoiceItemPreviewResultAdditionalInfo(
                                    quantity = 1.337, 
                                    unit_of_measure = '', 
                                    number_of_deliveries = 1.337, ), 
                                amount_without_tax = 1.337, 
                                applied_to_charge_number = '', 
                                charge_description = '', 
                                charge_name = '', 
                                charge_number = '', 
                                order_line_item_number = '', 
                                processing_type = 'Charge', 
                                product_name = '', 
                                product_rate_plan_charge_id = '', 
                                service_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                service_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                subscription_number = '', 
                                tax_amount = 1.337, 
                                taxation_items = [
                                    com.zuora.models.invoice_item_preview_result_taxation_items.InvoiceItemPreviewResultTaxationItems(
                                        exempt_amount = 1.337, 
                                        id = '', 
                                        jurisdiction = '', 
                                        location_code = '', 
                                        name = '', 
                                        tax_amount = 1.337, 
                                        tax_code = '', 
                                        tax_code_description = '', 
                                        tax_date = '', 
                                        tax_rate = 1.337, 
                                        tax_rate_description = '', 
                                        tax_rate_type = 'Percentage', )
                                    ], 
                                unit_price = 1.337, )
                            ], 
                        target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        tax_amount = 1.337, )
                    ],
                order_delta_metrics = com.zuora.models.preview_order_result_delta_metrics.PreviewOrderResultDeltaMetrics(
                    order_delta_mrr = [
                        null
                        ], 
                    order_delta_tcb = [
                        null
                        ], 
                    order_delta_tcv = [
                        null
                        ], ),
                order_metrics = [
                    com.zuora.models.preview_result_order_metrics_inner.PreviewResult_orderMetrics_inner(
                        order_actions = [
                            com.zuora.models.preview_result_order_metrics_inner_order_actions_inner.PreviewResult_orderMetrics_inner_orderActions_inner(
                                order_items = [
                                    {"quantity":6.878052220127876,"endDate":"2000-01-23","orderActionId":"orderActionId","id":"id","scId":"scId","startDate":"2000-01-23"}
                                    ], 
                                order_metrics = [
                                    {"originRatePlanId":"originRatePlanId","productRatePlanChargeId":"productRatePlanChargeId","tcb":[{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":6.519180951018382,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":4.652396432933246,"discountChargeNumber":"discountChargeNumber","generatedReason":"IncreaseQuantity","tax":0.10263654006109402,"type":"Regular","startDate":"2000-01-23"},{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":6.519180951018382,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":4.652396432933246,"discountChargeNumber":"discountChargeNumber","generatedReason":"IncreaseQuantity","tax":0.10263654006109402,"type":"Regular","startDate":"2000-01-23"}],"quantity":[{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":0.8851374739011653,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":7.058770351582356,"generatedReason":"IncreaseQuantity","startDate":"2000-01-23"},{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":0.8851374739011653,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":7.058770351582356,"generatedReason":"IncreaseQuantity","startDate":"2000-01-23"}],"productRatePlanId":"productRatePlanId","subscriptionRatePlanNumber":"subscriptionRatePlanNumber","tcv":[{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":3.0937452626664474,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":7.143538047012306,"discountChargeNumber":"discountChargeNumber","generatedReason":"IncreaseQuantity","type":"Regular","startDate":"2000-01-23"},{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":3.0937452626664474,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":7.143538047012306,"discountChargeNumber":"discountChargeNumber","generatedReason":"IncreaseQuantity","type":"Regular","startDate":"2000-01-23"}],"chargeNumber":"chargeNumber","elp":[{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":5.944895607614016,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":3.353193347011243,"generatedReason":"IncreaseQuantity","tax":6.704019297950036,"type":"Regular","startDate":"2000-01-23"},{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":5.944895607614016,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":3.353193347011243,"generatedReason":"IncreaseQuantity","tax":6.704019297950036,"type":"Regular","startDate":"2000-01-23"}],"mrr":[{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":3.0937452626664474,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":7.143538047012306,"discountChargeNumber":"discountChargeNumber","generatedReason":"IncreaseQuantity","type":"Regular","startDate":"2000-01-23"},{"invoiceOwner":"invoiceOwner","subscriptionOwner":"subscriptionOwner","amount":3.0937452626664474,"endDate":"2000-01-23","orderItemId":"orderItemId","termNumber":7.143538047012306,"discountChargeNumber":"discountChargeNumber","generatedReason":"IncreaseQuantity","type":"Regular","startDate":"2000-01-23"}]}
                                    ], 
                                sequence = '', 
                                type = '', )
                            ], 
                        subscription_number = '', )
                    ],
                ramp_metrics = [
                    com.zuora.models.ramp_metrics.RampMetrics(
                        description = '', 
                        discount_tcb = 1.337, 
                        discount_tcv = 1.337, 
                        gross_tcb = 1.337, 
                        gross_tcv = 1.337, 
                        intervals = [
                            com.zuora.models.ramp_interval_metrics.RampIntervalMetrics(
                                description = '', 
                                discount_tcb = 1.337, 
                                discount_tcv = 1.337, 
                                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                gross_tcb = 1.337, 
                                gross_tcv = 1.337, 
                                interval_delta_metrics = [
                                    com.zuora.models.interval_delta_metrics.intervalDeltaMetrics(
                                        charge_number = '', 
                                        delta_discount_tcb = 1.337, 
                                        delta_discount_tcv = 1.337, 
                                        delta_gross_tcb = 1.337, 
                                        delta_gross_tcv = 1.337, 
                                        delta_mrr = [
                                            com.zuora.models.ramp_interval_charge_delta_metrics_delta_mrr_inner.RampIntervalChargeDeltaMetrics_deltaMrr_inner(
                                                discount = 1.337, 
                                                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                                gross = 1.337, 
                                                net = 1.337, 
                                                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                            ], 
                                        delta_net_tcb = 1.337, 
                                        delta_net_tcv = 1.337, 
                                        delta_quantity = [
                                            com.zuora.models.ramp_interval_charge_delta_metrics_delta_quantity_inner.RampIntervalChargeDeltaMetrics_deltaQuantity_inner(
                                                amount = 1.337, 
                                                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                            ], 
                                        product_rate_plan_charge_id = '', 
                                        subscription_number = '', )
                                    ], 
                                interval_metrics = [
                                    com.zuora.models.interval_metrics.intervalMetrics(
                                        charge_number = '', 
                                        discount_tcb = 1.337, 
                                        discount_tcv = 1.337, 
                                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        gross_tcb = 1.337, 
                                        gross_tcv = 1.337, 
                                        mrr = [
                                            com.zuora.models.ramp_interval_charge_metrics_mrr_inner.RampIntervalChargeMetrics_mrr_inner(
                                                discount = 1.337, 
                                                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                                gross = 1.337, 
                                                net = 1.337, 
                                                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                            ], 
                                        net_tcb = 1.337, 
                                        net_tcv = 1.337, 
                                        product_rate_plan_charge_id = '', 
                                        quantity = 1.337, 
                                        rate_plan_charge_id = '', 
                                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        subscription_number = '', )
                                    ], 
                                name = '', 
                                net_tcb = 1.337, 
                                net_tcv = 1.337, 
                                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                            ], 
                        name = '', 
                        net_tcb = 1.337, 
                        net_tcv = 1.337, 
                        number = '', )
                    ]
            )
        else:
            return PreviewOrderResult(
        )
        """

    def testPreviewOrderResult(self):
        """Test PreviewOrderResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
