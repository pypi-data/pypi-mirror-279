# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.preview_order_async_request import PreviewOrderAsyncRequest  # noqa: E501

class TestPreviewOrderAsyncRequest(unittest.TestCase):
    """PreviewOrderAsyncRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PreviewOrderAsyncRequest:
        """Test PreviewOrderAsyncRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PreviewOrderAsyncRequest`
        """
        model = PreviewOrderAsyncRequest()  # noqa: E501
        if include_optional:
            return PreviewOrderAsyncRequest(
                category = 'NewSales',
                custom_fields = {
                    'key' : None
                    },
                description = '',
                existing_account_number = '',
                order_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                order_line_items = [
                    com.zuora.models.order_line_item.OrderLineItem(
                        uom = '', 
                        accounting_code = '', 
                        adjustment_liability_accounting_code = '', 
                        adjustment_revenue_accounting_code = '', 
                        currency = '', 
                        amount_per_unit = 1.337, 
                        bill_target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        bill_to = '', 
                        billing_rule = 'TriggerWithoutFulfillment', 
                        contract_asset_accounting_code = '', 
                        contract_liability_accounting_code = '', 
                        contract_recognized_revenue_accounting_code = '', 
                        custom_fields = {
                            'key' : None
                            }, 
                        deferred_revenue_accounting_code = '', 
                        description = '', 
                        exclude_item_billing_from_revenue_accounting = True, 
                        exclude_item_booking_from_revenue_accounting = True, 
                        inline_discount_per_unit = 1.337, 
                        inline_discount_type = 'Percentage', 
                        invoice_group_number = '', 
                        is_allocation_eligible = True, 
                        is_unbilled = True, 
                        item_category = 'Sales', 
                        item_name = '', 
                        item_number = '', 
                        item_state = 'Executing', 
                        item_type = 'Product', 
                        list_price_per_unit = 1.337, 
                        original_order_line_item_number = '', 
                        original_order_number = '', 
                        owner_account_number = '', 
                        product_code = '', 
                        product_rate_plan_charge_id = '', 
                        purchase_order_number = '', 
                        quantity = 1.337, 
                        recognized_revenue_accounting_code = '', 
                        related_subscription_number = '', 
                        revenue_recognition_rule = '', 
                        sequence_set_id = '', 
                        sold_to = '', 
                        tax_code = '', 
                        tax_mode = 'TaxInclusive', 
                        transaction_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        transaction_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        unbilled_receivables_accounting_code = '', )
                    ],
                order_number = '',
                preview_account_info = com.zuora.models.preview_account_info.previewAccountInfo(
                    bill_cycle_day = 0, 
                    currency = '', 
                    custom_fields = {
                        'key' : None
                        }, 
                    sold_to_contact = com.zuora.models.preview_contact_info.PreviewContactInfo(
                        city = '', 
                        country = '', 
                        county = '', 
                        postal_code = '', 
                        state = '', 
                        tax_region = '', ), 
                    tax_info = com.zuora.models.tax_info.taxInfo(
                        company_code = '', 
                        exempt_entity_use_code = '', 
                        exempt_certificate_id = '', 
                        exempt_certificate_type = '', 
                        exempt_description = '', 
                        exempt_effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        exempt_expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        exempt_issuing_jurisdiction = '', 
                        exempt_status = 'No', 
                        vatid = '', ), ),
                preview_options = com.zuora.models.preview_options.PreviewOptions(
                    preview_number_of_periods = 56, 
                    preview_thru_type = 'SpecificDate', 
                    preview_types = [
                        'ChargeMetrics'
                        ], 
                    specific_preview_thru_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                reason_code = '',
                subscriptions = [
                    com.zuora.models.preview_order_subscriptions_async.PreviewOrderSubscriptionsAsync(
                        custom_fields = {
                            'key' : None
                            }, 
                        order_actions = [
                            com.zuora.models.preview_order_order_action.PreviewOrderOrderAction(
                                add_product = com.zuora.models.rate_plan.ratePlan(
                                    charge_overrides = [
                                        com.zuora.models.charge.charge(
                                            billing = {"billCycleDay":27,"billCycleType":"DefaultFromCustomer","billingPeriod":"Month","billingPeriodAlignment":"AlignToCharge","billingTiming":"IN_ADVANCE","specificBillingPeriod":6,"weeklyBillCycleDay":"Sunday"}, 
                                            charge_number = '', 
                                            custom_fields = {
                                                'key' : None
                                                }, 
                                            description = '', 
                                            drawdown_rate = 1.337, 
                                            end_date = {"endDateCondition":"Subscription_End","specificEndDate":"2000-01-23","upToPeriods":7,"upToPeriodsType":"Billing_Periods"}, 
                                            exclude_item_billing_from_revenue_accounting = True, 
                                            exclude_item_booking_from_revenue_accounting = True, 
                                            is_allocation_eligible = True, 
                                            is_rollover = True, 
                                            is_unbilled = True, 
                                            prepaid_quantity = 1.337, 
                                            pricing = {"chargeModelData":{"chargeModelConfiguration":{"customFieldPerUnitRate":"customFieldPerUnitRate","customFieldTotalAmount":"customFieldTotalAmount","formula":"formula"},"quantity":0.3616076749251911,"tiers":[{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1},{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1}]},"discount":{"applyDiscountTo":"ONETIME","discountAmount":1.0246457001441578,"discountLevel":"rateplan","discountPercentage":1.4894159098541704,"priceChangeOption":"NoChange"},"oneTimeFlatFee":{"listPrice":6.84685269835264},"oneTimePerUnit":{"listPrice":7.457744773683766,"quantity":0.11730742509559433},"oneTimeTiered":{"quantity":0.4965218492984954,"tiers":[{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1},{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1}]},"oneTimeVolume":{"quantity":0.5025004791520294,"tiers":[{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1},{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1}]},"recurringDelivery":null,"recurringFlatFee":null,"recurringPerUnit":null,"recurringTiered":null,"recurringVolume":null,"usageFlatFee":null,"usageOverage":null,"usagePerUnit":null,"usageTiered":null,"usageTieredWithOverage":null,"usageVolume":null}, 
                                            product_rate_plan_charge_id = '', 
                                            product_rate_plan_charge_number = '', 
                                            rev_rec_code = '', 
                                            rev_rec_trigger_condition = 'Contract Effective Date', 
                                            revenue_recognition_rule_name = '', 
                                            rollover_apply = 'ApplyFirst', 
                                            rollover_periods = 1.337, 
                                            start_date = {"specificTriggerDate":"2000-01-23","triggerEvent":"ContractEffective"}, 
                                            unique_token = '', 
                                            validity_period_type = 'SUBSCRIPTION_TERM', )
                                        ], 
                                    clearing_existing_features = True, 
                                    custom_fields = {
                                        'key' : None
                                        }, 
                                    product_rate_plan_id = '', 
                                    product_rate_plan_number = '', 
                                    subscription_product_features = [
                                        com.zuora.models.rate_plan_feature.ratePlanFeature(
                                            custom_fields = {
                                                'key' : None
                                                }, 
                                            description = '', 
                                            feature_id = '', )
                                        ], 
                                    unique_token = '', 
                                    subscription_rate_plan_number = '', ), 
                                cancel_subscription = {"cancellationEffectiveDate":"2000-01-23","cancellationPolicy":"EndOfCurrentTerm"}, 
                                change_plan = com.zuora.models.create_change_plan.createChangePlan(
                                    effective_policy = 'EffectiveImmediately', 
                                    external_catalog_plan_id = '', 
                                    new_product_rate_plan = com.zuora.models.rate_plan.ratePlan(
                                        clearing_existing_features = True, 
                                        custom_fields = {
                                            'key' : None
                                            }, 
                                        external_catalog_plan_id = '', 
                                        externally_managed_plan_id = '', 
                                        product_rate_plan_id = '', 
                                        product_rate_plan_number = '', 
                                        unique_token = '', 
                                        subscription_rate_plan_number = '', 
                                        is_from_external_catalog = True, 
                                        rate_plan_name = '', ), 
                                    product_rate_plan_id = '', 
                                    product_rate_plan_number = '', 
                                    rate_plan_id = '', 
                                    reset_bcd = True, 
                                    sub_type = 'Upgrade', 
                                    subscription_rate_plan_number = '', ), 
                                change_reason = '', 
                                create_subscription = com.zuora.models.create_subscription.createSubscription(
                                    bill_to_contact_id = '', 
                                    invoice_separately = True, 
                                    invoice_template_id = '', 
                                    new_subscription_owner_account = com.zuora.models.preview_order_subscription_owner_account.PreviewOrderSubscriptionOwnerAccount(
                                        account_number = '', 
                                        additional_email_addresses = '', 
                                        allow_invoice_edit = True, 
                                        auto_pay = True, 
                                        batch = '', 
                                        bill_cycle_day = 0, 
                                        bill_to_contact = { }, 
                                        communication_profile_id = '', 
                                        credit_card = {"cardHolderInfo":{"addressLine1":"addressLine1","addressLine2":"addressLine2","cardHolderName":"cardHolderName","city":"city","country":"country","email":"email","phone":"phone","state":"state","zipCode":"zipCode"},"cardNumber":"cardNumber","cardType":"Visa","expirationMonth":8,"expirationYear":2435,"securityCode":"securityCode"}, 
                                        credit_memo_template_id = '', 
                                        crm_id = '', 
                                        currency = '', 
                                        custom_fields = {
                                            'key' : None
                                            }, 
                                        customer_service_rep_name = '', 
                                        debit_memo_template_id = '', 
                                        hpm_credit_card_payment_method_id = '', 
                                        invoice_delivery_prefs_email = True, 
                                        invoice_delivery_prefs_print = True, 
                                        invoice_template_id = '', 
                                        name = '', 
                                        notes = '', 
                                        parent_id = '', 
                                        payment_gateway = '', 
                                        payment_method = null, 
                                        payment_term = '', 
                                        purchase_order_number = '', 
                                        sales_rep = '', 
                                        sold_to_contact = { }, 
                                        tax_info = com.zuora.models.tax_info.taxInfo(
                                            company_code = '', 
                                            exempt_entity_use_code = '', 
                                            exempt_certificate_id = '', 
                                            exempt_certificate_type = '', 
                                            exempt_description = '', 
                                            exempt_effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                            exempt_expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                            exempt_issuing_jurisdiction = '', 
                                            exempt_status = 'No', 
                                            vatid = '', ), ), 
                                    notes = '', 
                                    payment_term = '', 
                                    sequence_set_id = '', 
                                    sold_to_contact_id = '', 
                                    subscribe_to_rate_plans = [
                                        com.zuora.models.rate_plan.ratePlan(
                                            clearing_existing_features = True, 
                                            custom_fields = {
                                                'key' : None
                                                }, 
                                            product_rate_plan_id = '', 
                                            product_rate_plan_number = '', 
                                            unique_token = '', 
                                            subscription_rate_plan_number = '', )
                                        ], 
                                    subscription_number = '', 
                                    subscription_owner_account_number = '', 
                                    terms = com.zuora.models.preview_order_create_subscription_terms.PreviewOrderCreateSubscriptionTerms(
                                        auto_renew = True, 
                                        initial_term = {"period":2,"periodType":"Month","startDate":"2000-01-23","termType":"TERMED"}, 
                                        renewal_setting = 'RENEW_WITH_SPECIFIC_TERM', 
                                        renewal_terms = [
                                            {"period":6,"periodType":"Month"}
                                            ], ), ), 
                                custom_fields = {
                                    'key' : None
                                    }, 
                                owner_transfer = {"clearingExistingSoldToContact":false,"destinationInvoiceAccountNumber":"destinationInvoiceAccountNumber","soldToContactId":"soldToContactId","sequenceSetId":"sequenceSetId","clearingExistingInvoiceTemplate":false,"clearingExistingPaymentTerm":false,"destinationAccountNumber":"destinationAccountNumber","billToContactId":"billToContactId","clearingExistingSequenceSet":false,"paymentTerm":"paymentTerm","clearingExistingBillToContact":false,"invoiceTemplateId":"invoiceTemplateId","invoiceGroupNumber":"invoiceGroupNumber","clearingExistingInvoiceGroupNumber":false}, 
                                remove_product = {"subscriptionRatePlanNumber":"subscriptionRatePlanNumber","externalCatalogPlanId":"externalCatalogPlanId","ratePlanId":"ratePlanId","productRatePlanNumber":"productRatePlanNumber","uniqueToken":"uniqueToken","customFields":{"key":"{}"},"chargeUpdates":{"chargeNumber":"chargeNumber","productRatePlanChargeId":"productRatePlanChargeId","productRatePlanNumber":"productRatePlanNumber","uniqueToken":"uniqueToken","customFields":{"key":"{}"}}}, 
                                renew_subscription = {"clearingExistingSoldToContact":false,"soldToContactId":"soldToContactId","sequenceSetId":"sequenceSetId","clearingExistingInvoiceTemplate":false,"clearingExistingPaymentTerm":false,"billToContactId":"billToContactId","clearingExistingSequenceSet":false,"paymentTerm":"paymentTerm","clearingExistingBillToContact":false,"invoiceTemplateId":"invoiceTemplateId","invoiceGroupNumber":"invoiceGroupNumber","clearingExistingInvoiceGroupNumber":false}, 
                                resume = com.zuora.models.resume.Resume(
                                    extends_term = True, 
                                    resume_periods = 56, 
                                    resume_periods_type = 'Day', 
                                    resume_policy = 'Today', 
                                    resume_specific_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), 
                                suspend = com.zuora.models.suspend.Suspend(
                                    suspend_periods = 56, 
                                    suspend_periods_type = 'Day', 
                                    suspend_policy = 'Today', 
                                    suspend_specific_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), 
                                terms_and_conditions = com.zuora.models.terms_and_conditions.termsAndConditions(
                                    auto_renew = True, 
                                    bill_to_contact_id = '', 
                                    clearing_existing_bill_to_contact = True, 
                                    clearing_existing_invoice_template = True, 
                                    clearing_existing_payment_term = True, 
                                    clearing_existing_sequence_set = True, 
                                    clearing_existing_sold_to_contact = True, 
                                    invoice_separately = True, 
                                    invoice_template_id = '', 
                                    last_term = com.zuora.models.last_term.LastTerm(
                                        period = 0, 
                                        period_type = 'Day', 
                                        term_type = 'TERMED', ), 
                                    payment_term = '', 
                                    sequence_set_id = '', 
                                    sold_to_contact_id = '', ), 
                                trigger_dates = [
                                    {"name":"ContractEffective","triggerDate":"2000-01-23"}
                                    ], 
                                type = 'CreateSubscription', 
                                update_product = com.zuora.models.update_product.updateProduct(
                                    charge_updates = [
                                        com.zuora.models.preview_order_charge_update.PreviewOrderChargeUpdate(
                                            charge_number = '', 
                                            custom_fields = {
                                                'key' : None
                                                }, 
                                            description = '', 
                                            effective_date = {"specificTriggerDate":"2000-01-23","triggerEvent":"ContractEffective"}, 
                                            prepaid_quantity = 1.337, 
                                            unique_token = '', )
                                        ], 
                                    clearing_existing_features = True, 
                                    custom_fields = , 
                                    product_rate_plan_number = '', 
                                    rate_plan_id = '', 
                                    specific_update_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    subscription_rate_plan_number = '', 
                                    unique_token = '', ), )
                            ], 
                        quote = {"QuoteBusinessType__QT":"QuoteBusinessType__QT","QuoteNumber__QT":"QuoteNumber__QT","OpportunityCloseDate__QT":"OpportunityCloseDate__QT","OpportunityName__QT":"OpportunityName__QT","QuoteType__QT":"QuoteType__QT"}, 
                        ramp = com.zuora.models.ramp.Ramp(
                            charges = [
                                com.zuora.models.ramp_charge.RampCharge(
                                    charge_number = '', 
                                    unique_token = '', )
                                ], 
                            delete = True, 
                            description = '', 
                            intervals = [
                                com.zuora.models.intervals.intervals(
                                    description = '', 
                                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    name = '', 
                                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                ], 
                            name = '', ), 
                        subscription_number = '', )
                    ]
            )
        else:
            return PreviewOrderAsyncRequest(
                order_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                preview_options = com.zuora.models.preview_options.PreviewOptions(
                    preview_number_of_periods = 56, 
                    preview_thru_type = 'SpecificDate', 
                    preview_types = [
                        'ChargeMetrics'
                        ], 
                    specific_preview_thru_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
        )
        """

    def testPreviewOrderAsyncRequest(self):
        """Test PreviewOrderAsyncRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
