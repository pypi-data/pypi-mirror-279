# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.custom_object_definition import CustomObjectDefinition  # noqa: E501

class TestCustomObjectDefinition(unittest.TestCase):
    """CustomObjectDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomObjectDefinition:
        """Test CustomObjectDefinition
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomObjectDefinition`
        """
        model = CustomObjectDefinition()  # noqa: E501
        if include_optional:
            return CustomObjectDefinition(
                created_by_id = '',
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                updated_by_id = '',
                updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                var_schema = com.zuora.models.custom_object_definition_schema.CustomObjectDefinition_schema(
                    auditable = [
                        ''
                        ], 
                    enable_create_record_auditing = True, 
                    enable_delete_record_auditing = True, 
                    filterable = [
                        ''
                        ], 
                    label = '', 
                    object = '', 
                    properties = null, 
                    relationships = [
                        None
                        ], 
                    required = [
                        ''
                        ], 
                    type = 'object', 
                    unique = [
                        ''
                        ], ),
                type = ''
            )
        else:
            return CustomObjectDefinition(
        )
        """

    def testCustomObjectDefinition(self):
        """Test CustomObjectDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
