# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.fulfillment import Fulfillment  # noqa: E501

class TestFulfillment(unittest.TestCase):
    """Fulfillment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Fulfillment:
        """Test Fulfillment
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Fulfillment`
        """
        model = Fulfillment()  # noqa: E501
        if include_optional:
            return Fulfillment(
                bill_target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                carrier = '',
                custom_fields = {
                    'key' : None
                    },
                description = '',
                exclude_item_billing_from_revenue_accounting = True,
                exclude_item_booking_from_revenue_accounting = True,
                external_id = '',
                fulfillment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                fulfillment_location = '',
                fulfillment_system = '',
                fulfillment_type = 'Delivery',
                order_line_item_id = '',
                quantity = 1.337,
                state = 'Executing',
                tracking_number = '',
                fulfillment_items = [
                    null
                    ]
            )
        else:
            return Fulfillment(
        )
        """

    def testFulfillment(self):
        """Test Fulfillment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
