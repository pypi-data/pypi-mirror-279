# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import Optional, Union
from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr, condecimal, constr
from zuora_sdk.models.billing_document_item_processing_type import BillingDocumentItemProcessingType
from zuora_sdk.models.billing_document_item_source_type import BillingDocumentItemSourceType
from zuora_sdk.models.charge_type import ChargeType
from zuora_sdk.models.rev_rec_trigger import RevRecTrigger
from zuora_sdk.models.tax_mode import TaxMode
from zuora_sdk.models.taxation_items_data import TaxationItemsData

class InvoiceItem(BaseModel):
    """
    InvoiceItem
    """
    integration_id__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationId__NS", description="ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    integration_status__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationStatus__NS", description="Status of the invoice item's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    sync_date__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="SyncDate__NS", description="Date when the invoice item was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    accounting_code: Optional[StrictStr] = Field(None, alias="accountingCode", description="The accounting code associated with the invoice item.")
    adjustment_liability_accounting_code: Optional[StrictStr] = Field(None, alias="adjustmentLiabilityAccountingCode", description="The accounting code for adjustment liability.         **Note**: This field is only available if you have the Billing - Revenue Integration feature enabled.  ")
    adjustment_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="adjustmentRevenueAccountingCode", description="The accounting code for adjustment revenue.         **Note**: This field is only available if you have the Billing - Revenue Integration feature enabled.  ")
    applied_to_item_id: Optional[StrictStr] = Field(None, alias="appliedToItemId", description="The unique ID of the invoice item that the discount charge is applied to.")
    available_to_credit_amount: Optional[condecimal()] = Field(None, alias="availableToCreditAmount", description="The amount of the invoice item that is available to credit.")
    balance: Optional[StrictStr] = Field(None, description="The balance of the invoice item.")
    booking_reference: Optional[StrictStr] = Field(None, alias="bookingReference", description="The booking reference of the invoice item.")
    charge_amount: Optional[StrictStr] = Field(None, alias="chargeAmount", description="The amount of the charge.   This amount does not include taxes regardless if the charge's tax mode is inclusive or exclusive. ")
    charge_date: Optional[StrictStr] = Field(None, alias="chargeDate", description="The date when the invoice item is charged, in `yyyy-mm-dd hh:mm:ss` format.")
    charge_description: Optional[StrictStr] = Field(None, alias="chargeDescription", description="The description of the charge.")
    charge_id: Optional[StrictStr] = Field(None, alias="chargeId", description="The unique ID of the charge.")
    charge_name: Optional[StrictStr] = Field(None, alias="chargeName", description="The name of the charge.")
    charge_type: Optional[StrictStr] = Field(None, alias="chargeType")
    contract_asset_accounting_code: Optional[StrictStr] = Field(None, alias="contractAssetAccountingCode", description="The accounting code for contract asset.         **Note**: This field is only available if you have the Billing - Revenue Integration feature enabled.  ")
    contract_liability_accounting_code: Optional[StrictStr] = Field(None, alias="contractLiabilityAccountingCode", description="The accounting code for contract liability.         **Note**: This field is only available if you have the Billing - Revenue Integration feature enabled.  ")
    contract_recognized_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="contractRecognizedRevenueAccountingCode", description="The accounting code for contract recognized revenue.         **Note**: This field is only available if you have the Billing - Revenue Integration feature enabled.  ")
    deferred_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="deferredRevenueAccountingCode", description="The deferred revenue accounting code associated with the invoice item. **Note:** This field is only available if you have Zuora Finance enabled.")
    description: Optional[StrictStr] = Field(None, description="The description of the invoice item.")
    exclude_item_billing_from_revenue_accounting: Optional[StrictBool] = Field(None, alias="excludeItemBillingFromRevenueAccounting", description="The flag to exclude the invoice item from revenue accounting.  **Note**: This field is only available if you have the Billing - Revenue Integration feature enabled.  ")
    id: Optional[StrictStr] = Field(None, description="Item ID.")
    invoice_schedule_id: Optional[StrictStr] = Field(None, alias="invoiceScheduleId", description="The ID of the invoice schedule item by which Invoice Schedule Item the invoice item is generated by when the Invoice Schedule Item is executed. **Note**: This field is available only if you have the <a href=\"https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Billing_Schedule\" target=\"_blank\">Billing Schedule</a> feature in the **Early Adopter** phase enabled.")
    invoice_schedule_item_id: Optional[StrictStr] = Field(None, alias="invoiceScheduleItemId", description="The ID of the invoice schedule item associated with the invoice item. **Note**: This field is available only if you have the <a href=\"https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Billing_Schedule\" target=\"_blank\">Billing Schedule</a> feature in the **Early Adopter** phase enabled.")
    item_type: Optional[StrictStr] = Field(None, alias="itemType", description="The type of the invoice item.")
    processing_type: Optional[StrictStr] = Field(None, alias="processingType")
    product_name: Optional[StrictStr] = Field(None, alias="productName", description="Name of the product associated with this item.")
    product_rate_plan_charge_id: Optional[StrictStr] = Field(None, alias="productRatePlanChargeId", description="The ID of the product rate plan charge that the invoice item is created from.")
    purchase_order_number: Optional[StrictStr] = Field(None, alias="purchaseOrderNumber", description="The purchase order number associated with the invoice item.")
    quantity: Optional[Union[StrictFloat, StrictInt]] = Field(None, description="The quantity of this item, in the configured unit of measure for the charge.")
    recognized_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="recognizedRevenueAccountingCode", description="The recognized revenue accounting code associated with the invoice item. **Note:** This field is only available if you have Zuora Finance enabled.")
    rev_rec_code: Optional[StrictStr] = Field(None, alias="revRecCode", description="The revenue recognition code.")
    rev_rec_trigger_condition: Optional[StrictStr] = Field(None, alias="revRecTriggerCondition")
    revenue_recognition_rule_name: Optional[StrictStr] = Field(None, alias="revenueRecognitionRuleName", description="The revenue recognition rule of the invoice item. **Note:** This field is only available if you have Zuora Finance enabled.")
    service_end_date: Optional[date] = Field(None, alias="serviceEndDate", description="The end date of the service period for this item, i.e., the last day of the service period, as _yyyy-mm-dd_.")
    service_start_date: Optional[date] = Field(None, alias="serviceStartDate", description="The start date of the service period for this item, as _yyyy-mm-dd_. For a one-time fee item, the date of the charge.")
    sku: Optional[StrictStr] = Field(None, description="The SKU of the invoice item.")
    sold_to_contact_id: Optional[StrictStr] = Field(None, alias="soldToContactId", description="The ID of the sold-to contact associated with the invoice item. **Note**: If you have the Flexible Billing Attributes feature disabled, the value of this field is `null`.")
    sold_to_contact_snapshot_id: Optional[StrictStr] = Field(None, alias="soldToContactSnapshotId", description="The ID of the sold-to contact snapshot associated with the invoice item. **Note**: If you have the Flexible Billing Attributes feature disabled, the value of this field is `null`.")
    source_item_type: Optional[StrictStr] = Field(None, alias="sourceItemType")
    subscription_id: Optional[StrictStr] = Field(None, alias="subscriptionId", description="The ID of the subscription for this item.")
    subscription_name: Optional[StrictStr] = Field(None, alias="subscriptionName", description="The name of the subscription for this item.")
    tax_amount: Optional[StrictStr] = Field(None, alias="taxAmount", description="Tax applied to the charge.")
    tax_code: Optional[StrictStr] = Field(None, alias="taxCode", description="The tax code of the invoice item. **Note** Only when taxation feature is enabled, this field can be presented.")
    tax_mode: Optional[StrictStr] = Field(None, alias="taxMode")
    taxation_items: Optional[TaxationItemsData] = Field(None, alias="taxationItems")
    unbilled_receivables_accounting_code: Optional[StrictStr] = Field(None, alias="unbilledReceivablesAccountingCode", description="The accounting code for unbilled receivables.         **Note**: This field is only available if you have the Billing - Revenue Integration feature enabled.  ")
    unit_of_measure: Optional[StrictStr] = Field(None, alias="unitOfMeasure", description="Unit used to measure consumption.")
    unit_price: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="unitPrice", description="The per-unit price of the invoice item.")
    number_of_deliveries: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="numberOfDeliveries", description="The number of delivery for charge.  **Note**: This field is available only if you have the Delivery Pricing feature enabled. ")
    reflect_discount_in_net_amount: Optional[StrictBool] = Field(None, alias="reflectDiscountInNetAmount", description="The flag to reflect Discount in Apply To Charge Net Amount. ")
    additional_properties: Dict[str, Any] = {}
    __properties = ["IntegrationId__NS", "IntegrationStatus__NS", "SyncDate__NS", "accountingCode", "adjustmentLiabilityAccountingCode", "adjustmentRevenueAccountingCode", "appliedToItemId", "availableToCreditAmount", "balance", "bookingReference", "chargeAmount", "chargeDate", "chargeDescription", "chargeId", "chargeName", "chargeType", "contractAssetAccountingCode", "contractLiabilityAccountingCode", "contractRecognizedRevenueAccountingCode", "deferredRevenueAccountingCode", "description", "excludeItemBillingFromRevenueAccounting", "id", "invoiceScheduleId", "invoiceScheduleItemId", "itemType", "processingType", "productName", "productRatePlanChargeId", "purchaseOrderNumber", "quantity", "recognizedRevenueAccountingCode", "revRecCode", "revRecTriggerCondition", "revenueRecognitionRuleName", "serviceEndDate", "serviceStartDate", "sku", "soldToContactId", "soldToContactSnapshotId", "sourceItemType", "subscriptionId", "subscriptionName", "taxAmount", "taxCode", "taxMode", "taxationItems", "unbilledReceivablesAccountingCode", "unitOfMeasure", "unitPrice", "numberOfDeliveries", "reflectDiscountInNetAmount"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> InvoiceItem:
        """Create an instance of InvoiceItem from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                            "additional_properties"
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of taxation_items
        if self.taxation_items:
            _dict['taxationItems'] = self.taxation_items.to_dict()
        # puts key-value pairs in additional_properties in the top level
        if self.additional_properties is not None:
            for _key, _value in self.additional_properties.items():
                _dict[_key] = _value

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> InvoiceItem:
        """Create an instance of InvoiceItem from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return InvoiceItem.parse_obj(obj)

        _obj = InvoiceItem.parse_obj({
            "integration_id__ns": obj.get("IntegrationId__NS"),
            "integration_status__ns": obj.get("IntegrationStatus__NS"),
            "sync_date__ns": obj.get("SyncDate__NS"),
            "accounting_code": obj.get("accountingCode"),
            "adjustment_liability_accounting_code": obj.get("adjustmentLiabilityAccountingCode"),
            "adjustment_revenue_accounting_code": obj.get("adjustmentRevenueAccountingCode"),
            "applied_to_item_id": obj.get("appliedToItemId"),
            "available_to_credit_amount": obj.get("availableToCreditAmount"),
            "balance": obj.get("balance"),
            "booking_reference": obj.get("bookingReference"),
            "charge_amount": obj.get("chargeAmount"),
            "charge_date": obj.get("chargeDate"),
            "charge_description": obj.get("chargeDescription"),
            "charge_id": obj.get("chargeId"),
            "charge_name": obj.get("chargeName"),
            "charge_type": obj.get("chargeType"),
            "contract_asset_accounting_code": obj.get("contractAssetAccountingCode"),
            "contract_liability_accounting_code": obj.get("contractLiabilityAccountingCode"),
            "contract_recognized_revenue_accounting_code": obj.get("contractRecognizedRevenueAccountingCode"),
            "deferred_revenue_accounting_code": obj.get("deferredRevenueAccountingCode"),
            "description": obj.get("description"),
            "exclude_item_billing_from_revenue_accounting": obj.get("excludeItemBillingFromRevenueAccounting"),
            "id": obj.get("id"),
            "invoice_schedule_id": obj.get("invoiceScheduleId"),
            "invoice_schedule_item_id": obj.get("invoiceScheduleItemId"),
            "item_type": obj.get("itemType"),
            "processing_type": obj.get("processingType"),
            "product_name": obj.get("productName"),
            "product_rate_plan_charge_id": obj.get("productRatePlanChargeId"),
            "purchase_order_number": obj.get("purchaseOrderNumber"),
            "quantity": obj.get("quantity"),
            "recognized_revenue_accounting_code": obj.get("recognizedRevenueAccountingCode"),
            "rev_rec_code": obj.get("revRecCode"),
            "rev_rec_trigger_condition": obj.get("revRecTriggerCondition"),
            "revenue_recognition_rule_name": obj.get("revenueRecognitionRuleName"),
            "service_end_date": obj.get("serviceEndDate"),
            "service_start_date": obj.get("serviceStartDate"),
            "sku": obj.get("sku"),
            "sold_to_contact_id": obj.get("soldToContactId"),
            "sold_to_contact_snapshot_id": obj.get("soldToContactSnapshotId"),
            "source_item_type": obj.get("sourceItemType"),
            "subscription_id": obj.get("subscriptionId"),
            "subscription_name": obj.get("subscriptionName"),
            "tax_amount": obj.get("taxAmount"),
            "tax_code": obj.get("taxCode"),
            "tax_mode": obj.get("taxMode"),
            "taxation_items": TaxationItemsData.from_dict(obj.get("taxationItems")) if obj.get("taxationItems") is not None else None,
            "unbilled_receivables_accounting_code": obj.get("unbilledReceivablesAccountingCode"),
            "unit_of_measure": obj.get("unitOfMeasure"),
            "unit_price": obj.get("unitPrice"),
            "number_of_deliveries": obj.get("numberOfDeliveries"),
            "reflect_discount_in_net_amount": obj.get("reflectDiscountInNetAmount")
        })
        # store additional fields in additional_properties
        for _key in obj.keys():
            if _key not in cls.__properties:
                _obj.additional_properties[_key] = obj.get(_key)

        return _obj


