# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import List, Optional
from pydantic import BaseModel, Field, StrictStr, conlist, constr
from zuora_sdk.models.product_category import ProductCategory
from zuora_sdk.models.product_feature import ProductFeature
from zuora_sdk.models.product_object_ns_fields_item_type_ns import ProductObjectNSFieldsItemTypeNS

class GetProductResponse(BaseModel):
    """
    GetProductResponse
    """
    id: Optional[StrictStr] = Field(None, description="Product ID. ")
    sku: Optional[StrictStr] = Field(None, description="Unique product SKU, up to 50 characters. ")
    product_number: Optional[StrictStr] = Field(None, alias="productNumber", description="The natural key of the product. ")
    name: Optional[StrictStr] = Field(None, description="Product name, up to 100 characters. ")
    category: Optional[ProductCategory] = None
    description: Optional[StrictStr] = Field(None, description="Optional product description. ")
    effective_start_date: Optional[date] = Field(None, alias="effectiveStartDate", description="The date when the product becomes available and can be subscribed to, as `yyyy-mm-dd`. ")
    effective_end_date: Optional[date] = Field(None, alias="effectiveEndDate", description="The date when the product expires and cannot be subscribed to anymore, as `yyyy-mm-dd`. ")
    product_rate_plans: Optional[StrictStr] = Field(None, alias="productRatePlans", description="URL to retrieve information about all product rate plans of a specific product. For example, `/v1/rateplan/40289f466463d683016463ef8b7301a0/productRatePlan`. If you want to view the product rate plan details, call [List all product rate plans of a product](https://www.zuora.com/developer/api-references/api/operation/Get_ProductRatePlans) #FIXME with the returned URL.  This field is in Zuora REST API version control. If you set the `zuora-version` request header to `230.0` or later, the value of this field is a URL. Zuora recommends that you use the latest behavior to retrieve product information.  If you do not set the `zuora-version` request header or you set this header to `229.0` or earlier, the value of this field is an array of product rate plan details. For more information about the array, see the response body of [List all product rate plans of a product](https://www.zuora.com/developer/api-references/api/operation/Get_ProductRatePlans). **Note**: The array contains a maximum of 300 product rate plans. Additionally, across all product rate plans, at most 300 product rate plan charges are returned. ")
    product_features: Optional[conlist(ProductFeature)] = Field(None, alias="productFeatures", description="Container for one or more product features. Only available when the following settings are enabled: - The Entitlements feature in your tenant - The Enable Feature Specification in Product and Subscriptions setting in Settings > Billing ")
    tags: Optional[StrictStr] = None
    integration_id__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationId__NS", description="ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    integration_status__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationStatus__NS", description="Status of the product's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    item_type__ns: Optional[StrictStr] = Field(None, alias="ItemType__NS")
    sync_date__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="SyncDate__NS", description="Date when the product was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    __properties = ["id", "sku", "productNumber", "name", "category", "description", "effectiveStartDate", "effectiveEndDate", "productRatePlans", "productFeatures", "tags", "IntegrationId__NS", "IntegrationStatus__NS", "ItemType__NS", "SyncDate__NS"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> GetProductResponse:
        """Create an instance of GetProductResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in product_features (list)
        _items = []
        if self.product_features:
            for _item in self.product_features:
                if _item:
                    _items.append(_item.to_dict())
            _dict['productFeatures'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> GetProductResponse:
        """Create an instance of GetProductResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return GetProductResponse.parse_obj(obj)

        _obj = GetProductResponse.parse_obj({
            "id": obj.get("id"),
            "sku": obj.get("sku"),
            "product_number": obj.get("productNumber"),
            "name": obj.get("name"),
            "category": obj.get("category"),
            "description": obj.get("description"),
            "effective_start_date": obj.get("effectiveStartDate"),
            "effective_end_date": obj.get("effectiveEndDate"),
            "product_rate_plans": obj.get("productRatePlans"),
            "product_features": [ProductFeature.from_dict(_item) for _item in obj.get("productFeatures")] if obj.get("productFeatures") is not None else None,
            "tags": obj.get("tags"),
            "integration_id__ns": obj.get("IntegrationId__NS"),
            "integration_status__ns": obj.get("IntegrationStatus__NS"),
            "item_type__ns": obj.get("ItemType__NS"),
            "sync_date__ns": obj.get("SyncDate__NS")
        })
        return _obj


