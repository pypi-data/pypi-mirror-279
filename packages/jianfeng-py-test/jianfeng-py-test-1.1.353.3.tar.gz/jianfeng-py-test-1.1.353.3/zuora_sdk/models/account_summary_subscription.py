# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import List, Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr, conlist, constr
from zuora_sdk.models.account_summary_rate_plan import AccountSummaryRatePlan

class AccountSummarySubscription(BaseModel):
    """
    AccountSummarySubscription
    """
    cpq_bundle_json_id__qt: Optional[constr(strict=True, max_length=32)] = Field(None, alias="CpqBundleJsonId__QT", description="The Bundle product structures from Zuora Quotes if you utilize Bundling in Salesforce. Do not change the value in this field. ")
    opportunity_close_date__qt: Optional[date] = Field(None, alias="OpportunityCloseDate__QT", description="The closing date of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes. ")
    opportunity_name__qt: Optional[constr(strict=True, max_length=100)] = Field(None, alias="OpportunityName__QT", description="The unique identifier of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes. ")
    quote_business_type__qt: Optional[constr(strict=True, max_length=32)] = Field(None, alias="QuoteBusinessType__QT", description="The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes. ")
    quote_number__qt: Optional[constr(strict=True, max_length=32)] = Field(None, alias="QuoteNumber__QT", description="The unique identifier of the Quote. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes. ")
    quote_type__qt: Optional[constr(strict=True, max_length=32)] = Field(None, alias="QuoteType__QT", description="The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes. ")
    integration_id__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationId__NS", description="ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    integration_status__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationStatus__NS", description="Status of the subscription's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    project__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Project__NS", description="The NetSuite project that the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    sales_order__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="SalesOrder__NS", description="The NetSuite sales order than the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    sync_date__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="SyncDate__NS", description="Date when the subscription was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    auto_renew: Optional[StrictBool] = Field(None, alias="autoRenew", description="If `true`, auto-renew is enabled. If `false`, auto-renew is disabled. ")
    id: Optional[StrictStr] = Field(None, description="Subscription ID. ")
    initial_term: Optional[StrictStr] = Field(None, alias="initialTerm", description="Duration of the initial subscription term in whole months.  ")
    rate_plans: Optional[conlist(AccountSummaryRatePlan)] = Field(None, alias="ratePlans", description="Container for rate plans for this subscription. ")
    renewal_term: Optional[StrictStr] = Field(None, alias="renewalTerm", description="Duration of the renewal term in whole months. ")
    status: Optional[StrictStr] = Field(None, description="Subscription status; possible values are: `Draft`, `PendingActivation`, `PendingAcceptance`, `Active`, `Cancelled`, `Expired`. ")
    subscription_number: Optional[StrictStr] = Field(None, alias="subscriptionNumber", description="Subscription Number. ")
    subscription_start_date: Optional[date] = Field(None, alias="subscriptionStartDate", description="Subscription start date. ")
    term_end_date: Optional[date] = Field(None, alias="termEndDate", description="End date of the subscription term. If the subscription is evergreen, this is either null or equal to the cancellation date, as appropriate. ")
    term_start_date: Optional[date] = Field(None, alias="termStartDate", description="Start date of the subscription term. If this is a renewal subscription, this date is different than the subscription start date. ")
    term_type: Optional[StrictStr] = Field(None, alias="termType", description="Possible values are: `TERMED`, `EVERGREEN`. ")
    __properties = ["CpqBundleJsonId__QT", "OpportunityCloseDate__QT", "OpportunityName__QT", "QuoteBusinessType__QT", "QuoteNumber__QT", "QuoteType__QT", "IntegrationId__NS", "IntegrationStatus__NS", "Project__NS", "SalesOrder__NS", "SyncDate__NS", "autoRenew", "id", "initialTerm", "ratePlans", "renewalTerm", "status", "subscriptionNumber", "subscriptionStartDate", "termEndDate", "termStartDate", "termType"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> AccountSummarySubscription:
        """Create an instance of AccountSummarySubscription from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in rate_plans (list)
        _items = []
        if self.rate_plans:
            for _item in self.rate_plans:
                if _item:
                    _items.append(_item.to_dict())
            _dict['ratePlans'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> AccountSummarySubscription:
        """Create an instance of AccountSummarySubscription from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return AccountSummarySubscription.parse_obj(obj)

        _obj = AccountSummarySubscription.parse_obj({
            "cpq_bundle_json_id__qt": obj.get("CpqBundleJsonId__QT"),
            "opportunity_close_date__qt": obj.get("OpportunityCloseDate__QT"),
            "opportunity_name__qt": obj.get("OpportunityName__QT"),
            "quote_business_type__qt": obj.get("QuoteBusinessType__QT"),
            "quote_number__qt": obj.get("QuoteNumber__QT"),
            "quote_type__qt": obj.get("QuoteType__QT"),
            "integration_id__ns": obj.get("IntegrationId__NS"),
            "integration_status__ns": obj.get("IntegrationStatus__NS"),
            "project__ns": obj.get("Project__NS"),
            "sales_order__ns": obj.get("SalesOrder__NS"),
            "sync_date__ns": obj.get("SyncDate__NS"),
            "auto_renew": obj.get("autoRenew"),
            "id": obj.get("id"),
            "initial_term": obj.get("initialTerm"),
            "rate_plans": [AccountSummaryRatePlan.from_dict(_item) for _item in obj.get("ratePlans")] if obj.get("ratePlans") is not None else None,
            "renewal_term": obj.get("renewalTerm"),
            "status": obj.get("status"),
            "subscription_number": obj.get("subscriptionNumber"),
            "subscription_start_date": obj.get("subscriptionStartDate"),
            "term_end_date": obj.get("termEndDate"),
            "term_start_date": obj.get("termStartDate"),
            "term_type": obj.get("termType")
        })
        return _obj


