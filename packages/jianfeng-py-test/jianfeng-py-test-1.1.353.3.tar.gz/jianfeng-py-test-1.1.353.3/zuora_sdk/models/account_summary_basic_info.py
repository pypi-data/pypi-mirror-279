# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import List, Optional
from pydantic import BaseModel, Field, StrictBool, StrictInt, StrictStr, conlist, constr
from zuora_sdk.models.account_object_ns_fields_customer_type_ns import AccountObjectNSFieldsCustomerTypeNS
from zuora_sdk.models.account_object_ns_fields_syncto_net_suite_ns import AccountObjectNSFieldsSynctoNetSuiteNS
from zuora_sdk.models.account_status import AccountStatus
from zuora_sdk.models.account_summary_default_payment_method import AccountSummaryDefaultPaymentMethod

class AccountSummaryBasicInfo(BaseModel):
    """
    Container for basic information about the account.   # noqa: E501
    """
    class__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Class__NS", description="Value of the Class field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    customer_type__ns: Optional[StrictStr] = Field(None, alias="CustomerType__NS")
    department__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Department__NS", description="Value of the Department field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    integration_id__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationId__NS", description="ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    integration_status__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationStatus__NS", description="Status of the account's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    location__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Location__NS", description="Value of the Location field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    subsidiary__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Subsidiary__NS", description="Value of the Subsidiary field for the corresponding customer account in NetSuite. The Subsidiary field is required if you use NetSuite OneWorld. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    sync_date__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="SyncDate__NS", description="Date when the account was sychronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    syncto_net_suite__ns: Optional[StrictStr] = Field(None, alias="SynctoNetSuite__NS")
    account_number: Optional[StrictStr] = Field(None, alias="accountNumber", description="Account number. ")
    additional_email_addresses: Optional[conlist(StrictStr)] = Field(None, alias="additionalEmailAddresses", description="A list of additional email addresses to receive email notifications. ")
    auto_pay: Optional[StrictBool] = Field(None, alias="autoPay", description="Whether future payments are automatically collected when they are due during a payment run. ")
    balance: Optional[StrictStr] = Field(None, description="Current outstanding balance. ")
    batch: Optional[StrictStr] = Field(None, description="The alias name given to a batch. A string of 50 characters or less. ")
    bill_cycle_day: Optional[StrictInt] = Field(None, alias="billCycleDay", description="Billing cycle day (BCD), the day of the month when a bill run generates invoices for the account. ")
    currency: Optional[StrictStr] = Field(None, description="A currency as defined in Billing Settings in the Zuora UI. ")
    default_payment_method: Optional[AccountSummaryDefaultPaymentMethod] = Field(None, alias="defaultPaymentMethod")
    id: Optional[StrictStr] = Field(None, description="Account ID. ")
    invoice_delivery_prefs_email: Optional[StrictBool] = Field(None, alias="invoiceDeliveryPrefsEmail", description="Whether the customer wants to receive invoices through email.  ")
    invoice_delivery_prefs_print: Optional[StrictBool] = Field(None, alias="invoiceDeliveryPrefsPrint", description="Whether the customer wants to receive printed invoices, such as through postal mail. ")
    last_invoice_date: Optional[date] = Field(None, alias="lastInvoiceDate", description="Date of the most recent invoice for the account; null if no invoice has ever been generated. ")
    last_metrics_update: Optional[StrictStr] = Field(None, alias="lastMetricsUpdate", description="The date and time when account metrics are last updated, if the account is a partner account.  **Note**:    - This field is available only if you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_customer_accounts/AAA_Overview_of_customer_accounts/Reseller_Account\" target=\"_blank\">Reseller Account</a> feature enabled.   - If you have the Reseller Account feature enabled, and set the `partnerAccount` field to `false` for an account, the value of the `lastMetricsUpdate` field is automatically set to `null` in the response.    - If you ever set the `partnerAccount` field to `true` for an account, the value of `lastMetricsUpdate` field is the time when the account metrics are last updated.    ")
    last_payment_amount: Optional[StrictStr] = Field(None, alias="lastPaymentAmount", description="Amount of the most recent payment collected for the account; null if no payment has ever been collected. ")
    last_payment_date: Optional[date] = Field(None, alias="lastPaymentDate", description="Date of the most recent payment collected for the account. Null if no payment has ever been collected. ")
    name: Optional[StrictStr] = Field(None, description="Account name. ")
    partner_account: Optional[StrictBool] = Field(None, alias="partnerAccount", description="Whether the customer account is a partner, distributor, or reseller.    **Note**: This field is available only if you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_customer_accounts/AAA_Overview_of_customer_accounts/Reseller_Account\" target=\"_blank\">Reseller Account</a> feature enabled. ")
    purchase_order_number: Optional[StrictStr] = Field(None, alias="purchaseOrderNumber", description="The purchase order number provided by your customer for services, products, or both purchased.")
    status: Optional[StrictStr] = None
    tags: Optional[StrictStr] = None
    organization_label: Optional[StrictStr] = Field(None, alias="organizationLabel", description="organization label. ")
    payment_method_cascading_consent: Optional[StrictBool] = Field(None, alias="paymentMethodCascadingConsent", description="payment method cascading consent ")
    additional_properties: Dict[str, Any] = {}
    __properties = ["Class__NS", "CustomerType__NS", "Department__NS", "IntegrationId__NS", "IntegrationStatus__NS", "Location__NS", "Subsidiary__NS", "SyncDate__NS", "SynctoNetSuite__NS", "accountNumber", "additionalEmailAddresses", "autoPay", "balance", "batch", "billCycleDay", "currency", "defaultPaymentMethod", "id", "invoiceDeliveryPrefsEmail", "invoiceDeliveryPrefsPrint", "lastInvoiceDate", "lastMetricsUpdate", "lastPaymentAmount", "lastPaymentDate", "name", "partnerAccount", "purchaseOrderNumber", "status", "tags", "organizationLabel", "paymentMethodCascadingConsent"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> AccountSummaryBasicInfo:
        """Create an instance of AccountSummaryBasicInfo from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                            "additional_properties"
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of default_payment_method
        if self.default_payment_method:
            _dict['defaultPaymentMethod'] = self.default_payment_method.to_dict()
        # puts key-value pairs in additional_properties in the top level
        if self.additional_properties is not None:
            for _key, _value in self.additional_properties.items():
                _dict[_key] = _value

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> AccountSummaryBasicInfo:
        """Create an instance of AccountSummaryBasicInfo from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return AccountSummaryBasicInfo.parse_obj(obj)

        _obj = AccountSummaryBasicInfo.parse_obj({
            "class__ns": obj.get("Class__NS"),
            "customer_type__ns": obj.get("CustomerType__NS"),
            "department__ns": obj.get("Department__NS"),
            "integration_id__ns": obj.get("IntegrationId__NS"),
            "integration_status__ns": obj.get("IntegrationStatus__NS"),
            "location__ns": obj.get("Location__NS"),
            "subsidiary__ns": obj.get("Subsidiary__NS"),
            "sync_date__ns": obj.get("SyncDate__NS"),
            "syncto_net_suite__ns": obj.get("SynctoNetSuite__NS"),
            "account_number": obj.get("accountNumber"),
            "additional_email_addresses": obj.get("additionalEmailAddresses"),
            "auto_pay": obj.get("autoPay"),
            "balance": obj.get("balance"),
            "batch": obj.get("batch"),
            "bill_cycle_day": obj.get("billCycleDay"),
            "currency": obj.get("currency"),
            "default_payment_method": AccountSummaryDefaultPaymentMethod.from_dict(obj.get("defaultPaymentMethod")) if obj.get("defaultPaymentMethod") is not None else None,
            "id": obj.get("id"),
            "invoice_delivery_prefs_email": obj.get("invoiceDeliveryPrefsEmail"),
            "invoice_delivery_prefs_print": obj.get("invoiceDeliveryPrefsPrint"),
            "last_invoice_date": obj.get("lastInvoiceDate"),
            "last_metrics_update": obj.get("lastMetricsUpdate"),
            "last_payment_amount": obj.get("lastPaymentAmount"),
            "last_payment_date": obj.get("lastPaymentDate"),
            "name": obj.get("name"),
            "partner_account": obj.get("partnerAccount"),
            "purchase_order_number": obj.get("purchaseOrderNumber"),
            "status": obj.get("status"),
            "tags": obj.get("tags"),
            "organization_label": obj.get("organizationLabel"),
            "payment_method_cascading_consent": obj.get("paymentMethodCascadingConsent")
        })
        # store additional fields in additional_properties
        for _key in obj.keys():
            if _key not in cls.__properties:
                _obj.additional_properties[_key] = obj.get(_key)

        return _obj


