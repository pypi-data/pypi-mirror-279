# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import List, Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr, conlist

class SuspendSubscriptionRequest(BaseModel):
    """
    SuspendSubscriptionRequest
    """
    application_order: Optional[conlist(StrictStr)] = Field(None, alias="applicationOrder", description="The priority order to apply credit memos and/or unapplied payments to an invoice. Possible item values are: `CreditMemo`, `UnappliedPayment`.  **Note:**   - This field is valid only if the `applyCredit` field is set to `true`.   - If no value is specified for this field, the default priority order is used, [\"CreditMemo\", \"UnappliedPayment\"], to apply credit memos first and then apply unapplied payments.   - If only one item is specified, only the items of the spedified type are applied to invoices. For example, if the value is `[\"CreditMemo\"]`, only credit memos are used to apply to invoices. ")
    apply_credit: Optional[StrictBool] = Field(None, alias="applyCredit", description="If the value is true, the credit memo or unapplied payment on the order account will be automatically applied to the invoices generated by this order. The credit memo generated by this order will not be automatically applied to any invoices.   **Note:** This field is only available if you have [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information. ")
    apply_credit_balance: Optional[StrictBool] = Field(None, alias="applyCreditBalance", description="Whether to automatically apply a credit balance to an invoice.  If the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.   To view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices method.  Prerequisite: `invoice` must be `true`.   **Note:**    - If you are using the field `invoiceCollect` rather than the field `invoice`, the `invoiceCollect` value must be `true`.   - This field is deprecated if you have the Invoice Settlement feature enabled. ")
    booking_date: Optional[date] = Field(None, alias="bookingDate", description="The booking date that you want to set for the amendment contract when you suspend the subscription. If `resume` is `true`, which means you also choose to resume the subscription at some point, then this field is also the booking date for the Resume amendment contract.  This field must be in the `yyyy-mm-dd` format. The default value of this field is the current date when you make the API call.  ")
    collect: Optional[StrictBool] = Field(None, description="Collects an automatic payment for a subscription. The collection generated in this operation is only for this subscription, not for the entire customer account.  If the value is `true`, the automatic payment is collected. If the value is `false`, no action is taken.  Prerequisite: The `invoice` or `runBilling` field must be `true`.   **Note**: This field is only available if you set the `zuora-version` request header to `196.0` or later. ")
    contract_effective_date: Optional[date] = Field(None, alias="contractEffectiveDate", description="The date when the customer notifies you that they want to amend their subscription. ")
    credit_memo_reason_code: Optional[StrictStr] = Field(None, alias="creditMemoReasonCode", description="A code identifying the reason for the credit memo transaction that is generated by the request. The value must be an existing reason code. If you do not pass the field or pass the field with empty value, Zuora uses the default reason code.")
    document_date: Optional[date] = Field(None, alias="documentDate", description="The date of the billing document, in `yyyy-mm-dd` format. It represents the invoice date for invoices, credit memo date for credit memos, and debit memo date for debit memos.  - If this field is specified, the specified date is used as the billing document date.  - If this field is not specified, the date specified in the `targetDate` is used as the billing document date. ")
    extends_term: Optional[StrictBool] = Field(None, alias="extendsTerm", description="Whether to extend the subscription term by the length of time the suspension is in effect. Values: `true`, `false`. ")
    invoice: Optional[StrictBool] = Field(None, description="**Note:** This field has been replaced by the `runBilling` field. The `invoice` field is only available for backward compatibility.   Creates an invoice for a subscription. The invoice generated in this operation is only for this subscription, not for the entire customer account.   If the value is `true`, an invoice is created. If the value is `false`, no action is taken. The default value is `false`.    This field is in Zuora REST API version control. Supported minor versions are `196.0` and `207.0`. To use this field in the method, you must set the zuora-version parameter to the minor version number in the request header. ")
    invoice_collect: Optional[StrictBool] = Field(None, alias="invoiceCollect", description="**Note:** This field has been replaced by the `invoice` field and the `collect` field. `invoiceCollect` is available only for backward compatibility.   **Note**: This field is only available if you set the `zuora-version` request header to `186.0`, `187.0`, `188.0`, or `189.0`. ")
    invoice_target_date: Optional[date] = Field(None, alias="invoiceTargetDate", description="**Note:** This field has been replaced by the `targetDate` field. The `invoiceTargetDate` field is only available for backward compatibility.   Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.   This field is in Zuora REST API version control. Supported minor versions are `207.0` and earlier. ")
    order_date: Optional[date] = Field(None, alias="orderDate", description="The date when the order is signed. If no additinal contractEffectiveDate is provided, this order will use this order date as the contract effective date. This field must be in the `yyyy-mm-dd` format. This field is required for Orders customers only, not applicable to Orders Harmonization customers. ")
    resume: Optional[StrictBool] = Field(None, description="Whether to set when to resume a subscription when creating a suspend amendment. Values: `true`, `false`. ")
    resume_periods: Optional[StrictStr] = Field(None, alias="resumePeriods", description="The length of the period used to specify when the subscription is resumed. The subscription resumption takes effect after a specified period based on the suspend date or today's date. You must use this field together with the `resumePeriodsType` field to specify the period.  **Note:** This field is only applicable when the `suspendPolicy` field is set to `FixedPeriodsFromToday` or `FixedPeriodsFromSuspendDate`. ")
    resume_periods_type: Optional[StrictStr] = Field(None, alias="resumePeriodsType", description="The period type used to define when the subscription resumption takes effect. The subscription resumption takes effect after a specified period based on the suspend date or today's date. You must use this field together with the resumePeriods field to specify the period.  Values: `Day`, `Week`, `Month`, `Year`  **Note:** This field is only applicable when the `suspendPolicy` field is set to `FixedPeriodsFromToday` or `FixedPeriodsFromSuspendDate`. ")
    resume_policy: Optional[StrictStr] = Field(None, alias="resumePolicy", description="Resume methods. Specify a way to resume a subscription. Values:  * `Today`: The subscription resumption takes effect on today's date.  * `FixedPeriodsFromSuspendDate`: The subscription resumption takes effect after a specified period based on the suspend date. You must specify the `resumePeriods` and `resumePeriodsType` fields to define the period.  * `SpecificDate`: The subscription resumption takes effect on a specific date. You must define the specific date in the `resumeSpecificDate` field.  * `FixedPeriodsFromToday`: The subscription resumption takes effect after a specified period based on the today's date. You must specify the `resumePeriods` and `resumePeriodsType` fields to define the period. * `suspendDate`: The subscription resumption takes effect on the date of suspension of the subscription. ")
    resume_specific_date: Optional[date] = Field(None, alias="resumeSpecificDate", description="A specific date when the subscription resumption takes effect, in the format yyyy-mm-dd.  **Note:** This field is only applicable only when the `resumePolicy` field is set to `SpecificDate`.  The value should not be earlier than the subscription suspension date. ")
    run_billing: Optional[StrictBool] = Field(None, alias="runBilling", description="Creates an invoice for a subscription. If you have the Invoice Settlement feature enabled, a credit memo might also be created based on the [invoice and credit memo generation rule](https://knowledgecenter.zuora.com/CB_Billing/Invoice_Settlement/Credit_and_Debit_Memos/Rules_for_Generating_Invoices_and_Credit_Memos).     The billing documents generated in this operation is only for this subscription, not for the entire customer account.   Possible values:  - `true`: An invoice is created. If you have the Invoice Settlement feature enabled, a credit memo might also be created.   - `false`: No invoice is created.   **Note:** This field is in Zuora REST API version control. Supported minor versions are `211.0` or later. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header. ")
    suspend_periods: Optional[StrictStr] = Field(None, alias="suspendPeriods", description="The length of the period used to specify when the subscription suspension takes effect. The subscription suspension takes effect after a specified period based on today's date. You must use this field together with the `suspendPeriodsType` field to specify the period.  **Note:** This field is only applicable only when the suspendPolicy field is set to FixedPeriodsFromToday. ")
    suspend_periods_type: Optional[StrictStr] = Field(None, alias="suspendPeriodsType", description="The period type used to define when the subscription suspension takes effect. The subscription suspension takes effect after a specified period based on today's date. You must use this field together with the suspendPeriods field to specify the period.  Type: string (enum)  Values: `Day`, `Week`, `Month`, `Year`  **Note:** This field is only applicable only when the suspendPolicy field is set to FixedPeriodsFromToday. ")
    suspend_policy: StrictStr = Field(..., alias="suspendPolicy", description="Suspend methods. Specify a way to suspend a subscription.   Value:  * `Today`: The subscription suspension takes effect on today's date. * `EndOfLastInvoicePeriod`: The subscription suspension takes effect at the end of the last invoice period. The suspend date defaults to a date that is one day after the last invoiced period. You can choose this option to avoid any negative invoices (credits) issued back to the customer after the subscription suspension.  * `SpecificDate`: The subscription suspension takes effect on a specific date. You must define the specific date in the `suspendSpecificDate` field. * `FixedPeriodsFromToday`: The subscription suspension takes effect after a specified period based on today's date. You must specify the `suspendPeriods` and `suspendPeriodsType` fields to define the period. ")
    suspend_specific_date: Optional[date] = Field(None, alias="suspendSpecificDate", description="A specific date when the subscription suspension takes effect, in the format yyyy-mm-dd.  **Note:** This field is only applicable only when the suspendPolicy field is set to SpecificDate.  The value should not be earlier than the subscription contract effective date, later than the subscription term end date, or within a period for which the customer has been invoiced. ")
    target_date: Optional[date] = Field(None, alias="targetDate", description="Date through which to calculate charges if an invoice or a credit memo is generated, as yyyy-mm-dd. Default is current date.   **Note:** The credit memo is only available if you have the Invoice Settlement feature enabled.   This field is in Zuora REST API version control. Supported minor versions are `211.0` and later. To use this field in the method, you must set the  `zuora-version` parameter to the minor version number in the request header. ")
    __properties = ["applicationOrder", "applyCredit", "applyCreditBalance", "bookingDate", "collect", "contractEffectiveDate", "creditMemoReasonCode", "documentDate", "extendsTerm", "invoice", "invoiceCollect", "invoiceTargetDate", "orderDate", "resume", "resumePeriods", "resumePeriodsType", "resumePolicy", "resumeSpecificDate", "runBilling", "suspendPeriods", "suspendPeriodsType", "suspendPolicy", "suspendSpecificDate", "targetDate"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> SuspendSubscriptionRequest:
        """Create an instance of SuspendSubscriptionRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> SuspendSubscriptionRequest:
        """Create an instance of SuspendSubscriptionRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return SuspendSubscriptionRequest.parse_obj(obj)

        _obj = SuspendSubscriptionRequest.parse_obj({
            "application_order": obj.get("applicationOrder"),
            "apply_credit": obj.get("applyCredit"),
            "apply_credit_balance": obj.get("applyCreditBalance"),
            "booking_date": obj.get("bookingDate"),
            "collect": obj.get("collect"),
            "contract_effective_date": obj.get("contractEffectiveDate"),
            "credit_memo_reason_code": obj.get("creditMemoReasonCode"),
            "document_date": obj.get("documentDate"),
            "extends_term": obj.get("extendsTerm"),
            "invoice": obj.get("invoice"),
            "invoice_collect": obj.get("invoiceCollect"),
            "invoice_target_date": obj.get("invoiceTargetDate"),
            "order_date": obj.get("orderDate"),
            "resume": obj.get("resume"),
            "resume_periods": obj.get("resumePeriods"),
            "resume_periods_type": obj.get("resumePeriodsType"),
            "resume_policy": obj.get("resumePolicy"),
            "resume_specific_date": obj.get("resumeSpecificDate"),
            "run_billing": obj.get("runBilling"),
            "suspend_periods": obj.get("suspendPeriods"),
            "suspend_periods_type": obj.get("suspendPeriodsType"),
            "suspend_policy": obj.get("suspendPolicy"),
            "suspend_specific_date": obj.get("suspendSpecificDate"),
            "target_date": obj.get("targetDate")
        })
        return _obj


