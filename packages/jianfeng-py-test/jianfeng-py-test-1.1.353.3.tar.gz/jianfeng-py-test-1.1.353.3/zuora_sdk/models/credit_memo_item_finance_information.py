# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class CreditMemoItemFinanceInformation(BaseModel):
    """
    Container for the finance information related to the credit memo item.   # noqa: E501
    """
    deferred_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="deferredRevenueAccountingCode", description="The accounting code for the deferred revenue, such as Monthly Recurring Liability. ")
    deferred_revenue_accounting_code_type: Optional[StrictStr] = Field(None, alias="deferredRevenueAccountingCodeType", description="The type of the deferred revenue accounting code, such as Deferred Revenue.  ")
    on_account_accounting_code: Optional[StrictStr] = Field(None, alias="onAccountAccountingCode", description="The accounting code that maps to an on account in your accounting system. ")
    on_account_accounting_code_type: Optional[StrictStr] = Field(None, alias="onAccountAccountingCodeType", description="The type of the accounting code that maps to an on account in your accounting system. ")
    recognized_revenue_accounting_code: Optional[StrictStr] = Field(None, alias="recognizedRevenueAccountingCode", description="The accounting code for the recognized revenue, such as Monthly Recurring Charges or Overage Charges. ")
    recognized_revenue_accounting_code_type: Optional[StrictStr] = Field(None, alias="recognizedRevenueAccountingCodeType", description="The type of the recognized revenue accounting code, such as Sales Revenue or Sales Discount.  ")
    revenue_recognition_rule_name: Optional[StrictStr] = Field(None, alias="revenueRecognitionRuleName", description="The name of the revenue recognition rule governing the revenue schedule. ")
    revenue_schedule_number: Optional[StrictStr] = Field(None, alias="revenueScheduleNumber", description="Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, RS-00000001. ")
    __properties = ["deferredRevenueAccountingCode", "deferredRevenueAccountingCodeType", "onAccountAccountingCode", "onAccountAccountingCodeType", "recognizedRevenueAccountingCode", "recognizedRevenueAccountingCodeType", "revenueRecognitionRuleName", "revenueScheduleNumber"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CreditMemoItemFinanceInformation:
        """Create an instance of CreditMemoItemFinanceInformation from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CreditMemoItemFinanceInformation:
        """Create an instance of CreditMemoItemFinanceInformation from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CreditMemoItemFinanceInformation.parse_obj(obj)

        _obj = CreditMemoItemFinanceInformation.parse_obj({
            "deferred_revenue_accounting_code": obj.get("deferredRevenueAccountingCode"),
            "deferred_revenue_accounting_code_type": obj.get("deferredRevenueAccountingCodeType"),
            "on_account_accounting_code": obj.get("onAccountAccountingCode"),
            "on_account_accounting_code_type": obj.get("onAccountAccountingCodeType"),
            "recognized_revenue_accounting_code": obj.get("recognizedRevenueAccountingCode"),
            "recognized_revenue_accounting_code_type": obj.get("recognizedRevenueAccountingCodeType"),
            "revenue_recognition_rule_name": obj.get("revenueRecognitionRuleName"),
            "revenue_schedule_number": obj.get("revenueScheduleNumber")
        })
        return _obj


