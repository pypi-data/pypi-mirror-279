# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.preview_order_rate_plan_override import PreviewOrderRatePlanOverride  # noqa: E501

class TestPreviewOrderRatePlanOverride(unittest.TestCase):
    """PreviewOrderRatePlanOverride unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PreviewOrderRatePlanOverride:
        """Test PreviewOrderRatePlanOverride
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PreviewOrderRatePlanOverride`
        """
        model = PreviewOrderRatePlanOverride()  # noqa: E501
        if include_optional:
            return PreviewOrderRatePlanOverride(
                charge_overrides = [
                    com.zuora.models.charge.charge(
                        billing = {"billCycleDay":27,"billCycleType":"DefaultFromCustomer","billingPeriod":"Month","billingPeriodAlignment":"AlignToCharge","billingTiming":"IN_ADVANCE","specificBillingPeriod":6,"weeklyBillCycleDay":"Sunday"}, 
                        charge_number = '', 
                        custom_fields = {
                            'key' : None
                            }, 
                        description = '', 
                        drawdown_rate = 1.337, 
                        end_date = {"endDateCondition":"Subscription_End","specificEndDate":"2000-01-23","upToPeriods":7,"upToPeriodsType":"Billing_Periods"}, 
                        exclude_item_billing_from_revenue_accounting = True, 
                        exclude_item_booking_from_revenue_accounting = True, 
                        is_allocation_eligible = True, 
                        is_rollover = True, 
                        is_unbilled = True, 
                        prepaid_quantity = 1.337, 
                        pricing = {"chargeModelData":{"chargeModelConfiguration":{"customFieldPerUnitRate":"customFieldPerUnitRate","customFieldTotalAmount":"customFieldTotalAmount","formula":"formula"},"quantity":0.3616076749251911,"tiers":[{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1},{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1}]},"discount":{"applyDiscountTo":"ONETIME","discountAmount":1.0246457001441578,"discountLevel":"rateplan","discountPercentage":1.4894159098541704,"priceChangeOption":"NoChange"},"oneTimeFlatFee":{"listPrice":6.84685269835264},"oneTimePerUnit":{"listPrice":7.457744773683766,"quantity":0.11730742509559433},"oneTimeTiered":{"quantity":0.4965218492984954,"tiers":[{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1},{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1}]},"oneTimeVolume":{"quantity":0.5025004791520294,"tiers":[{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1},{"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1}]},"recurringDelivery":null,"recurringFlatFee":null,"recurringPerUnit":null,"recurringTiered":null,"recurringVolume":null,"usageFlatFee":null,"usageOverage":null,"usagePerUnit":null,"usageTiered":null,"usageTieredWithOverage":null,"usageVolume":null}, 
                        product_rate_plan_charge_id = '', 
                        product_rate_plan_charge_number = '', 
                        rev_rec_code = '', 
                        rev_rec_trigger_condition = 'Contract Effective Date', 
                        revenue_recognition_rule_name = '', 
                        rollover_apply = 'ApplyFirst', 
                        rollover_periods = 1.337, 
                        start_date = {"specificTriggerDate":"2000-01-23","triggerEvent":"ContractEffective"}, 
                        unique_token = '', 
                        validity_period_type = 'SUBSCRIPTION_TERM', )
                    ],
                clearing_existing_features = True,
                custom_fields = {
                    'key' : None
                    },
                product_rate_plan_id = '',
                product_rate_plan_number = '',
                subscription_product_features = [
                    com.zuora.models.rate_plan_feature.ratePlanFeature(
                        custom_fields = {
                            'key' : None
                            }, 
                        description = '', 
                        feature_id = '', )
                    ],
                unique_token = '',
                subscription_rate_plan_number = ''
            )
        else:
            return PreviewOrderRatePlanOverride(
                product_rate_plan_id = '',
        )
        """

    def testPreviewOrderRatePlanOverride(self):
        """Test PreviewOrderRatePlanOverride"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
