# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.order_metric import OrderMetric  # noqa: E501

class TestOrderMetric(unittest.TestCase):
    """OrderMetric unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderMetric:
        """Test OrderMetric
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderMetric`
        """
        model = OrderMetric()  # noqa: E501
        if include_optional:
            return OrderMetric(
                charge_number = '',
                elp = [
                    {"amount":5.944895607614016,"endDate":"2000-01-23","generatedReason":"IncreaseQuantity","invoiceOwner":"invoiceOwner","orderItemId":"orderItemId","startDate":"2000-01-23","subscriptionOwner":"subscriptionOwner","tax":6.704019297950036,"termNumber":3.353193347011243,"type":"Regular"}
                    ],
                mrr = [
                    {"amount":3.0937452626664474,"discountChargeNumber":"discountChargeNumber","endDate":"2000-01-23","generatedReason":"IncreaseQuantity","invoiceOwner":"invoiceOwner","orderItemId":"orderItemId","startDate":"2000-01-23","subscriptionOwner":"subscriptionOwner","termNumber":7.143538047012306,"type":"Regular"}
                    ],
                origin_rate_plan_id = '',
                product_rate_plan_charge_id = '',
                product_rate_plan_id = '',
                subscription_rate_plan_number = '',
                quantity = [
                    {"amount":0.8851374739011653,"endDate":"2000-01-23","generatedReason":"IncreaseQuantity","invoiceOwner":"invoiceOwner","orderItemId":"orderItemId","startDate":"2000-01-23","subscriptionOwner":"subscriptionOwner","termNumber":7.058770351582356}
                    ],
                tcb = [
                    {"amount":6.519180951018382,"discountChargeNumber":"discountChargeNumber","endDate":"2000-01-23","generatedReason":"IncreaseQuantity","invoiceOwner":"invoiceOwner","orderItemId":"orderItemId","startDate":"2000-01-23","subscriptionOwner":"subscriptionOwner","tax":0.10263654006109402,"termNumber":4.652396432933246,"type":"Regular"}
                    ],
                tcv = [
                    {"amount":3.0937452626664474,"discountChargeNumber":"discountChargeNumber","endDate":"2000-01-23","generatedReason":"IncreaseQuantity","invoiceOwner":"invoiceOwner","orderItemId":"orderItemId","startDate":"2000-01-23","subscriptionOwner":"subscriptionOwner","termNumber":7.143538047012306,"type":"Regular"}
                    ]
            )
        else:
            return OrderMetric(
        )
        """

    def testOrderMetric(self):
        """Test OrderMetric"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
