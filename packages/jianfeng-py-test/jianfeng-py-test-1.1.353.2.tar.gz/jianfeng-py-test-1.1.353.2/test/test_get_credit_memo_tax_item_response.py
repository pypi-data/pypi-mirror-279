# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.get_credit_memo_tax_item_response import GetCreditMemoTaxItemResponse  # noqa: E501

class TestGetCreditMemoTaxItemResponse(unittest.TestCase):
    """GetCreditMemoTaxItemResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCreditMemoTaxItemResponse:
        """Test GetCreditMemoTaxItemResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCreditMemoTaxItemResponse`
        """
        model = GetCreditMemoTaxItemResponse()  # noqa: E501
        if include_optional:
            return GetCreditMemoTaxItemResponse(
                applied_amount = 1.337,
                exempt_amount = 1.337,
                finance_information = com.zuora.models.get_credit_memo_tax_item_finance_information.GetCreditMemoTaxItemFinanceInformation(
                    on_account_accounting_code = '', 
                    on_account_accounting_code_type = '', 
                    sales_tax_payable_accounting_code = '', 
                    sales_tax_payable_accounting_code_type = '', ),
                id = '',
                jurisdiction = '',
                location_code = '',
                name = '',
                refund_amount = 1.337,
                source_tax_item_id = '',
                tax_amount = 1.337,
                tax_code = '',
                tax_code_description = '',
                tax_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                tax_rate = 1.337,
                tax_rate_description = '',
                tax_rate_type = 'Percentage',
                unapplied_amount = 1.337
            )
        else:
            return GetCreditMemoTaxItemResponse(
        )
        """

    def testGetCreditMemoTaxItemResponse(self):
        """Test GetCreditMemoTaxItemResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
