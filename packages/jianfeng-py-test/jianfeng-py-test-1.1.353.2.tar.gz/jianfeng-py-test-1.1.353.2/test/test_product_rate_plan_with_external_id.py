# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.product_rate_plan_with_external_id import ProductRatePlanWithExternalId  # noqa: E501

class TestProductRatePlanWithExternalId(unittest.TestCase):
    """ProductRatePlanWithExternalId unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductRatePlanWithExternalId:
        """Test ProductRatePlanWithExternalId
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductRatePlanWithExternalId`
        """
        model = ProductRatePlanWithExternalId()  # noqa: E501
        if include_optional:
            return ProductRatePlanWithExternalId(
                external_id_source_system = '',
                description = '',
                effective_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                effective_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                externally_managed_plan_ids = [
                    ''
                    ],
                grade = 1.337,
                id = '',
                name = '',
                status = 'Active',
                success = True
            )
        else:
            return ProductRatePlanWithExternalId(
        )
        """

    def testProductRatePlanWithExternalId(self):
        """Test ProductRatePlanWithExternalId"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
