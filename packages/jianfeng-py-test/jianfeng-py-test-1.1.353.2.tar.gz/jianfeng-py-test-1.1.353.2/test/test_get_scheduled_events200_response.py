# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.get_scheduled_events200_response import GetScheduledEvents200Response  # noqa: E501

class TestGetScheduledEvents200Response(unittest.TestCase):
    """GetScheduledEvents200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetScheduledEvents200Response:
        """Test GetScheduledEvents200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetScheduledEvents200Response`
        """
        model = GetScheduledEvents200Response()  # noqa: E501
        if include_optional:
            return GetScheduledEvents200Response(
                data = [
                    {"active":true,"apiField":"TermEndDate","apiObject":"Subscription","condition":"Subscription.Status == _SUBSCRIPTION_STATUS","cronExpression":"0 30 10 ? * *","description":"Trigger a scheduled event at 10:30 AM based on TermEndDate of subscription objects.","displayName":"Term End Date Scheduled Event","id":"d306545b74e445e4bffcf1c7609804be","name":"TermEndDateScheduledEvent","namespace":"user.notification","parameters":{"_SUBSCRIPTION_STATUS":{"description":"The status of the subscription","displayName":"Subscription Status","options":["Draft","Active","Pending","Expired","Cancelled"],"valueType":"STRING"}}}
                    ],
                next = '/events/scheduled-events?start=10&limit=10'
            )
        else:
            return GetScheduledEvents200Response(
        )
        """

    def testGetScheduledEvents200Response(self):
        """Test GetScheduledEvents200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
