# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.create_billing_adjustment_request import CreateBillingAdjustmentRequest  # noqa: E501

class TestCreateBillingAdjustmentRequest(unittest.TestCase):
    """CreateBillingAdjustmentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateBillingAdjustmentRequest:
        """Test CreateBillingAdjustmentRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateBillingAdjustmentRequest`
        """
        model = CreateBillingAdjustmentRequest()  # noqa: E501
        if include_optional:
            return CreateBillingAdjustmentRequest(
                account_number = '',
                charge_numbers = [
                    ''
                    ],
                deferred_revenue_accounting_code = '',
                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                exclusion = [
                    com.zuora.models.billing_adjustment_exclusion.BillingAdjustmentExclusion(
                        charge_numbers = [
                            ''
                            ], 
                        delivery_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
                reason = '',
                recognized_revenue_accounting_code = '',
                revenue_recognition_rule_name = '',
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                subscription_number = '',
                type = 'DeliveryCredit'
            )
        else:
            return CreateBillingAdjustmentRequest(
                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
        )
        """

    def testCreateBillingAdjustmentRequest(self):
        """Test CreateBillingAdjustmentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
