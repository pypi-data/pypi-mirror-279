# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr, constr

class CreatePaymentMethodCCReferenceTransaction(BaseModel):
    """
    CreatePaymentMethodCCReferenceTransaction
    """
    credit_card_mask_number: Optional[constr(strict=True, max_length=19)] = Field(None, alias="creditCardMaskNumber", description="The masked credit card number, such as: ``` *********1112 ```  This field is specific for the CC Reference Transaction payment method. It is an optional field that you can use to distinguish different CC Reference Transaction payment methods.  Though there are no special restrictions on the input string, it is highly recommended to specify a card number that is masked. ")
    second_token_id: Optional[StrictStr] = Field(None, alias="secondTokenId", description="A gateway unique identifier that replaces sensitive payment method data.   `secondTokenId` is conditionally required only when `tokenId` is being used to represent a gateway customer profile. `secondTokenId` is used in the CC Reference Transaction payment method. ")
    token_id: Optional[StrictStr] = Field(None, alias="tokenId", description="A gateway unique identifier that replaces sensitive payment method data or represents a gateway's unique customer profile. `tokenId` is required for the CC Reference Transaction payment method.  When `tokenId` is used to represent a customer profile, `secondTokenId` is conditionally required for representing the underlying tokenized payment method.  The values for the `tokenId` and `secondTokenId` fields differ for gateways. For more information, see the Knowledge Center article specific to each gateway that supports the CC Reference Transaction payment method.  **Note:** When creating an ACH payment method, if you need to pass in tokenized information, use the `mandateId` instead of `tokenId` field. ")
    __properties = ["creditCardMaskNumber", "secondTokenId", "tokenId"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CreatePaymentMethodCCReferenceTransaction:
        """Create an instance of CreatePaymentMethodCCReferenceTransaction from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CreatePaymentMethodCCReferenceTransaction:
        """Create an instance of CreatePaymentMethodCCReferenceTransaction from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CreatePaymentMethodCCReferenceTransaction.parse_obj(obj)

        _obj = CreatePaymentMethodCCReferenceTransaction.parse_obj({
            "credit_card_mask_number": obj.get("creditCardMaskNumber"),
            "second_token_id": obj.get("secondTokenId"),
            "token_id": obj.get("tokenId")
        })
        return _obj


