# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import List, Optional, Union
from pydantic import BaseModel, Field, StrictFloat, StrictInt, StrictStr, conlist, constr
from com.zuora.models.product_rate_plan_charge import ProductRatePlanCharge
from com.zuora.models.product_rate_plan_object_ns_fields_billing_period_ns import ProductRatePlanObjectNSFieldsBillingPeriodNS
from com.zuora.models.product_rate_plan_object_ns_fields_include_children_ns import ProductRatePlanObjectNSFieldsIncludeChildrenNS
from com.zuora.models.product_rate_plan_object_ns_fields_item_type_ns import ProductRatePlanObjectNSFieldsItemTypeNS
from com.zuora.models.product_rate_plan_status import ProductRatePlanStatus

class ProductRatePlan(BaseModel):
    """
    ProductRatePlan
    """
    billing_period__ns: Optional[StrictStr] = Field(None, alias="BillingPeriod__NS")
    class__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Class__NS", description="Class associated with the corresponding item in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    department__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Department__NS", description="Department associated with the corresponding item in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    include_children__ns: Optional[StrictStr] = Field(None, alias="IncludeChildren__NS")
    integration_id__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationId__NS", description="ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    integration_status__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="IntegrationStatus__NS", description="Status of the product rate plan's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    item_type__ns: Optional[StrictStr] = Field(None, alias="ItemType__NS")
    location__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Location__NS", description="Location associated with the corresponding item in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    multi_currency_price__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="MultiCurrencyPrice__NS", description="Multi-currency price associated with the corresponding item in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    price__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Price__NS", description="Price associated with the corresponding item in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    subsidiary__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="Subsidiary__NS", description="Subsidiary associated with the corresponding item in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    sync_date__ns: Optional[constr(strict=True, max_length=255)] = Field(None, alias="SyncDate__NS", description="Date when the product rate plan was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265). ")
    id: Optional[StrictStr] = Field(None, description="Unique product rate-plan ID. ")
    product_rate_plan_number: Optional[StrictStr] = Field(None, alias="productRatePlanNumber", description="The natural key of the product rate plan. ")
    name: Optional[StrictStr] = Field(None, description="Name of the product rate-plan charge. (Not required to be unique.) ")
    description: Optional[StrictStr] = Field(None, description="Rate plan description. ")
    effective_start_date: Optional[date] = Field(None, alias="effectiveStartDate", description="First date the rate plan is active (i.e., available to be subscribed to), as `yyyy-mm-dd`.  Before this date, the status is `NotStarted`. ")
    effective_end_date: Optional[date] = Field(None, alias="effectiveEndDate", description="Final date the rate plan is active, as `yyyy-mm-dd`. After this date, the rate plan status is `Expired`. ")
    grade: Optional[Union[StrictFloat, StrictInt]] = Field(None, description="The grade of the product rate plan.  **Note**: This field is in the **Early Adopter** phase. We are actively soliciting feedback from a small set of early adopters before releasing it as generally available. If you want to join this early adopter program, submit a request at [Zuora Global Support](http://support.zuora.com/). ")
    product_rate_plan_charges: Optional[conlist(ProductRatePlanCharge)] = Field(None, alias="productRatePlanCharges", description="Field attributes describing the product rate plan charges: ")
    status: Optional[ProductRatePlanStatus] = None
    __properties = ["BillingPeriod__NS", "Class__NS", "Department__NS", "IncludeChildren__NS", "IntegrationId__NS", "IntegrationStatus__NS", "ItemType__NS", "Location__NS", "MultiCurrencyPrice__NS", "Price__NS", "Subsidiary__NS", "SyncDate__NS", "id", "productRatePlanNumber", "name", "description", "effectiveStartDate", "effectiveEndDate", "grade", "productRatePlanCharges", "status"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ProductRatePlan:
        """Create an instance of ProductRatePlan from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in product_rate_plan_charges (list)
        _items = []
        if self.product_rate_plan_charges:
            for _item in self.product_rate_plan_charges:
                if _item:
                    _items.append(_item.to_dict())
            _dict['productRatePlanCharges'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ProductRatePlan:
        """Create an instance of ProductRatePlan from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ProductRatePlan.parse_obj(obj)

        _obj = ProductRatePlan.parse_obj({
            "billing_period__ns": obj.get("BillingPeriod__NS"),
            "class__ns": obj.get("Class__NS"),
            "department__ns": obj.get("Department__NS"),
            "include_children__ns": obj.get("IncludeChildren__NS"),
            "integration_id__ns": obj.get("IntegrationId__NS"),
            "integration_status__ns": obj.get("IntegrationStatus__NS"),
            "item_type__ns": obj.get("ItemType__NS"),
            "location__ns": obj.get("Location__NS"),
            "multi_currency_price__ns": obj.get("MultiCurrencyPrice__NS"),
            "price__ns": obj.get("Price__NS"),
            "subsidiary__ns": obj.get("Subsidiary__NS"),
            "sync_date__ns": obj.get("SyncDate__NS"),
            "id": obj.get("id"),
            "product_rate_plan_number": obj.get("productRatePlanNumber"),
            "name": obj.get("name"),
            "description": obj.get("description"),
            "effective_start_date": obj.get("effectiveStartDate"),
            "effective_end_date": obj.get("effectiveEndDate"),
            "grade": obj.get("grade"),
            "product_rate_plan_charges": [ProductRatePlanCharge.from_dict(_item) for _item in obj.get("productRatePlanCharges")] if obj.get("productRatePlanCharges") is not None else None,
            "status": obj.get("status")
        })
        return _obj


