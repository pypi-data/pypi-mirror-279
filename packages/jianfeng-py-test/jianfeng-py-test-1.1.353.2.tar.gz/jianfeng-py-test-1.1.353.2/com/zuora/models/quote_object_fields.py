# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class QuoteObjectFields(BaseModel):
    """
    The fields populated for a quote when a quote is sent to Zuora Billing from Zuora Quote.   # noqa: E501
    """
    opportunity_close_date__qt: Optional[StrictStr] = Field(None, alias="OpportunityCloseDate__QT", description="The closing date of the Opportunity.  This field is used in Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes. ")
    opportunity_name__qt: Optional[StrictStr] = Field(None, alias="OpportunityName__QT", description="The unique identifier of the Opportunity.   This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 100 ")
    quote_business_type__qt: Optional[StrictStr] = Field(None, alias="QuoteBusinessType__QT", description="The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn.  This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 32 ")
    quote_number__qt: Optional[StrictStr] = Field(None, alias="QuoteNumber__QT", description="The unique identifier of the Quote.  This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 32 ")
    quote_type__qt: Optional[StrictStr] = Field(None, alias="QuoteType__QT", description="The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel.  This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 32 ")
    __properties = ["OpportunityCloseDate__QT", "OpportunityName__QT", "QuoteBusinessType__QT", "QuoteNumber__QT", "QuoteType__QT"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> QuoteObjectFields:
        """Create an instance of QuoteObjectFields from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> QuoteObjectFields:
        """Create an instance of QuoteObjectFields from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QuoteObjectFields.parse_obj(obj)

        _obj = QuoteObjectFields.parse_obj({
            "opportunity_close_date__qt": obj.get("OpportunityCloseDate__QT"),
            "opportunity_name__qt": obj.get("OpportunityName__QT"),
            "quote_business_type__qt": obj.get("QuoteBusinessType__QT"),
            "quote_number__qt": obj.get("QuoteNumber__QT"),
            "quote_type__qt": obj.get("QuoteType__QT")
        })
        return _obj


