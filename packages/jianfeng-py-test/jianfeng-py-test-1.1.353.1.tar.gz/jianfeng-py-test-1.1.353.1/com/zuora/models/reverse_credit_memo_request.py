# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import Optional
from pydantic import BaseModel, Field

class ReverseCreditMemoRequest(BaseModel):
    """
    ReverseCreditMemoRequest
    """
    apply_effective_date: Optional[date] = Field(None, alias="applyEffectiveDate", description="The date when the to-be-reversed credit memo is applied to the newly generated debit memo, in `yyyy-mm-dd` format. The effective date must be later than or equal to the memo date.  The default value is the date when you reverse the credit memo and create the debit memo. ")
    memo_date: Optional[date] = Field(None, alias="memoDate", description="The date when the debit memo is created, in `yyyy-mm-dd` format. The memo date must be later than or equal to the credit memo's memo date.  The default value is the date when you reverse the credit memo and create the debit memo. ")
    __properties = ["applyEffectiveDate", "memoDate"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ReverseCreditMemoRequest:
        """Create an instance of ReverseCreditMemoRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ReverseCreditMemoRequest:
        """Create an instance of ReverseCreditMemoRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ReverseCreditMemoRequest.parse_obj(obj)

        _obj = ReverseCreditMemoRequest.parse_obj({
            "apply_effective_date": obj.get("applyEffectiveDate"),
            "memo_date": obj.get("memoDate")
        })
        return _obj


