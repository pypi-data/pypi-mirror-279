# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class AccountSummaryDefaultPaymentMethod(BaseModel):
    """
      # noqa: E501
    """
    credit_card_expiration_month: Optional[StrictStr] = Field(None, alias="creditCardExpirationMonth", description="Two-digit numeric card expiration month as `mm`. ")
    credit_card_expiration_year: Optional[StrictStr] = Field(None, alias="creditCardExpirationYear", description="Four-digit card expiration year as `yyyy`. ")
    credit_card_number: Optional[StrictStr] = Field(None, alias="creditCardNumber", description="Credit card number, 16 characters or less, displayed in masked format (e.g., ************1234). ")
    credit_card_type: Optional[StrictStr] = Field(None, alias="creditCardType", description="The type of the credit card.  Possible values  include `Visa`, `MasterCard`, `AmericanExpress`, `Discover`, `JCB`, and `Diners`. For more information about credit card types supported by different payment gateways, see [Supported Payment Methods](https://knowledgecenter.zuora.com/Zuora_Central/Billing_and_Payments/L_Payment_Methods/Supported_Payment_Methods). ")
    id: Optional[StrictStr] = Field(None, description="ID of the default payment method associated with this account. ")
    payment_method_type: Optional[StrictStr] = Field(None, alias="paymentMethodType")
    __properties = ["creditCardExpirationMonth", "creditCardExpirationYear", "creditCardNumber", "creditCardType", "id", "paymentMethodType"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> AccountSummaryDefaultPaymentMethod:
        """Create an instance of AccountSummaryDefaultPaymentMethod from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> AccountSummaryDefaultPaymentMethod:
        """Create an instance of AccountSummaryDefaultPaymentMethod from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return AccountSummaryDefaultPaymentMethod.parse_obj(obj)

        _obj = AccountSummaryDefaultPaymentMethod.parse_obj({
            "credit_card_expiration_month": obj.get("creditCardExpirationMonth"),
            "credit_card_expiration_year": obj.get("creditCardExpirationYear"),
            "credit_card_number": obj.get("creditCardNumber"),
            "credit_card_type": obj.get("creditCardType"),
            "id": obj.get("id"),
            "payment_method_type": obj.get("paymentMethodType")
        })
        return _obj


