# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.order_ramp_metrics import OrderRampMetrics  # noqa: E501

class TestOrderRampMetrics(unittest.TestCase):
    """OrderRampMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderRampMetrics:
        """Test OrderRampMetrics
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderRampMetrics`
        """
        model = OrderRampMetrics()  # noqa: E501
        if include_optional:
            return OrderRampMetrics(
                description = '',
                discount_tcb = 1.337,
                discount_tcv = 1.337,
                gross_tcb = 1.337,
                gross_tcv = 1.337,
                intervals = [
                    com.zuora.models.ramp_interval_metrics.RampIntervalMetrics(
                        description = '', 
                        discount_tcb = 1.337, 
                        discount_tcv = 1.337, 
                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        gross_tcb = 1.337, 
                        gross_tcv = 1.337, 
                        interval_delta_metrics = [
                            com.zuora.models.interval_delta_metrics.intervalDeltaMetrics(
                                charge_number = '', 
                                delta_discount_tcb = 1.337, 
                                delta_discount_tcv = 1.337, 
                                delta_gross_tcb = 1.337, 
                                delta_gross_tcv = 1.337, 
                                delta_mrr = [
                                    com.zuora.models.ramp_interval_charge_delta_metrics_delta_mrr_inner.RampIntervalChargeDeltaMetrics_deltaMrr_inner(
                                        discount = 1.337, 
                                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        gross = 1.337, 
                                        net = 1.337, 
                                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                    ], 
                                delta_net_tcb = 1.337, 
                                delta_net_tcv = 1.337, 
                                delta_quantity = [
                                    com.zuora.models.ramp_interval_charge_delta_metrics_delta_quantity_inner.RampIntervalChargeDeltaMetrics_deltaQuantity_inner(
                                        amount = 1.337, 
                                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                    ], 
                                product_rate_plan_charge_id = '', 
                                subscription_number = '', )
                            ], 
                        interval_metrics = [
                            com.zuora.models.interval_metrics.intervalMetrics(
                                charge_number = '', 
                                discount_tcb = 1.337, 
                                discount_tcv = 1.337, 
                                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                gross_tcb = 1.337, 
                                gross_tcv = 1.337, 
                                mrr = [
                                    com.zuora.models.ramp_interval_charge_metrics_mrr_inner.RampIntervalChargeMetrics_mrr_inner(
                                        discount = 1.337, 
                                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        gross = 1.337, 
                                        net = 1.337, 
                                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                    ], 
                                net_tcb = 1.337, 
                                net_tcv = 1.337, 
                                product_rate_plan_charge_id = '', 
                                quantity = 1.337, 
                                rate_plan_charge_id = '', 
                                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                subscription_number = '', )
                            ], 
                        name = '', 
                        net_tcb = 1.337, 
                        net_tcv = 1.337, 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
                name = '',
                net_tcb = 1.337,
                net_tcv = 1.337,
                number = ''
            )
        else:
            return OrderRampMetrics(
        )
        """

    def testOrderRampMetrics(self):
        """Test OrderRampMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
