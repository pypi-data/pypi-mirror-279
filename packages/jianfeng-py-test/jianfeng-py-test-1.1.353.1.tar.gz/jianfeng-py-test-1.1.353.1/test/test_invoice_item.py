# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from com.zuora.models.invoice_item import InvoiceItem  # noqa: E501

class TestInvoiceItem(unittest.TestCase):
    """InvoiceItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvoiceItem:
        """Test InvoiceItem
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvoiceItem`
        """
        model = InvoiceItem()  # noqa: E501
        if include_optional:
            return InvoiceItem(
                integration_id__ns = '',
                integration_status__ns = '',
                sync_date__ns = '',
                accounting_code = '',
                adjustment_liability_accounting_code = '',
                adjustment_revenue_accounting_code = '',
                applied_to_item_id = '',
                available_to_credit_amount = 1,
                balance = '',
                booking_reference = '',
                charge_amount = '',
                charge_date = '',
                charge_description = '',
                charge_id = '',
                charge_name = '',
                charge_type = 'OneTime',
                contract_asset_accounting_code = '',
                contract_liability_accounting_code = '',
                contract_recognized_revenue_accounting_code = '',
                deferred_revenue_accounting_code = '',
                description = '',
                exclude_item_billing_from_revenue_accounting = True,
                id = '',
                invoice_schedule_id = '',
                invoice_schedule_item_id = '',
                item_type = '',
                processing_type = 'Charge',
                product_name = '',
                product_rate_plan_charge_id = '',
                purchase_order_number = '',
                quantity = 1.337,
                recognized_revenue_accounting_code = '',
                rev_rec_code = '',
                rev_rec_trigger_condition = 'ContractEffectiveDate',
                revenue_recognition_rule_name = '',
                service_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                service_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                sku = '',
                sold_to_contact_id = '',
                sold_to_contact_snapshot_id = '',
                source_item_type = 'SubscriptionComponent',
                subscription_id = '',
                subscription_name = '',
                tax_amount = '',
                tax_code = '',
                tax_mode = 'TaxInclusive',
                taxation_items = com.zuora.models.taxation_items_data.TaxationItemsData(
                    data = [
                        com.zuora.models.data.data(
                            available_to_credit_amount = 1, 
                            balance = 1.337, 
                            credit_amount = 1.337, 
                            exempt_amount = 1.337, 
                            id = '', 
                            jurisdiction = '', 
                            location_code = '', 
                            name = '', 
                            payment_amount = 1.337, 
                            tax_amount = 1.337, 
                            tax_code = '', 
                            tax_code_description = '', 
                            tax_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            tax_rate = 1.337, 
                            tax_rate_description = '', 
                            tax_rate_type = 'Percentage', )
                        ], 
                    next_page = '', ),
                unbilled_receivables_accounting_code = '',
                unit_of_measure = '',
                unit_price = 1.337,
                number_of_deliveries = 1.337,
                reflect_discount_in_net_amount = True
            )
        else:
            return InvoiceItem(
        )
        """

    def testInvoiceItem(self):
        """Test InvoiceItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
