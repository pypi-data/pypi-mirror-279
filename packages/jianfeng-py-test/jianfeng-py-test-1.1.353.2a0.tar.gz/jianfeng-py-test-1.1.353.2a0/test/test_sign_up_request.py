# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.sign_up_request import SignUpRequest

class TestSignUpRequest(unittest.TestCase):
    """SignUpRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SignUpRequest:
        """Test SignUpRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SignUpRequest`
        """
        model = SignUpRequest()
        if include_optional:
            return SignUpRequest(
                account_data = zuora_sdk.models.account_data.AccountData(
                    account_number = '', 
                    auto_pay = True, 
                    batch = '', 
                    bill_cycle_day = 0, 
                    bill_to_contact = null, 
                    communication_profile_id = '', 
                    credit_memo_template_id = '', 
                    crm_id = '', 
                    currency = '', 
                    custom_fields = {
                        'key' : None
                        }, 
                    debit_memo_template_id = '', 
                    invoice_template_id = '', 
                    name = '', 
                    notes = '', 
                    payment_method = null, 
                    payment_term = '', 
                    purchase_order_number = '', 
                    sequence_set_id = '', 
                    sold_to_contact = null, 
                    tax_info = zuora_sdk.models.tax_info.taxInfo(
                        vatid = '', 
                        company_code = '', 
                        exempt_certificate_id = '', 
                        exempt_certificate_type = '', 
                        exempt_description = '', 
                        exempt_effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        exempt_expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        exempt_issuing_jurisdiction = '', 
                        exempt_status = 'No', ), ),
                account_identifier_field = '',
                custom_fields = {
                    'key' : None
                    },
                options = zuora_sdk.models.options.Options(
                    billing_target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    collect_payment = True, 
                    max_subscriptions_per_account = 1.337, 
                    run_billing = True, ),
                payment_data = zuora_sdk.models.payment_data.PaymentData(
                    auth_transaction_id = '', 
                    authorized_amount = 1.337, 
                    authorized_currency = '', ),
                subscription_data = zuora_sdk.models.subscription_data.SubscriptionData(
                    custom_fields = {
                        'key' : None
                        }, 
                    invoice_separately = True, 
                    notes = '', 
                    rate_plans = [
                        zuora_sdk.models.rate_plan.RatePlan(
                            custom_fields = {
                                'key' : None
                                }, 
                            product_rate_plan_id = '', )
                        ], 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    subscription_number = '', 
                    terms = zuora_sdk.models.term_info.TermInfo(
                        auto_renew = True, 
                        initial_term = {"period":2,"periodType":"Month","startDate":"2000-01-23","termType":"TERMED"}, 
                        renewal_setting = 'RENEW_WITH_SPECIFIC_TERM', 
                        renewal_terms = {"period":6,"periodType":"Month"}, ), )
            )
        else:
            return SignUpRequest(
        )
        """

    def testSignUpRequest(self):
        """Test SignUpRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
