# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.create_order_response_subscriptions import CreateOrderResponseSubscriptions

class TestCreateOrderResponseSubscriptions(unittest.TestCase):
    """CreateOrderResponseSubscriptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateOrderResponseSubscriptions:
        """Test CreateOrderResponseSubscriptions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateOrderResponseSubscriptions`
        """
        model = CreateOrderResponseSubscriptions()
        if include_optional:
            return CreateOrderResponseSubscriptions(
                status = 'Active',
                subscription_id = '',
                subscription_number = '',
                subscription_owner_id = '',
                subscription_owner_number = '',
                order_actions = [
                    zuora_sdk.models.create_order_response_order_action.CreateOrderResponseOrderAction(
                        id = '', 
                        type = 'CreateSubscription', 
                        order_metrics = [
                            zuora_sdk.models.create_order_response_order_metric.CreateOrderResponseOrderMetric(
                                charge_number = '', 
                                mrr = [
                                    {"amount":3.0937452626664474,"discountChargeNumber":"discountChargeNumber","endDate":"2000-01-23","generatedReason":"IncreaseQuantity","invoiceOwner":"invoiceOwner","orderItemId":"orderItemId","startDate":"2000-01-23","subscriptionOwner":"subscriptionOwner","termNumber":7.143538047012306,"type":"Regular"}
                                    ], 
                                quantity = [
                                    {"amount":0.8851374739011653,"endDate":"2000-01-23","generatedReason":"IncreaseQuantity","invoiceOwner":"invoiceOwner","orderItemId":"orderItemId","startDate":"2000-01-23","subscriptionOwner":"subscriptionOwner","termNumber":7.058770351582356}
                                    ], 
                                tcb = [
                                    {"amount":6.519180951018382,"discountChargeNumber":"discountChargeNumber","endDate":"2000-01-23","generatedReason":"IncreaseQuantity","invoiceOwner":"invoiceOwner","orderItemId":"orderItemId","startDate":"2000-01-23","subscriptionOwner":"subscriptionOwner","tax":0.10263654006109402,"termNumber":4.652396432933246,"type":"Regular"}
                                    ], 
                                tcv = [
                                    {"amount":3.0937452626664474,"discountChargeNumber":"discountChargeNumber","endDate":"2000-01-23","generatedReason":"IncreaseQuantity","invoiceOwner":"invoiceOwner","orderItemId":"orderItemId","startDate":"2000-01-23","subscriptionOwner":"subscriptionOwner","termNumber":7.143538047012306,"type":"Regular"}
                                    ], )
                            ], )
                    ]
            )
        else:
            return CreateOrderResponseSubscriptions(
        )
        """

    def testCreateOrderResponseSubscriptions(self):
        """Test CreateOrderResponseSubscriptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
