# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.create_authorization_request import CreateAuthorizationRequest

class TestCreateAuthorizationRequest(unittest.TestCase):
    """CreateAuthorizationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAuthorizationRequest:
        """Test CreateAuthorizationRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAuthorizationRequest`
        """
        model = CreateAuthorizationRequest()
        if include_optional:
            return CreateAuthorizationRequest(
                account_id = '',
                account_number = '',
                amount = 1.337,
                gateway_options = zuora_sdk.models.gateway_options.GatewayOptions(
                    key = '', 
                    value = '', ),
                gateway_order_id = '',
                mit_transaction_source = 'C_Unscheduled',
                payment_gateway_id = '',
                soft_descriptor = '',
                soft_descriptor_phone = ''
            )
        else:
            return CreateAuthorizationRequest(
                amount = 1.337,
                gateway_order_id = '',
        )
        """

    def testCreateAuthorizationRequest(self):
        """Test CreateAuthorizationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
