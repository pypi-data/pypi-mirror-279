# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.debit_memo_item_from_invoice_item_request import DebitMemoItemFromInvoiceItemRequest

class TestDebitMemoItemFromInvoiceItemRequest(unittest.TestCase):
    """DebitMemoItemFromInvoiceItemRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DebitMemoItemFromInvoiceItemRequest:
        """Test DebitMemoItemFromInvoiceItemRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DebitMemoItemFromInvoiceItemRequest`
        """
        model = DebitMemoItemFromInvoiceItemRequest()
        if include_optional:
            return DebitMemoItemFromInvoiceItemRequest(
                amount = 1.337,
                comment = '',
                description = '',
                finance_information = zuora_sdk.models.debit_memo_item_from_invoice_item_finance_information.DebitMemoItemFromInvoiceItemFinanceInformation(
                    deferred_revenue_accounting_code = '', 
                    recognized_revenue_accounting_code = '', 
                    revenue_recognition_rule_name = '', ),
                invoice_item_id = '',
                quantity = 1.337,
                service_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                service_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                sku_name = '',
                tax_items = [
                    zuora_sdk.models.tax_items.taxItems(
                        amount = 1.337, 
                        finance_information = zuora_sdk.models.debit_memo_tax_item_from_invoice_tax_item_finance_information.DebitMemoTaxItemFromInvoiceTaxItemFinanceInformation(
                            sales_tax_payable_accounting_code = '', ), 
                        jurisdiction = '', 
                        location_code = '', 
                        source_tax_item_id = '', 
                        tax_code = '', 
                        tax_code_description = '', 
                        tax_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        tax_exempt_amount = 1.337, 
                        tax_name = '', 
                        tax_rate = 1.337, 
                        tax_rate_description = '', 
                        tax_rate_type = 'Percentage', )
                    ],
                tax_mode = 'TaxInclusive',
                unit_of_measure = '',
                exclude_item_billing_from_revenue_accounting = True
            )
        else:
            return DebitMemoItemFromInvoiceItemRequest(
                amount = 1.337,
                sku_name = '',
        )
        """

    def testDebitMemoItemFromInvoiceItemRequest(self):
        """Test DebitMemoItemFromInvoiceItemRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
