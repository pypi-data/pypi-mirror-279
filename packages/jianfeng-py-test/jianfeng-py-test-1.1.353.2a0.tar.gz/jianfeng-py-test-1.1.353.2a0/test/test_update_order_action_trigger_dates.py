# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.update_order_action_trigger_dates import UpdateOrderActionTriggerDates

class TestUpdateOrderActionTriggerDates(unittest.TestCase):
    """UpdateOrderActionTriggerDates unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateOrderActionTriggerDates:
        """Test UpdateOrderActionTriggerDates
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateOrderActionTriggerDates`
        """
        model = UpdateOrderActionTriggerDates()
        if include_optional:
            return UpdateOrderActionTriggerDates(
                charges = [
                    zuora_sdk.models.update_order_action_charge_trigger_date.UpdateOrderActionChargeTriggerDate(
                        charge_number = '', 
                        specific_trigger_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
                sequence = 56,
                trigger_dates = [
                    zuora_sdk.models.update_order_action_trigger_date.UpdateOrderActionTriggerDate(
                        name = 'ServiceActivation', 
                        trigger_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ]
            )
        else:
            return UpdateOrderActionTriggerDates(
                sequence = 56,
        )
        """

    def testUpdateOrderActionTriggerDates(self):
        """Test UpdateOrderActionTriggerDates"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
