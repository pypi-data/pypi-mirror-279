# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.setting_component_key_value import SettingComponentKeyValue

class TestSettingComponentKeyValue(unittest.TestCase):
    """SettingComponentKeyValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SettingComponentKeyValue:
        """Test SettingComponentKeyValue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SettingComponentKeyValue`
        """
        model = SettingComponentKeyValue()
        if include_optional:
            return SettingComponentKeyValue(
                errors = [
                    ''
                    ],
                original_payload = zuora_sdk.models.json_node.JsonNode(),
                response = [
                    {"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}
                    ],
                segregation_keys = [
                    ''
                    ]
            )
        else:
            return SettingComponentKeyValue(
        )
        """

    def testSettingComponentKeyValue(self):
        """Test SettingComponentKeyValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
