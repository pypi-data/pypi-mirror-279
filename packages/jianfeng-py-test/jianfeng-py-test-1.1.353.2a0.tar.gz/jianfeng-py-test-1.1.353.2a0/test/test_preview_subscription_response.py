# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.preview_subscription_response import PreviewSubscriptionResponse

class TestPreviewSubscriptionResponse(unittest.TestCase):
    """PreviewSubscriptionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PreviewSubscriptionResponse:
        """Test PreviewSubscriptionResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PreviewSubscriptionResponse`
        """
        model = PreviewSubscriptionResponse()
        if include_optional:
            return PreviewSubscriptionResponse(
                amount = 1.337,
                amount_without_tax = 1.337,
                charge_metrics = [
                    {"originRatePlanId":"originRatePlanId","productRatePlanChargeId":"productRatePlanChargeId","number":"number","productRatePlanId":"productRatePlanId","dmrr":"dmrr","tcv":"tcv","originalId":"originalId","dtcv":"dtcv","mrr":"mrr"}
                    ],
                contracted_mrr = 1.337,
                credit_memo = {"amountWithoutTax":5.637376656633329,"amount":5.962133916683182,"taxAmount":1.2315135367772556,"creditMemoItems":[{"amountWithoutTax":2.3021358869347655,"productRatePlanChargeId":"productRatePlanChargeId","taxationItems":[{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"},{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"}],"quantity":9,"serviceStartDate":"2000-01-23","unitOfMeasure":"unitOfMeasure","chargeAmount":7.061401241503109,"chargeName":"chargeName","taxAmount":3.616076749251911,"productName":"productName","serviceEndDate":"2000-01-23","chargeDescription":"chargeDescription"},{"amountWithoutTax":2.3021358869347655,"productRatePlanChargeId":"productRatePlanChargeId","taxationItems":[{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"},{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"}],"quantity":9,"serviceStartDate":"2000-01-23","unitOfMeasure":"unitOfMeasure","chargeAmount":7.061401241503109,"chargeName":"chargeName","taxAmount":3.616076749251911,"productName":"productName","serviceEndDate":"2000-01-23","chargeDescription":"chargeDescription"}]},
                document_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                invoice = {"amountWithoutTax":1.4894159098541704,"amount":1.0246457001441578,"invoiceItems":[{"productRatePlanChargeId":"productRatePlanChargeId","taxationItems":[{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"},{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"}],"quantity":7.457744773683766,"serviceStartDate":"2000-01-23","unitOfMeasure":"unitOfMeasure","chargeAmount":6.84685269835264,"chargeName":"chargeName","taxAmount":1.1730742509559433,"productName":"productName","serviceEndDate":"2000-01-23","chargeDescription":"chargeDescription"},{"productRatePlanChargeId":"productRatePlanChargeId","taxationItems":[{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"},{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"}],"quantity":7.457744773683766,"serviceStartDate":"2000-01-23","unitOfMeasure":"unitOfMeasure","chargeAmount":6.84685269835264,"chargeName":"chargeName","taxAmount":1.1730742509559433,"productName":"productName","serviceEndDate":"2000-01-23","chargeDescription":"chargeDescription"}],"targetDate":"targetDate","taxAmount":4.965218492984954},
                invoice_items = [
                    {"productRatePlanChargeId":"productRatePlanChargeId","taxationItems":[{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"},{"taxRate":7.386281948385884,"taxCodeDescription":"taxCodeDescription","jurisdiction":"jurisdiction","name":"name","taxRateType":"Percentage","exemptAmount":2.027123023002322,"locationCode":"locationCode","taxAmount":4.145608029883936,"taxCode":"taxCode","taxRateDescription":"taxRateDescription","taxDate":"taxDate"}],"quantity":7.457744773683766,"serviceStartDate":"2000-01-23","unitOfMeasure":"unitOfMeasure","chargeAmount":6.84685269835264,"chargeName":"chargeName","taxAmount":1.1730742509559433,"productName":"productName","serviceEndDate":"2000-01-23","chargeDescription":"chargeDescription"}
                    ],
                invoice_target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                success = True,
                target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                tax_amount = 1.337,
                total_contracted_value = 1.337
            )
        else:
            return PreviewSubscriptionResponse(
        )
        """

    def testPreviewSubscriptionResponse(self):
        """Test PreviewSubscriptionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
