# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.processing_options_with_delayed_capture_payment import ProcessingOptionsWithDelayedCapturePayment

class TestProcessingOptionsWithDelayedCapturePayment(unittest.TestCase):
    """ProcessingOptionsWithDelayedCapturePayment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProcessingOptionsWithDelayedCapturePayment:
        """Test ProcessingOptionsWithDelayedCapturePayment
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProcessingOptionsWithDelayedCapturePayment`
        """
        model = ProcessingOptionsWithDelayedCapturePayment()
        if include_optional:
            return ProcessingOptionsWithDelayedCapturePayment(
                application_order = [
                    ''
                    ],
                apply_credit = True,
                apply_credit_balance = True,
                billing_options = zuora_sdk.models.billing_options.BillingOptions(
                    credit_memo_reason_code = '', 
                    document_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    generate_draft_invoice = True, 
                    target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                collect_payment = True,
                electronic_payment_options = zuora_sdk.models.electronic_payment_options_with_delayed_capture_payment.ElectronicPaymentOptionsWithDelayedCapturePayment(
                    payment_gateway_id = '', 
                    payment_method_id = '', 
                    auth_transaction_id = '', 
                    gateway_order_id = '', ),
                refund = True,
                refund_amount = 1.337,
                refund_reason_code = '',
                run_billing = True,
                write_off = True,
                write_off_behavior = zuora_sdk.models.write_off_behavior.WriteOffBehavior(
                    finance_information = zuora_sdk.models.write_off_behavior_finance_information.WriteOffBehaviorFinanceInformation(
                        deferred_revenue_accounting_code = '', 
                        on_account_accounting_code = '', 
                        recognized_revenue_accounting_code = '', 
                        revenue_recognition_rule_name = '', ), )
            )
        else:
            return ProcessingOptionsWithDelayedCapturePayment(
        )
        """

    def testProcessingOptionsWithDelayedCapturePayment(self):
        """Test ProcessingOptionsWithDelayedCapturePayment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
