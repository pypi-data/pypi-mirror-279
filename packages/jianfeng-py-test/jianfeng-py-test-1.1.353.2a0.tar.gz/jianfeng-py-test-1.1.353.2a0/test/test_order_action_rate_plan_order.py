# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.order_action_rate_plan_order import OrderActionRatePlanOrder

class TestOrderActionRatePlanOrder(unittest.TestCase):
    """OrderActionRatePlanOrder unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderActionRatePlanOrder:
        """Test OrderActionRatePlanOrder
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderActionRatePlanOrder`
        """
        model = OrderActionRatePlanOrder()
        if include_optional:
            return OrderActionRatePlanOrder(
                id = '',
                order_actions = [
                    zuora_sdk.models.order_action_rate_plan_order_action.OrderActionRatePlanOrderAction(
                        add_product = zuora_sdk.models.rate_plan.ratePlan(
                            charge_overrides = [
                                zuora_sdk.models.charge.charge(
                                    billing = {"billCycleDay":27,"billCycleType":"DefaultFromCustomer","billingPeriod":"Month","billingPeriodAlignment":"AlignToCharge","billingTiming":"IN_ADVANCE","specificBillingPeriod":6,"weeklyBillCycleDay":"Sunday"}, 
                                    charge_number = '', 
                                    custom_fields = {
                                        'key' : None
                                        }, 
                                    description = '', 
                                    end_date = {"endDateCondition":"Subscription_End","specificEndDate":"2000-01-23","upToPeriods":7,"upToPeriodsType":"Billing_Periods"}, 
                                    pricing = zuora_sdk.models.rate_plan_charge_override_pricing.RatePlanChargeOverridePricing(
                                        charge_model_data = zuora_sdk.models.charge_model_data.chargeModelData(
                                            charge_model_configuration = zuora_sdk.models.charge_model_configuration.chargeModelConfiguration(
                                                custom_field_per_unit_rate = '', 
                                                custom_field_total_amount = '', 
                                                formula = '', ), 
                                            tiers = [
                                                {"endingUnit":2.027123023002322,"price":4.145608029883936,"priceFormat":"FlatFee","startingUnit":7.386281948385884,"tier":1}
                                                ], ), 
                                        discount = {"applyDiscountTo":"ONETIME","discountAmount":1.0246457001441578,"discountLevel":"rateplan","discountPercentage":1.4894159098541704,"priceChangeOption":"NoChange"}, 
                                        one_time_flat_fee = {"listPrice":6.84685269835264}, 
                                        one_time_per_unit = {"quantity":0.11730742509559433,"listPrice":7.457744773683766}, 
                                        one_time_tiered = {"tiers":[{"priceFormat":"FlatFee","tier":1,"endingUnit":2.027123023002322,"price":4.145608029883936,"startingUnit":7.386281948385884},{"priceFormat":"FlatFee","tier":1,"endingUnit":2.027123023002322,"price":4.145608029883936,"startingUnit":7.386281948385884}],"quantity":0.4965218492984954}, 
                                        one_time_volume = {"tiers":[{"priceFormat":"FlatFee","tier":1,"endingUnit":2.027123023002322,"price":4.145608029883936,"startingUnit":7.386281948385884},{"priceFormat":"FlatFee","tier":1,"endingUnit":2.027123023002322,"price":4.145608029883936,"startingUnit":7.386281948385884}],"quantity":0.5025004791520294}, 
                                        recurring_delivery = null, 
                                        recurring_flat_fee = null, 
                                        recurring_per_unit = null, 
                                        recurring_tiered = null, 
                                        recurring_volume = null, 
                                        usage_flat_fee = null, 
                                        usage_overage = null, 
                                        usage_per_unit = null, 
                                        usage_tiered = null, 
                                        usage_tiered_with_overage = null, 
                                        usage_volume = null, ), 
                                    product_rate_plan_charge_id = '', 
                                    rev_rec_code = '', 
                                    rev_rec_trigger_condition = 'Contract Effective Date', 
                                    revenue_recognition_rule_name = 'Recognize upon invoicing', 
                                    start_date = {"specificTriggerDate":"2000-01-23","triggerEvent":"ContractEffective"}, 
                                    unique_token = '', )
                                ], 
                            custom_fields = {
                                'key' : None
                                }, 
                            new_rate_plan_id = '', 
                            product_rate_plan_id = '', 
                            unique_token = '', ), 
                        custom_fields = {
                            'key' : None
                            }, 
                        id = '', 
                        remove_product = zuora_sdk.models.remove_product.removeProduct(
                            rate_plan_id = '', 
                            unique_token = '', ), 
                        type = 'AddProduct', 
                        update_product = zuora_sdk.models.update_product.updateProduct(
                            charge_updates = [
                                zuora_sdk.models.order_action_rate_plan_charge_update.OrderActionRatePlanChargeUpdate(
                                    charge_number = '', 
                                    custom_fields = {
                                        'key' : None
                                        }, 
                                    description = '', 
                                    effective_date = {"specificTriggerDate":"2000-01-23","triggerEvent":"ContractEffective"}, 
                                    unique_token = '', )
                                ], 
                            custom_fields = {
                                'key' : None
                                }, 
                            new_rate_plan_id = '', 
                            rate_plan_id = '', 
                            specific_update_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            unique_token = '', ), )
                    ],
                order_number = ''
            )
        else:
            return OrderActionRatePlanOrder(
        )
        """

    def testOrderActionRatePlanOrder(self):
        """Test OrderActionRatePlanOrder"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
