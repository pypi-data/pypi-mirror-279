# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.create_batch_query_job_response import CreateBatchQueryJobResponse

class TestCreateBatchQueryJobResponse(unittest.TestCase):
    """CreateBatchQueryJobResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateBatchQueryJobResponse:
        """Test CreateBatchQueryJobResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateBatchQueryJobResponse`
        """
        model = CreateBatchQueryJobResponse()
        if include_optional:
            return CreateBatchQueryJobResponse(
                batches = [
                    zuora_sdk.models.batch.batch(
                        api_version = '', 
                        batch_id = '', 
                        batch_type = 'zoql', 
                        deleted = zuora_sdk.models.deleted_record.deletedRecord(
                            column = '', 
                            format = '', ), 
                        full = True, 
                        name = '', 
                        query = '', 
                        record_count = '', 
                        localized_status = 'submitted', 
                        status = 'submitted', )
                    ],
                error_code = '',
                message = '',
                encrypted = 'pgp',
                format = 'CSV',
                id = '',
                name = '',
                notify_url = '',
                offset = 1.337,
                partner = '',
                project = '',
                status = 'submitted',
                localized_status = 'submitted',
                use_last_completed_job_queries = True,
                version = 1.337
            )
        else:
            return CreateBatchQueryJobResponse(
        )
        """

    def testCreateBatchQueryJobResponse(self):
        """Test CreateBatchQueryJobResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
