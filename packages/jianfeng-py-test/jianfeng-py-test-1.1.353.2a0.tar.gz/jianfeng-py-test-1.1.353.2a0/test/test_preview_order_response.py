# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.preview_order_response import PreviewOrderResponse

class TestPreviewOrderResponse(unittest.TestCase):
    """PreviewOrderResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PreviewOrderResponse:
        """Test PreviewOrderResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PreviewOrderResponse`
        """
        model = PreviewOrderResponse()
        if include_optional:
            return PreviewOrderResponse(
                process_id = '',
                request_id = '',
                reasons = [
                    {"code":"code","message":"message"}
                    ],
                success = True,
                preview_result = zuora_sdk.models.preview_order_result.PreviewOrderResult(
                    charge_metrics = [
                        zuora_sdk.models.preview_order_result_charge_metrics.PreviewOrderResultChargeMetrics(
                            charges = [
                                zuora_sdk.models.preview_charge_metrics.PreviewChargeMetrics(
                                    charge_number = '', 
                                    cmrr = zuora_sdk.models.preview_charge_metrics_cmrr.PreviewChargeMetricsCmrr(
                                        discount = 1.337, 
                                        discount_delta = 1.337, 
                                        regular = 1.337, 
                                        regular_delta = 1.337, ), 
                                    origin_rate_plan_id = '', 
                                    product_rate_plan_charge_id = '', 
                                    product_rate_plan_id = '', 
                                    subscription_rate_plan_number = '', 
                                    tax = zuora_sdk.models.preview_charge_metrics_tax.PreviewChargeMetricsTax(
                                        discount = 1.337, 
                                        discount_delta = 1.337, 
                                        regular = 1.337, 
                                        regular_delta = 1.337, ), 
                                    tcb = zuora_sdk.models.preview_charge_metrics_tcb.PreviewChargeMetricsTcb(
                                        discount = 1.337, 
                                        discount_delta = 1.337, 
                                        regular = 1.337, 
                                        regular_delta = 1.337, ), 
                                    tcv = zuora_sdk.models.preview_charge_metrics_tcv.PreviewChargeMetricsTcv(
                                        discount = 1.337, 
                                        discount_delta = 1.337, 
                                        regular = 1.337, 
                                        regular_delta = 1.337, ), )
                                ], 
                            subscription_number = '', )
                        ], 
                    credit_memos = [
                        zuora_sdk.models.preview_order_result_credit_memos.PreviewOrderResultCreditMemos(
                            amount = 1.337, 
                            amount_without_tax = 1.337, 
                            credit_memo_items = [
                                zuora_sdk.models.invoice_item_preview_result.InvoiceItemPreviewResult(
                                    additional_info = zuora_sdk.models.invoice_item_preview_result_additional_info.InvoiceItemPreviewResultAdditionalInfo(
                                        quantity = 1.337, 
                                        unit_of_measure = '', 
                                        number_of_deliveries = 1.337, ), 
                                    amount_without_tax = 1.337, 
                                    applied_to_charge_number = '', 
                                    charge_description = '', 
                                    charge_name = '', 
                                    charge_number = '', 
                                    order_line_item_number = '', 
                                    processing_type = 'Charge', 
                                    product_name = '', 
                                    product_rate_plan_charge_id = '', 
                                    service_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    service_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    subscription_number = '', 
                                    tax_amount = 1.337, 
                                    taxation_items = [
                                        zuora_sdk.models.invoice_item_preview_result_taxation_items.InvoiceItemPreviewResultTaxationItems(
                                            exempt_amount = 1.337, 
                                            id = '', 
                                            jurisdiction = '', 
                                            location_code = '', 
                                            name = '', 
                                            tax_amount = 1.337, 
                                            tax_code = '', 
                                            tax_code_description = '', 
                                            tax_date = '', 
                                            tax_rate = 1.337, 
                                            tax_rate_description = '', 
                                            tax_rate_type = 'Percentage', )
                                        ], 
                                    unit_price = 1.337, )
                                ], 
                            target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            tax_amount = 1.337, )
                        ], 
                    invoices = [
                        zuora_sdk.models.preview_order_result_invoices.PreviewOrderResultInvoices(
                            amount = 1.337, 
                            amount_without_tax = 1.337, 
                            invoice_items = [
                                zuora_sdk.models.invoice_item_preview_result.InvoiceItemPreviewResult(
                                    amount_without_tax = 1.337, 
                                    applied_to_charge_number = '', 
                                    charge_description = '', 
                                    charge_name = '', 
                                    charge_number = '', 
                                    order_line_item_number = '', 
                                    product_name = '', 
                                    product_rate_plan_charge_id = '', 
                                    service_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    service_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    subscription_number = '', 
                                    tax_amount = 1.337, 
                                    unit_price = 1.337, )
                                ], 
                            target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            tax_amount = 1.337, )
                        ], 
                    order_delta_metrics = zuora_sdk.models.preview_order_result_delta_metrics.PreviewOrderResultDeltaMetrics(
                        order_delta_mrr = [
                            null
                            ], 
                        order_delta_tcb = [
                            null
                            ], 
                        order_delta_tcv = [
                            null
                            ], ), 
                    order_metrics = [
                        zuora_sdk.models.preview_result_order_metrics_inner.PreviewResult_orderMetrics_inner(
                            order_actions = [
                                zuora_sdk.models.preview_result_order_metrics_inner_order_actions_inner.PreviewResult_orderMetrics_inner_orderActions_inner(
                                    order_items = [
                                        {"quantity":6.878052220127876,"endDate":"2000-01-23","orderActionId":"orderActionId","id":"id","scId":"scId","startDate":"2000-01-23"}
                                        ], 
                                    sequence = '', 
                                    type = '', )
                                ], 
                            subscription_number = '', )
                        ], 
                    ramp_metrics = [
                        zuora_sdk.models.ramp_metrics.RampMetrics(
                            description = '', 
                            discount_tcb = 1.337, 
                            discount_tcv = 1.337, 
                            gross_tcb = 1.337, 
                            gross_tcv = 1.337, 
                            intervals = [
                                zuora_sdk.models.ramp_interval_metrics.RampIntervalMetrics(
                                    description = '', 
                                    discount_tcb = 1.337, 
                                    discount_tcv = 1.337, 
                                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    gross_tcb = 1.337, 
                                    gross_tcv = 1.337, 
                                    interval_delta_metrics = [
                                        zuora_sdk.models.interval_delta_metrics.intervalDeltaMetrics(
                                            charge_number = '', 
                                            delta_discount_tcb = 1.337, 
                                            delta_discount_tcv = 1.337, 
                                            delta_gross_tcb = 1.337, 
                                            delta_gross_tcv = 1.337, 
                                            delta_mrr = [
                                                zuora_sdk.models.ramp_interval_charge_delta_metrics_delta_mrr_inner.RampIntervalChargeDeltaMetrics_deltaMrr_inner(
                                                    discount = 1.337, 
                                                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                                    gross = 1.337, 
                                                    net = 1.337, 
                                                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                                ], 
                                            delta_net_tcb = 1.337, 
                                            delta_net_tcv = 1.337, 
                                            delta_quantity = [
                                                zuora_sdk.models.ramp_interval_charge_delta_metrics_delta_quantity_inner.RampIntervalChargeDeltaMetrics_deltaQuantity_inner(
                                                    amount = 1.337, 
                                                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                                ], 
                                            product_rate_plan_charge_id = '', 
                                            subscription_number = '', )
                                        ], 
                                    interval_metrics = [
                                        zuora_sdk.models.interval_metrics.intervalMetrics(
                                            charge_number = '', 
                                            discount_tcb = 1.337, 
                                            discount_tcv = 1.337, 
                                            end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                            gross_tcb = 1.337, 
                                            gross_tcv = 1.337, 
                                            mrr = [
                                                zuora_sdk.models.ramp_interval_charge_metrics_mrr_inner.RampIntervalChargeMetrics_mrr_inner(
                                                    discount = 1.337, 
                                                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                                    gross = 1.337, 
                                                    net = 1.337, 
                                                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                                ], 
                                            net_tcb = 1.337, 
                                            net_tcv = 1.337, 
                                            product_rate_plan_charge_id = '', 
                                            quantity = 1.337, 
                                            rate_plan_charge_id = '', 
                                            start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                            subscription_number = '', )
                                        ], 
                                    name = '', 
                                    net_tcb = 1.337, 
                                    net_tcv = 1.337, 
                                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                ], 
                            name = '', 
                            net_tcb = 1.337, 
                            net_tcv = 1.337, 
                            number = '', )
                        ], )
            )
        else:
            return PreviewOrderResponse(
        )
        """

    def testPreviewOrderResponse(self):
        """Test PreviewOrderResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
