# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.create_billing_preview_invoice_item import CreateBillingPreviewInvoiceItem

class TestCreateBillingPreviewInvoiceItem(unittest.TestCase):
    """CreateBillingPreviewInvoiceItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateBillingPreviewInvoiceItem:
        """Test CreateBillingPreviewInvoiceItem
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateBillingPreviewInvoiceItem`
        """
        model = CreateBillingPreviewInvoiceItem()
        if include_optional:
            return CreateBillingPreviewInvoiceItem(
                applied_to_item_id = '',
                charge_amount = '',
                charge_date = '',
                charge_description = '',
                charge_id = '',
                charge_name = '',
                charge_number = '',
                charge_type = '',
                id = '',
                number_of_deliveries = '',
                processing_type = '',
                product_name = '',
                quantity = '',
                service_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                service_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                subscription_id = '',
                subscription_name = '',
                subscription_number = '',
                tax_amount = '',
                unit_of_measure = ''
            )
        else:
            return CreateBillingPreviewInvoiceItem(
        )
        """

    def testCreateBillingPreviewInvoiceItem(self):
        """Test CreateBillingPreviewInvoiceItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
