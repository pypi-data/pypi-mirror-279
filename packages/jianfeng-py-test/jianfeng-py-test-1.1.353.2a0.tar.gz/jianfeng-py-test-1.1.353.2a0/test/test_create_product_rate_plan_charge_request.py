# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.create_product_rate_plan_charge_request import CreateProductRatePlanChargeRequest

class TestCreateProductRatePlanChargeRequest(unittest.TestCase):
    """CreateProductRatePlanChargeRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateProductRatePlanChargeRequest:
        """Test CreateProductRatePlanChargeRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateProductRatePlanChargeRequest`
        """
        model = CreateProductRatePlanChargeRequest()
        if include_optional:
            return CreateProductRatePlanChargeRequest(
                class__ns = '',
                deferred_rev_account__ns = '',
                department__ns = '',
                include_children__ns = 'Yes',
                integration_id__ns = '',
                integration_status__ns = '',
                item_type__ns = 'Inventory',
                location__ns = '',
                recognized_rev_account__ns = '',
                rev_rec_end__ns = 'Charge Period Start',
                rev_rec_start__ns = 'Charge Period Start',
                rev_rec_template_type__ns = '',
                subsidiary__ns = '',
                sync_date__ns = '',
                product_rate_plan_id = '',
                accounting_code = '',
                apply_discount_to = 'ONETIME',
                bill_cycle_day = 56,
                bill_cycle_type = 'DefaultFromCustomer',
                billing_period = 'Month',
                billing_period_alignment = 'AlignToCharge',
                billing_timing = 'In Advance',
                charge_function = 'Standard',
                charge_model = 'Discount-Fixed Amount',
                charge_model_configuration = zuora_sdk.models.charge_model_configuration.ChargeModelConfiguration(
                    configuration_item = [
                        zuora_sdk.models.configuration_item.ConfigurationItem(
                            key = '', 
                            value = '', )
                        ], ),
                charge_type = 'OneTime',
                commitment_type = 'UNIT',
                credit_option = 'TimeBased',
                default_quantity = 1.337,
                deferred_revenue_account = '',
                delivery_schedule = zuora_sdk.models.delivery_schedule.DeliverySchedule(
                    frequency = 'Weekly', 
                    friday = True, 
                    monday = True, 
                    saturday = True, 
                    sunday = True, 
                    thursday = True, 
                    tuesday = True, 
                    wendesday = True, ),
                description = '',
                discount_level = 'rateplan',
                drawdown_rate = 1.337,
                drawdown_uom = '',
                end_date_condition = 'SubscriptionEnd',
                exclude_item_billing_from_revenue_accounting = True,
                exclude_item_booking_from_revenue_accounting = True,
                revenue_recognition_timing = '',
                revenue_amortization_method = '',
                included_units = 1.337,
                is_prepaid = True,
                is_rollover = True,
                is_stacked_discount = True,
                legacy_revenue_reporting = True,
                list_price_base = 'Per Billing Period',
                min_quantity = 1.337,
                max_quantity = 1.337,
                name = '',
                number_of_period = 56,
                overage_calculation_option = 'EndOfSmoothingPeriod',
                overage_unused_units_credit_option = 'NoCredit',
                prepaid_operation_type = 'topup',
                prepaid_quantity = 1.337,
                prepaid_total_quantity = 1.337,
                prepaid_uom = '',
                price_change_option = 'NoChange',
                price_increase_option = 'FromTenantPercentageValue',
                price_increase_percentage = 1.337,
                product_rate_plan_charge_number = '',
                product_rate_plan_charge_tier_data = zuora_sdk.models.product_rate_plan_charge_tier_data.ProductRatePlanChargeTierData(
                    product_rate_plan_charge_tier = [
                        zuora_sdk.models.product_rate_plan_charge_tier.ProductRatePlanChargeTier(
                            currency = '', 
                            discount_amount = 1.337, 
                            discount_percentage = 1.337, 
                            ending_unit = 1.337, 
                            is_overage_price = True, 
                            price = 1.337, 
                            price_format = 'Flat Fee', 
                            starting_unit = 1.337, )
                        ], ),
                rating_group = 'ByBillingPeriod',
                recognized_revenue_account = '',
                rev_rec_code = '',
                rev_rec_trigger_condition = 'ContractEffectiveDate',
                revenue_recognition_rule_name = 'Recognize upon invoicing',
                rollover_apply = 'ApplyFirst',
                rollover_periods = 1.337,
                smoothing_model = 'RollingWindow',
                specific_billing_period = 56,
                specific_list_price_base = 1,
                tax_code = '',
                tax_mode = 'TaxInclusive',
                taxable = True,
                trigger_event = 'ContractEffective',
                uom = '',
                up_to_periods = 56,
                up_to_periods_type = 'Billing Periods',
                usage_record_rating_option = 'EndOfBillingPeriod',
                use_discount_specific_accounting_code = True,
                use_tenant_default_for_price_change = True,
                validity_period_type = 'SUBSCRIPTION_TERM',
                weekly_bill_cycle_day = 'Sunday'
            )
        else:
            return CreateProductRatePlanChargeRequest(
                product_rate_plan_id = '',
                bill_cycle_type = 'DefaultFromCustomer',
                billing_period = 'Month',
                charge_model = 'Discount-Fixed Amount',
                charge_type = 'OneTime',
                name = '',
                product_rate_plan_charge_tier_data = zuora_sdk.models.product_rate_plan_charge_tier_data.ProductRatePlanChargeTierData(
                    product_rate_plan_charge_tier = [
                        zuora_sdk.models.product_rate_plan_charge_tier.ProductRatePlanChargeTier(
                            currency = '', 
                            discount_amount = 1.337, 
                            discount_percentage = 1.337, 
                            ending_unit = 1.337, 
                            is_overage_price = True, 
                            price = 1.337, 
                            price_format = 'Flat Fee', 
                            starting_unit = 1.337, )
                        ], ),
                trigger_event = 'ContractEffective',
                use_discount_specific_accounting_code = True,
        )
        """

    def testCreateProductRatePlanChargeRequest(self):
        """Test CreateProductRatePlanChargeRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
