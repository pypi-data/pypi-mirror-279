# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.post_create_data_backfill_job_request import POSTCreateDataBackfillJobRequest

class TestPOSTCreateDataBackfillJobRequest(unittest.TestCase):
    """POSTCreateDataBackfillJobRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> POSTCreateDataBackfillJobRequest:
        """Test POSTCreateDataBackfillJobRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `POSTCreateDataBackfillJobRequest`
        """
        model = POSTCreateDataBackfillJobRequest()
        if include_optional:
            return POSTCreateDataBackfillJobRequest(
                type = zuora_sdk.models.job.Job(
                    id = '', 
                    import_type = 'ProductRatePlanCharge', 
                    uploaded_file_id = '', 
                    uploaded_file_name = '', 
                    uploaded_file_url = '', 
                    uploaded_file_size = '', 
                    input_file_size = 56, 
                    output_size = '', 
                    output_type = '', 
                    output_file_size = 56, 
                    uploaded_by = '', 
                    uploaded_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    completed_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    started_processing_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    result_file_id = '', 
                    result_file_name = '', 
                    result_file_url = '', 
                    total_count = 56, 
                    failed_count = 56, 
                    status = 'Pending', 
                    failure_message = '', 
                    processed_count = 56, 
                    success_count = 56, 
                    remaining_time = 56, 
                    remaining_time_text = '', 
                    completed_percentage = 56, ),
                file = bytes(b'blah'),
                checksum = '012345678910111213141516171819202122232425262728293031'
            )
        else:
            return POSTCreateDataBackfillJobRequest(
                type = zuora_sdk.models.job.Job(
                    id = '', 
                    import_type = 'ProductRatePlanCharge', 
                    uploaded_file_id = '', 
                    uploaded_file_name = '', 
                    uploaded_file_url = '', 
                    uploaded_file_size = '', 
                    input_file_size = 56, 
                    output_size = '', 
                    output_type = '', 
                    output_file_size = 56, 
                    uploaded_by = '', 
                    uploaded_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    completed_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    started_processing_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    result_file_id = '', 
                    result_file_name = '', 
                    result_file_url = '', 
                    total_count = 56, 
                    failed_count = 56, 
                    status = 'Pending', 
                    failure_message = '', 
                    processed_count = 56, 
                    success_count = 56, 
                    remaining_time = 56, 
                    remaining_time_text = '', 
                    completed_percentage = 56, ),
                file = bytes(b'blah'),
        )
        """

    def testPOSTCreateDataBackfillJobRequest(self):
        """Test POSTCreateDataBackfillJobRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
