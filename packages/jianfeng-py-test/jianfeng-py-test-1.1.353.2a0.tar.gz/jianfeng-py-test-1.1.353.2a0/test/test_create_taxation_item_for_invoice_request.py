# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.create_taxation_item_for_invoice_request import CreateTaxationItemForInvoiceRequest

class TestCreateTaxationItemForInvoiceRequest(unittest.TestCase):
    """CreateTaxationItemForInvoiceRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateTaxationItemForInvoiceRequest:
        """Test CreateTaxationItemForInvoiceRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateTaxationItemForInvoiceRequest`
        """
        model = CreateTaxationItemForInvoiceRequest()
        if include_optional:
            return CreateTaxationItemForInvoiceRequest(
                exempt_amount = 1,
                finance_information = zuora_sdk.models.tax_items_finance_information.TaxItemsFinanceInformation(
                    accounts_receivable_accounting_code = '', 
                    sales_tax_payable_accounting_code = '', ),
                invoice_item_id = '',
                jurisdiction = '',
                location_code = '',
                name = '',
                tax_amount = 1,
                applicable_tax_un_rounded = 1,
                country = '',
                tax_code = '',
                tax_code_description = '',
                tax_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                tax_mode = 'TaxInclusive',
                tax_rate = 1,
                tax_rate_description = '',
                tax_rate_type = 'Percentage'
            )
        else:
            return CreateTaxationItemForInvoiceRequest(
                invoice_item_id = '',
                jurisdiction = '',
                name = '',
                tax_amount = 1,
                tax_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                tax_rate = 1,
                tax_rate_type = 'Percentage',
        )
        """

    def testCreateTaxationItemForInvoiceRequest(self):
        """Test CreateTaxationItemForInvoiceRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
