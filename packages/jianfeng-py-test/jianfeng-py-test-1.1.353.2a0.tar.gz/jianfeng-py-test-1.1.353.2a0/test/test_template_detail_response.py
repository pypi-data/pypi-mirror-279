# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.template_detail_response import TemplateDetailResponse

class TestTemplateDetailResponse(unittest.TestCase):
    """TemplateDetailResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplateDetailResponse:
        """Test TemplateDetailResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplateDetailResponse`
        """
        model = TemplateDetailResponse()
        if include_optional:
            return TemplateDetailResponse(
                active = True,
                content = {"settings":[{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]},{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]}],"dataAccessControl":[{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]},{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]}],"customFields":[{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]},{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]}],"customObjects":[{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]},{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]}],"workflows":[{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]},{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]}],"notifications":[{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]},{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]}],"productCatalog":[{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]},{"segregationKeys":["segregationKeys","segregationKeys"],"originalPayload":"{}","response":[{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"},{"result":"result","componentType":"componentType","method":"method","payload":"{}","id":"id","error":"error","templateId":"templateId","key":"key","segregationKey":"segregationKey","url":"url"}],"errors":["errors","errors"]}]},
                created_by = '',
                created_on = '',
                description = '',
                entity_name = '',
                environment = '',
                errors = '',
                id = '',
                name = '',
                status = '',
                tenant_name = ''
            )
        else:
            return TemplateDetailResponse(
        )
        """

    def testTemplateDetailResponse(self):
        """Test TemplateDetailResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
