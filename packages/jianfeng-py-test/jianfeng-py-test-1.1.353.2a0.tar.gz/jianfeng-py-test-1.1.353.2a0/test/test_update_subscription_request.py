# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.update_subscription_request import UpdateSubscriptionRequest

class TestUpdateSubscriptionRequest(unittest.TestCase):
    """UpdateSubscriptionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateSubscriptionRequest:
        """Test UpdateSubscriptionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateSubscriptionRequest`
        """
        model = UpdateSubscriptionRequest()
        if include_optional:
            return UpdateSubscriptionRequest(
                cpq_bundle_json_id__qt = '',
                opportunity_close_date__qt = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                opportunity_name__qt = '',
                quote_business_type__qt = '',
                quote_number__qt = '',
                quote_type__qt = '',
                integration_id__ns = '',
                integration_status__ns = '',
                project__ns = '',
                sales_order__ns = '',
                sync_date__ns = '',
                add = [
                    null
                    ],
                application_order = [
                    ''
                    ],
                apply_credit = True,
                apply_credit_balance = True,
                auto_renew = True,
                booking_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                change = [
                    null
                    ],
                collect = True,
                credit_memo_reason_code = '',
                current_term = 56,
                current_term_period_type = '',
                document_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                externally_managed_by = 'Amazon',
                include_existing_draft_doc_items = True,
                include_existing_draft_invoice_items = True,
                invoice = True,
                invoice_collect = True,
                invoice_separately = True,
                invoice_target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                notes = '',
                preview = True,
                preview_type = '',
                remove = [
                    zuora_sdk.models.remove.remove(
                        booking_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        contract_effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        customer_acceptance_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        external_catalog_plan_id = '', 
                        external_id_source_system = '', 
                        product_rate_plan_number = '', 
                        rate_plan_id = '', 
                        service_activation_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        subscription_rate_plan_number = '', )
                    ],
                renewal_setting = '',
                renewal_term = 56,
                renewal_term_period_type = '',
                run_billing = True,
                target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                term_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                term_type = '',
                update = [
                    null
                    ]
            )
        else:
            return UpdateSubscriptionRequest(
        )
        """

    def testUpdateSubscriptionRequest(self):
        """Test UpdateSubscriptionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
