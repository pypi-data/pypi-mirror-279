# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.account_summary_response import AccountSummaryResponse

class TestAccountSummaryResponse(unittest.TestCase):
    """AccountSummaryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountSummaryResponse:
        """Test AccountSummaryResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountSummaryResponse`
        """
        model = AccountSummaryResponse()
        if include_optional:
            return AccountSummaryResponse(
                basic_info = { },
                bill_to_contact = { },
                invoices = [
                    zuora_sdk.models.invoices.invoices(
                        amount = 1.337, 
                        balance = 1.337, 
                        due_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        id = '', 
                        invoice_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        invoice_number = '', 
                        status = 'Draft', )
                    ],
                payments = [
                    {"paidInvoices":[{"appliedPaymentAmount":"appliedPaymentAmount","invoiceNumber":"invoiceNumber","invoiceId":"invoiceId"},{"appliedPaymentAmount":"appliedPaymentAmount","invoiceNumber":"invoiceNumber","invoiceId":"invoiceId"}],"id":"id","effectiveDate":"2000-01-23","paymentNumber":"paymentNumber","paymentType":"paymentType","status":"status"}
                    ],
                sold_to_contact = { },
                subscriptions = [
                    null
                    ],
                success = True,
                tax_info = zuora_sdk.models.tax_info.taxInfo(
                    company_code = '', 
                    exempt_entity_use_code = '', 
                    exempt_certificate_id = '', 
                    exempt_certificate_type = '', 
                    exempt_description = '', 
                    exempt_effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    exempt_expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    exempt_issuing_jurisdiction = '', 
                    exempt_status = 'No', 
                    vatid = '', ),
                usage = [
                    {"quantity":"quantity","unitOfMeasure":"unitOfMeasure","startDate":"2000-01"}
                    ]
            )
        else:
            return AccountSummaryResponse(
        )
        """

    def testAccountSummaryResponse(self):
        """Test AccountSummaryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
