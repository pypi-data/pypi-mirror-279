# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zuora_sdk.models.get_query_notification_definitions200_response import GetQueryNotificationDefinitions200Response

class TestGetQueryNotificationDefinitions200Response(unittest.TestCase):
    """GetQueryNotificationDefinitions200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetQueryNotificationDefinitions200Response:
        """Test GetQueryNotificationDefinitions200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetQueryNotificationDefinitions200Response`
        """
        model = GetQueryNotificationDefinitions200Response()
        if include_optional:
            return GetQueryNotificationDefinitions200Response(
                next = '/notification-definitions?start=1&limit=10',
                data = [
                    {"active":true,"associatedAccount":"ParentAccount.Id","callout":{"active":true,"calloutAuth":{"domain":"example_domain","password":"example_password","preemptive":true,"username":"example_user"},"calloutBaseurl":"https://www.example.com/callout/AccountEdit","calloutParams":{"AccountName":"<Account.Name>","AccountNumber":"<Account.AccountNumber>"},"calloutRetry":true,"description":"Callout when an account is edited","eventTypeName":"AccountEdit","httpMethod":"POST","id":"6e569e1e05f040eda51a927b140c0ac7","name":"Callout for Account Edited","requiredAuth":true},"calloutActive":true,"communicationProfileId":"6e569e1e05f040eda51a927b140c0ac5","createdBy":"6e569e1e05f040eda51a927b140c0ac3","createdOn":"2017-04-18T07:36:19.798Z","description":"Notification sent out when an account is edited","emailActive":true,"emailTemplateId":"6e569e1e05f040eda51a927b140c0ac6","eventTypeName":"AccountEdit","filterRule":{"condition":"Account.Balance >= _VIP_BALANCE_AMOUNT && Account.Status == _ACCOUNT_STATUS","description":"Filter rule to test if an account is a VIP account","id":"6e569e1e05f040eda51a927b140c0ac8","parameters":{"_ACCOUNT_STATUS":{"description":"The status of the VIP Account","displayName":"VIP Account Status","options":["Draft","Active","Canceled"],"valueType":"STRING"},"_VIP_BALANCE_AMOUNT":{"description":"The minimum account balance","displayName":"VIP Account Balance","valueType":"BIG_DECIMAL"}}},"filterRuleParams":{"_ACCOUNT_STATUS":"Active","_VIP_ACCOUNT_BALANCE":"100000"},"id":"6e569e1e05f040eda51a927b140c0ac2","name":"Account Edit Notification","updatedBy":"6e569e1e05f040eda51a927b140c0ac4","updatedOn":"2017-04-18T07:36:19.798Z"}
                    ]
            )
        else:
            return GetQueryNotificationDefinitions200Response(
        )
        """

    def testGetQueryNotificationDefinitions200Response(self):
        """Test GetQueryNotificationDefinitions200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
