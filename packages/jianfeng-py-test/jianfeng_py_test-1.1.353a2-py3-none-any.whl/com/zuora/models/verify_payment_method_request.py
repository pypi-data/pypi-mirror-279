# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr
from com.zuora.models.gateway_options import GatewayOptions

class VerifyPaymentMethodRequest(BaseModel):
    """
    VerifyPaymentMethodRequest
    """
    currency_code: Optional[StrictStr] = Field(None, alias="currencyCode", description="The currency used for payment method authorization.  ")
    gateway_options: Optional[GatewayOptions] = Field(None, alias="gatewayOptions")
    payment_gateway_name: Optional[StrictStr] = Field(None, alias="paymentGatewayName", description="The name of the payment gateway instance. If no value is specified for this field, the default payment gateway of the customer account will be used. ")
    security_code: Optional[StrictStr] = Field(None, alias="securityCode", description="The CVV or CVV2 security code for the credit card or debit card. To ensure PCI compliance, the value of this field is not stored and cannot be queried. ")
    __properties = ["currencyCode", "gatewayOptions", "paymentGatewayName", "securityCode"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> VerifyPaymentMethodRequest:
        """Create an instance of VerifyPaymentMethodRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of gateway_options
        if self.gateway_options:
            _dict['gatewayOptions'] = self.gateway_options.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> VerifyPaymentMethodRequest:
        """Create an instance of VerifyPaymentMethodRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return VerifyPaymentMethodRequest.parse_obj(obj)

        _obj = VerifyPaymentMethodRequest.parse_obj({
            "currency_code": obj.get("currencyCode"),
            "gateway_options": GatewayOptions.from_dict(obj.get("gatewayOptions")) if obj.get("gatewayOptions") is not None else None,
            "payment_gateway_name": obj.get("paymentGatewayName"),
            "security_code": obj.get("securityCode")
        })
        return _obj


