# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).

    The version of the OpenAPI document: 2023-10-24
    Contact: docs@zuora.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class OrderActionRatePlanRemoveProduct(BaseModel):
    """
    Information about an order action of type `RemoveProduct`.   # noqa: E501
    """
    rate_plan_id: Optional[StrictStr] = Field(None, alias="ratePlanId", description="Internal identifier of the rate plan to remove. ")
    unique_token: Optional[StrictStr] = Field(None, alias="uniqueToken", description="A unique string to represent the rate plan charge in the order. The unique token is used to perform multiple actions against a newly added rate plan. For example, if you want to add and update a product in the same order, you would assign a unique token to the product rate plan when added and use that token in future order actions.A unique string in the order to represent the rate plan.")
    __properties = ["ratePlanId", "uniqueToken"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> OrderActionRatePlanRemoveProduct:
        """Create an instance of OrderActionRatePlanRemoveProduct from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> OrderActionRatePlanRemoveProduct:
        """Create an instance of OrderActionRatePlanRemoveProduct from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return OrderActionRatePlanRemoveProduct.parse_obj(obj)

        _obj = OrderActionRatePlanRemoveProduct.parse_obj({
            "rate_plan_id": obj.get("ratePlanId"),
            "unique_token": obj.get("uniqueToken")
        })
        return _obj


