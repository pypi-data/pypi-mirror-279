Metadata-Version: 2.1
Name: pyspark-testframework
Version: 1.1.0
Summary: Testframework for PySpark DataFrames
Author-email: Woonstad Rotterdam <info@woonstadrotterdam.nl>, Tomer Gabay <tomer.gabay@woonstadrotterdam.nl>, Vincent van der Meij <vincent.van.der.meij@woonstadrotterdam.nl>, Tiddo Loos <tiddo.loos@woonstadrotterdam.nl>, Ben Verhees <ben.verhees@woonstadrotterdam.nl>
License: MIT License
        
        Copyright (c) 2024 Woonstad Rotterdam
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/woonstadrotterdam/pyspark-testframework
Project-URL: Issues, https://github.com/woonstadrotterdam/pyspark-testframework/issues
Keywords: pyspark,dataframe,test,testframework
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9.5
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pyspark >=3.3.4
Provides-Extra: dev
Requires-Dist: pyspark-testframework[test] ; extra == 'dev'
Requires-Dist: ruff ==0.4.8 ; extra == 'dev'
Provides-Extra: test
Requires-Dist: pre-commit ==3.7.1 ; extra == 'test'
Requires-Dist: pytest ==8.2.2 ; extra == 'test'

![](https://img.shields.io/pypi/pyversions/pyspark-testframework)
![Build Status](https://github.com/woonstadrotterdam/pyspark-testframework/actions/workflows/cicd.yml/badge.svg)
[![Version](https://img.shields.io/pypi/v/pyspark-testframework)](https://pypi.org/project/pyspark-testframework/)
![](https://img.shields.io/github/license/woonstadrotterdam/pyspark-testframework)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)

# pyspark-testframework

‚è≥ **Work in progress**

![](https://progress-bar.dev/100/?title=RegexTest&width=120)  
![](https://progress-bar.dev/100/?title=IsIntegerString&width=83)  
![](https://progress-bar.dev/100/?title=ValidNumericRange&width=72)  
![](https://progress-bar.dev/100/?title=ValidCategory&width=95)  
![](https://progress-bar.dev/50/?title=ValidEmail&width=113)  
![](https://progress-bar.dev/0/?title=ContainsValue&width=95)  
![](https://progress-bar.dev/0/?title=CorrectValue&width=102)  
![](<https://progress-bar.dev/0/?title=(...)&width=145>)

The goal of the `pyspark-testframework` is to provide a simple way to create tests for PySpark DataFrames. The test results are returned in DataFrame format as well.

## Example

Input DataFrame:

| primary_key | email                     | number |
| ----------- | ------------------------- | ------ |
| 1           | info@woonstadrotterdam.nl | 123    |
| 2           | infowoonstadrotterdam.nl  | 01     |
| 3           | @woonstadrotterdam.nl     | -45    |
| 4           | dev@woonstadrotterdam.nl  | 1.0    |
| 5           | Null                      | Null   |

```python
from testframework.tests import RegexTest, IsIntegerString

# test for valid email addresses
email_regex = r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"

mail_tester = RegexTest(
    name="ValidEmail",
    pattern=email_regex
)

test_result_email = mail_tester.test(
    df=df,
    col="email",
    primary_key="primary_key",
    nullable=False
)

# test for integer strings
integer_string_tester = IsIntegerString()

test_result_number = number_tester.test(
    df=df,
    col="number",
    primary_key="primary_key",
    nullable=True
)

test_result_email.show()
test_result_number.show()
```

Output for ValidEmail:

| primary_key | email                     | email\_\_ValidEmail |
| ----------- | ------------------------- | ------------------- |
| 1           | info@woonstadrotterdam.nl | True                |
| 2           | infowoonstadrotterdam.nl  | False               |
| 3           | @woonstadrotterdam.nl     | False               |
| 4           | dev@woonstadrotterdam.nl  | True                |
| 5           | Null                      | False               |

Output for IsIntegerString:

| primary_key | number | number\_\_IsIntegerString |
| ----------- | ------ | ------------------------- |
| 1           | 123    | True                      |
| 2           | 01     | False                     |
| 3           | -45    | True                      |
| 4           | 1.0    | True                      |
| 5           | Null   | True                      |
