[tool.poetry]
name = "drakaina"
version = "0.7.6"
description = "Module for simple RPC service implementation"
authors = ["Aleksey Terentyev <terentyev.a@pm.me>"]
license = "Apache License 2.0"
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]
keywords = ["rpc", "jsonrpc", "openrpc"]
homepage  = "https://gitlab.com/tau_lex/drakaina"
repository = "https://gitlab.com/tau_lex/drakaina"

[project.urls]
"Bug Tracker" = "https://gitlab.com/tau_lex/drakaina/-/issues"

[tool.poetry.dependencies]
python = "^3.9"
typing-extensions = "^4.6.2"
msgpack = { version = "^1.0.5", optional = true }
orjson = { version = "^3.8.14", optional = true }
ujson = { version = "^5.7.0", optional = true }
pyjwt = { version = "^2.7.0", optional = true }
docstring-parser = { version = "^0.15", optional = true }

[tool.poetry.extras]
jwt = ["PyJWT"]
ujson = ["ujson"]
orjson = ["orjson"]
msgpack = ["msgpack"]
docs = ["docstring-parser"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = {extras = ["d"], version = "^24.4.2"}
pre-commit = "^3.7.0"
ruff = "^0.1.15"
msgpack = "^1.0.8"
orjson = "^3.10.3"
ujson = "^5.9.0"
pyjwt = "^2.8.0"
django = ">=3.2"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"
httpx = "^0.27.0"

[tool.pytest.ini_options]
cache_dir = ".pytest_cache"
testpaths = "tests"
addopts = "-vl --cov=drakaina --cov-report=term-missing --tb=auto --capture=sys"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

exclude = [
    ".git",
    ".idea",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "content",
    "dist",
    "venv",
]
per-file-ignores = {}

# Same as Black.
line-length = 80

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.black]
target-version = ["py39"]
line-length = 80

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
