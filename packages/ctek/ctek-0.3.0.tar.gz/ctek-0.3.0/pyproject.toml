[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "ctek"
description = "Python library to interact with multiple CTEK products through their open API:s"
authors = [
    { name = "Carl Westman", email = "carl.westman@ctek.com" },
]
readme = "README.md"
requires-python = ">=3.10"
dynamic = []
dependencies = [
    "aiohttp~=3.9.5",
]
version = "0.3.0"

[project.urls]
Repository = "https://github.com/Wesztman/get-py-deps"

[project.optional-dependencies]
lint = [
    "ruff~=0.3.7",
    "mypy~=1.9.0",
    "pyright~=1.1.352",
]
test = [
    "pytest~=8.1.1",
    "pytest-cov~=5.0.0",
    "coverage[toml]~=7.4.4",
    "pytest-mock~=3.14.0",
    "pytest-sugar~=1.0.0",
    "pytest-asyncio~=0.23.7",
]
dev = [
    "pre-commit~=3.5.0",
    "ctek[lint]",
    "ctek[test]",
]

[tool.pdm.version]
source = "scm"

[tool.pdm.scripts._add-title]
shell = "echo '\\e[35m##################################### {args} #####################################\\e[0m'"

[tool.pdm.scripts._print-python-version]
shell = "python --version"

[tool.pdm.scripts._print-success]
shell = "echo '\n\\e[32m{args}\\e[0m'"

[tool.pdm.scripts.pre_run]
composite = [
    "_add-title 'Checking dependencies'",
    "pdm sync -G dev",
    "_print-python-version",
]
help = "Check and install dependencies, run automatically before each `pdm run`"

[tool.pdm.scripts.test]
composite = [
    "_add-title 'Running Pytest'",
    "pytest {args:tests/ --cov src/ctek --cov-report term --cov-report html}",
]
help = "Run pytest with coverage report"

[tool.pdm.scripts._precommit]
shell = "pre-commit run --all-files"

[tool.pdm.scripts._mypy-typecheck]
shell = "mypy ."

[tool.pdm.scripts._pyright-typecheck]
shell = "pyright ."

[tool.pdm.scripts.lint]
composite = [
    "_add-title 'Running linting'",
    "_precommit",
    "_mypy-typecheck",
    "_pyright-typecheck",
]
help = "Run linting incl. pre-commit, typechecks, ruff format, lint and lock file check"

[tool.pdm.scripts.build]
composite = [
    "_add-title 'Building package'",
    "pdm build",
]
help = "Build the package in the dist/ directory"

[tool.pdm.scripts.all]
composite = [
    "lint",
    "test",
    "build",
    "_print-success 'ðŸŽ‰ðŸŽ‰ All checks passed ðŸŽ‰ðŸŽ‰'",
]
help = "Run all tests and checks, as well as building the package"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.ruff]
src = [
    "src",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "UP",
    "B",
    "SIM",
    "I",
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**" = [
    "S101",
    "D103",
]
"**/__init__.py" = [
    "F401",
    "F403",
]
"docs/**" = [
    "INP001",
]

[tool.mypy]
disallow_untyped_defs = true
warn_unused_ignores = true
exclude = [
    ".venv/",
    "dist/",
    "tests/",
]

[tool.coverage.run]
omit = [
    "*tests*",
]
