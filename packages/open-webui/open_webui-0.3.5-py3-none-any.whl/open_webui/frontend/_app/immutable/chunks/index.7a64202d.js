import{R as i}from"./index.92b94e22.js";const l=async a=>{let n=null;const e=await fetch(`${i}/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e},h=async(a,n)=>{let e=null;const t=await fetch(`${i}/config/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o.detail,null));if(e)throw e;return t},u=async a=>{let n=null;const e=await fetch(`${i}/query/settings`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e},d=async(a,n)=>{let e=null;const t=await fetch(`${i}/query/settings/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o.detail,null));if(e)throw e;return t},p=async(a,n,e)=>{const t=new FormData;t.append("file",e),t.append("collection_name",n);let o=null;const r=await fetch(`${i}/doc`,{method:"POST",headers:{Accept:"application/json",authorization:`Bearer ${a}`},body:t}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(o=c.detail,console.log(c),null));if(o)throw o;return r},f=async(a,n,e)=>{let t=null;const o=await fetch(`${i}/web`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({url:e,collection_name:n})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(t=r.detail,console.log(r),null));if(t)throw t;return o},w=async(a,n)=>{let e=null;const t=await fetch(`${i}/youtube`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({url:n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(e=o.detail,console.log(o),null));if(e)throw e;return t},y=async a=>{let n=null;const e=await fetch(`${i}/scan`,{method:"GET",headers:{Accept:"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,null));if(n)throw n;return e},j=async a=>{let n=null;const e=await fetch(`${i}/reset/uploads`,{method:"GET",headers:{Accept:"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,null));if(n)throw n;return e},g=async a=>{let n=null;const e=await fetch(`${i}/reset`,{method:"GET",headers:{Accept:"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,null));if(n)throw n;return e},T=async a=>{let n=null;const e=await fetch(`${i}/embedding`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e},$=async(a,n)=>{let e=null;const t=await fetch(`${i}/embedding/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o.detail,null));if(e)throw e;return t},m=async a=>{let n=null;const e=await fetch(`${i}/reranking`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e},k=async(a,n)=>{let e=null;const t=await fetch(`${i}/reranking/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o.detail,null));if(e)throw e;return t},A=async(a,n,e)=>{let t=null;const o=await fetch(`${i}/web/search`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({query:n,collection_name:e??""})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return o};export{l as a,h as b,d as c,T as d,m as e,g as f,u as g,$ as h,p as i,f as j,w as k,A as l,j as r,y as s,k as u};
//# sourceMappingURL=index.7a64202d.js.map
