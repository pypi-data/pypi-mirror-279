[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "capiche"
authors = [
    {name = "Erik Williamson", email = "erik.williamson@gmail.com"},
]
description = "A Library for Throttling Requests to Functions"
keywords = ["throttle", "rate-limit", "api"]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dynamic = ["version"]

[project.optional-dependencies]
testing = [
    "pytest",
    "coverage",
    "pytest-cov",
    "pytest-mock"
]
development = [
    "faker",
    "mypy",
    "flake8",
    "black",
    "isort",
    "pre-commit",
    "vulture",
    "pylint",
    "pylint-pydantic",
    "pyright",
    "ruff",
    "icecream",
    "bpython"
]
examples = ["rich"]

[tool.setuptools.dynamic]
version = {attr = "capiche.__version__"}

[tool.ruff]
line-length = 120

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = [
    "tests"
]
markers = ["wip"]
asyncio_mode = "auto"

[tool.mypy]
plugins = ["pydantic.mypy", "sqlmypy"]
ignore_missing_imports = true
disallow_untyped_defs = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120
import_heading_stdlib = "Standard Library Imports"
import_heading_thirdparty = "3rd-Party Imports"
import_heading_firstparty = "Application-Local Imports"
import_heading_future = "Future Imports"
import_heading_localfolder = "Local Folder Imports"

[tool.pyright]
include = ["src"]

[tool.black]
line-length = 120

[project.urls]
Homepage = "https://github.com/erikwilliamson/capiche"
Issues = "https://github.com/erikwilliamson/capiche/issues"

[tool.pylint.MASTER]
load-plugins = "pylint_pydantic"

[tool.pylint."messages control"]
disable = [
    "invalid-name",
    "fixme",
    "use-dict-literal",
    "duplicate-code",
    "logging-fstring-interpolation",
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
    "too-many-ancestors"
]
extension-pkg-whitelist = "pydantic"
overgeneral-exceptions = [
    "builtins.BaseException",
    "builtins.Exception"
]

[tool.pylint.format]
max-line-length = 120

[tool.vulture]
min_confidence = 80

[tool.coverage.report]
sort = "Cover"
skip_covered = true

[tool.coverage.run]
omit = [
    # omit anything in the examples directory
    "src/capiche/examples/*"
    ]