"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
*
Copyright 2020 Alibaba Group Holding Limited.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import collections.abc
import common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Argument(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARAM_NAME_FIELD_NUMBER: builtins.int
    PARAM_IND_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    param_name: builtins.str
    """param name"""
    param_ind: builtins.int
    """index of param"""
    @property
    def value(self) -> common_pb2.Value:
        """real value"""

    def __init__(
        self,
        *,
        param_name: builtins.str = ...,
        param_ind: builtins.int = ...,
        value: common_pb2.Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["param_ind", b"param_ind", "param_name", b"param_name", "value", b"value"]) -> None: ...

global___Argument = Argument

@typing.final
class Query(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUERY_NAME_FIELD_NUMBER: builtins.int
    ARGUMENTS_FIELD_NUMBER: builtins.int
    @property
    def query_name(self) -> common_pb2.NameOrId: ...
    @property
    def arguments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Argument]: ...
    def __init__(
        self,
        *,
        query_name: common_pb2.NameOrId | None = ...,
        arguments: collections.abc.Iterable[global___Argument] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["query_name", b"query_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["arguments", b"arguments", "query_name", b"query_name"]) -> None: ...

global___Query = Query
