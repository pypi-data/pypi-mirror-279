# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.user_controlled_wallets
from circle.web3.user_controlled_wallets.models.ext_wallet_response_wallet import ExtWalletResponseWallet  # noqa: E501
from circle.web3.user_controlled_wallets.rest import ApiException

class TestExtWalletResponseWallet(unittest.TestCase):
    """ExtWalletResponseWallet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ExtWalletResponseWallet
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExtWalletResponseWallet`
        """
        model = circle.web3.user_controlled_wallets.models.ext_wallet_response_wallet.ExtWalletResponseWallet()  # noqa: E501
        if include_optional :
            return ExtWalletResponseWallet(
                id = 'c4d1da72-111e-4d52-bdbf-2e74a2d803d5', 
                address = '', 
                blockchain = 'MATIC-AMOY', 
                create_date = '2023-01-01T12:04:05Z', 
                custody_type = 'DEVELOPER', 
                account_type = 'SCA', 
                name = 'my wallet', 
                ref_id = 'wallet123', 
                state = 'LIVE', 
                update_date = '2023-01-01T12:04:05Z', 
                user_id = 'ext_user_id_1', 
                wallet_set_id = '71f2a6b4-ffa7-417a-ad5b-fb928753edc8', 
                sca_core = 'Base MSCA V1'
            )
        else :
            return ExtWalletResponseWallet(
        )
        """

    def testExtWalletResponseWallet(self):
        """Test ExtWalletResponseWallet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
