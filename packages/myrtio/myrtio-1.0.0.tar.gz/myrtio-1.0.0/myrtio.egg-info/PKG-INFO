Metadata-Version: 2.1
Name: myrtio
Version: 1.0.0
Summary: MyrtIO protocol support for Python
Author-email: Mikhael Khrustik <misha@myrt.co>
License: MIT
Keywords: cli,command-line-tool
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Framework :: AsyncIO
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: asyncio-datagram==1.4.0

# MyrtIO Python [![GitHub release](https://img.shields.io/github/v/tag/MyrtIO/myrtio-py)](https://GitHub.com/MyrtIO/myrtio-py/releases/)


<!-- <img src="./docs/logo.svg" align="right" width="100" /> -->

Library for MyrtIO protocol support in Python.

Allows you to format and parse messages, as well as use ready-made transports.

<!-- ### Transports

- Serial
- ~~UDP~~ â€” not ready yet -->
<!-- 
## Usage

```go
func main() {
    port, err := serial.New(serialPath, serialBaudRate)
	if err != nil {
		log.Panic(err)
	}
    // Send ping
    response, err := m.port.RunAction(&myrtio.Message{
		Feature: 0,
		Action:  0,
	})
	if err != nil {
		log.Printf("Error: %v\n", err.Error())
	}
	defer port.Close()
}
``` -->
